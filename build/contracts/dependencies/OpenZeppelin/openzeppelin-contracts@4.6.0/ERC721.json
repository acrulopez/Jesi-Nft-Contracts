{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "10": "/Users/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/token/ERC721/ERC721.sol",
    "11": "/Users/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/token/ERC721/IERC721.sol",
    "12": "/Users/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/token/ERC721/IERC721Receiver.sol",
    "14": "/Users/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/token/ERC721/extensions/IERC721Metadata.sol",
    "15": "/Users/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/utils/Address.sol",
    "16": "/Users/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/utils/Context.sol",
    "18": "/Users/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/utils/Strings.sol",
    "19": "/Users/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/utils/introspection/ERC165.sol",
    "20": "/Users/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/utils/introspection/IERC165.sol"
  },
  "ast": {
    "absolutePath": "/Users/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/token/ERC721/ERC721.sol",
    "exportedSymbols": {
      "Address": [
        2161
      ],
      "Context": [
        1269
      ],
      "ERC165": [
        1496
      ],
      "ERC721": [
        3247
      ],
      "IERC165": [
        2311
      ],
      "IERC721": [
        3363
      ],
      "IERC721Metadata": [
        3408
      ],
      "IERC721Receiver": [
        3381
      ],
      "Strings": [
        1472
      ]
    },
    "id": 3248,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2383,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "107:23:10"
      },
      {
        "absolutePath": "/Users/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/token/ERC721/IERC721.sol",
        "file": "./IERC721.sol",
        "id": 2384,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3248,
        "sourceUnit": 3364,
        "src": "132:23:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/token/ERC721/IERC721Receiver.sol",
        "file": "./IERC721Receiver.sol",
        "id": 2385,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3248,
        "sourceUnit": 3382,
        "src": "156:31:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "file": "./extensions/IERC721Metadata.sol",
        "id": 2386,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3248,
        "sourceUnit": 3409,
        "src": "188:42:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/utils/Address.sol",
        "file": "../../utils/Address.sol",
        "id": 2387,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3248,
        "sourceUnit": 2162,
        "src": "231:33:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/utils/Context.sol",
        "file": "../../utils/Context.sol",
        "id": 2388,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3248,
        "sourceUnit": 1270,
        "src": "265:33:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/utils/Strings.sol",
        "file": "../../utils/Strings.sol",
        "id": 2389,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3248,
        "sourceUnit": 1473,
        "src": "299:33:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/utils/introspection/ERC165.sol",
        "file": "../../utils/introspection/ERC165.sol",
        "id": 2390,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3248,
        "sourceUnit": 1497,
        "src": "333:46:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2392,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1269,
              "src": "647:7:10"
            },
            "id": 2393,
            "nodeType": "InheritanceSpecifier",
            "src": "647:7:10"
          },
          {
            "baseName": {
              "id": 2394,
              "name": "ERC165",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1496,
              "src": "656:6:10"
            },
            "id": 2395,
            "nodeType": "InheritanceSpecifier",
            "src": "656:6:10"
          },
          {
            "baseName": {
              "id": 2396,
              "name": "IERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3363,
              "src": "664:7:10"
            },
            "id": 2397,
            "nodeType": "InheritanceSpecifier",
            "src": "664:7:10"
          },
          {
            "baseName": {
              "id": 2398,
              "name": "IERC721Metadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3408,
              "src": "673:15:10"
            },
            "id": 2399,
            "nodeType": "InheritanceSpecifier",
            "src": "673:15:10"
          }
        ],
        "canonicalName": "ERC721",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2391,
          "nodeType": "StructuredDocumentation",
          "src": "381:246:10",
          "text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
        },
        "fullyImplemented": true,
        "id": 3247,
        "linearizedBaseContracts": [
          3247,
          3408,
          3363,
          1496,
          2311,
          1269
        ],
        "name": "ERC721",
        "nameLocation": "637:6:10",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 2402,
            "libraryName": {
              "id": 2400,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2161,
              "src": "701:7:10"
            },
            "nodeType": "UsingForDirective",
            "src": "695:26:10",
            "typeName": {
              "id": 2401,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "713:7:10",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "global": false,
            "id": 2405,
            "libraryName": {
              "id": 2403,
              "name": "Strings",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1472,
              "src": "732:7:10"
            },
            "nodeType": "UsingForDirective",
            "src": "726:26:10",
            "typeName": {
              "id": 2404,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "744:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 2407,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "791:5:10",
            "nodeType": "VariableDeclaration",
            "scope": 3247,
            "src": "776:20:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2406,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "776:6:10",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2409,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "838:7:10",
            "nodeType": "VariableDeclaration",
            "scope": 3247,
            "src": "823:22:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2408,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "823:6:10",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2413,
            "mutability": "mutable",
            "name": "_owners",
            "nameLocation": "934:7:10",
            "nodeType": "VariableDeclaration",
            "scope": 3247,
            "src": "898:43:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 2412,
              "keyType": {
                "id": 2410,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "906:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "898:27:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 2411,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "917:7:10",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2417,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "1028:9:10",
            "nodeType": "VariableDeclaration",
            "scope": 3247,
            "src": "992:45:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 2416,
              "keyType": {
                "id": 2414,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1000:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "992:27:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 2415,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1011:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2421,
            "mutability": "mutable",
            "name": "_tokenApprovals",
            "nameLocation": "1129:15:10",
            "nodeType": "VariableDeclaration",
            "scope": 3247,
            "src": "1093:51:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 2420,
              "keyType": {
                "id": 2418,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1101:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1093:27:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 2419,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1112:7:10",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2427,
            "mutability": "mutable",
            "name": "_operatorApprovals",
            "nameLocation": "1252:18:10",
            "nodeType": "VariableDeclaration",
            "scope": 3247,
            "src": "1199:71:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 2426,
              "keyType": {
                "id": 2422,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1207:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1199:44:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueType": {
                "id": 2425,
                "keyType": {
                  "id": 2423,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1226:7:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1218:24:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 2424,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1237:4:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 2443,
              "nodeType": "Block",
              "src": "1446:57:10",
              "statements": [
                {
                  "expression": {
                    "id": 2437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2435,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2407,
                      "src": "1456:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2436,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2430,
                      "src": "1464:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1456:13:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2438,
                  "nodeType": "ExpressionStatement",
                  "src": "1456:13:10"
                },
                {
                  "expression": {
                    "id": 2441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2439,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2409,
                      "src": "1479:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2440,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2432,
                      "src": "1489:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1479:17:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2442,
                  "nodeType": "ExpressionStatement",
                  "src": "1479:17:10"
                }
              ]
            },
            "documentation": {
              "id": 2428,
              "nodeType": "StructuredDocumentation",
              "src": "1277:108:10",
              "text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
            },
            "id": 2444,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2433,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2430,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "1416:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2444,
                  "src": "1402:19:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2429,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1402:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2432,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "1437:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2444,
                  "src": "1423:21:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2431,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1423:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1401:44:10"
            },
            "returnParameters": {
              "id": 2434,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1446:0:10"
            },
            "scope": 3247,
            "src": "1390:113:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1495,
              2310
            ],
            "body": {
              "id": 2474,
              "nodeType": "Block",
              "src": "1678:192:10",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 2467,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 2460,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2455,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2447,
                          "src": "1707:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 2457,
                                "name": "IERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3363,
                                "src": "1727:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$3363_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$3363_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              ],
                              "id": 2456,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "1722:4:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 2458,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1722:13:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$3363",
                              "typeString": "type(contract IERC721)"
                            }
                          },
                          "id": 2459,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "1722:25:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "1707:40:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 2466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2461,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2447,
                          "src": "1763:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 2463,
                                "name": "IERC721Metadata",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3408,
                                "src": "1783:15:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$3408_$",
                                  "typeString": "type(contract IERC721Metadata)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$3408_$",
                                  "typeString": "type(contract IERC721Metadata)"
                                }
                              ],
                              "id": 2462,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "1778:4:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 2464,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1778:21:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$3408",
                              "typeString": "type(contract IERC721Metadata)"
                            }
                          },
                          "id": 2465,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "1778:33:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "1763:48:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "1707:104:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 2470,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2447,
                          "src": "1851:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 2468,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "1827:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_ERC721_$3247_$",
                            "typeString": "type(contract super ERC721)"
                          }
                        },
                        "id": 2469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1495,
                        "src": "1827:23:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 2471,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1827:36:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1707:156:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2454,
                  "id": 2473,
                  "nodeType": "Return",
                  "src": "1688:175:10"
                }
              ]
            },
            "documentation": {
              "id": 2445,
              "nodeType": "StructuredDocumentation",
              "src": "1509:56:10",
              "text": " @dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "id": 2475,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "1579:17:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2451,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 2449,
                  "name": "ERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1496,
                  "src": "1646:6:10"
                },
                {
                  "id": 2450,
                  "name": "IERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2311,
                  "src": "1654:7:10"
                }
              ],
              "src": "1637:25:10"
            },
            "parameters": {
              "id": 2448,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2447,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "1604:11:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2475,
                  "src": "1597:18:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 2446,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1597:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1596:20:10"
            },
            "returnParameters": {
              "id": 2454,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2453,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2475,
                  "src": "1672:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2452,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1672:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1671:6:10"
            },
            "scope": 3247,
            "src": "1570:300:10",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3288
            ],
            "body": {
              "id": 2498,
              "nodeType": "Block",
              "src": "2010:124:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2490,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2485,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2478,
                          "src": "2028:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2488,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2045:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2487,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2037:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2486,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2037:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2489,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2037:10:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2028:19:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
                        "id": 2491,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2049:44:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
                          "typeString": "literal_string \"ERC721: balance query for the zero address\""
                        },
                        "value": "ERC721: balance query for the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
                          "typeString": "literal_string \"ERC721: balance query for the zero address\""
                        }
                      ],
                      "id": 2484,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2020:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2020:74:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2493,
                  "nodeType": "ExpressionStatement",
                  "src": "2020:74:10"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 2494,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2417,
                      "src": "2111:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 2496,
                    "indexExpression": {
                      "id": 2495,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2478,
                      "src": "2121:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2111:16:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2483,
                  "id": 2497,
                  "nodeType": "Return",
                  "src": "2104:23:10"
                }
              ]
            },
            "documentation": {
              "id": 2476,
              "nodeType": "StructuredDocumentation",
              "src": "1876:48:10",
              "text": " @dev See {IERC721-balanceOf}."
            },
            "functionSelector": "70a08231",
            "id": 2499,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "1938:9:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2480,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1983:8:10"
            },
            "parameters": {
              "id": 2479,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2478,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1956:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2499,
                  "src": "1948:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2477,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1948:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1947:15:10"
            },
            "returnParameters": {
              "id": 2483,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2482,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2499,
                  "src": "2001:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2481,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2001:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2000:9:10"
            },
            "scope": 3247,
            "src": "1929:205:10",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3296
            ],
            "body": {
              "id": 2526,
              "nodeType": "Block",
              "src": "2272:154:10",
              "statements": [
                {
                  "assignments": [
                    2509
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2509,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "2290:5:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 2526,
                      "src": "2282:13:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2508,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2282:7:10",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2513,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2510,
                      "name": "_owners",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2413,
                      "src": "2298:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 2512,
                    "indexExpression": {
                      "id": 2511,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2502,
                      "src": "2306:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2298:16:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2282:32:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2515,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2509,
                          "src": "2332:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2518,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2349:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2517,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2341:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2516,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2341:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2519,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2341:10:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2332:19:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 2521,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2353:43:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
                          "typeString": "literal_string \"ERC721: owner query for nonexistent token\""
                        },
                        "value": "ERC721: owner query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
                          "typeString": "literal_string \"ERC721: owner query for nonexistent token\""
                        }
                      ],
                      "id": 2514,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2324:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2324:73:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2523,
                  "nodeType": "ExpressionStatement",
                  "src": "2324:73:10"
                },
                {
                  "expression": {
                    "id": 2524,
                    "name": "owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2509,
                    "src": "2414:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 2507,
                  "id": 2525,
                  "nodeType": "Return",
                  "src": "2407:12:10"
                }
              ]
            },
            "documentation": {
              "id": 2500,
              "nodeType": "StructuredDocumentation",
              "src": "2140:46:10",
              "text": " @dev See {IERC721-ownerOf}."
            },
            "functionSelector": "6352211e",
            "id": 2527,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerOf",
            "nameLocation": "2200:7:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2504,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2245:8:10"
            },
            "parameters": {
              "id": 2503,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2502,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2216:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2527,
                  "src": "2208:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2501,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2208:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2207:17:10"
            },
            "returnParameters": {
              "id": 2507,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2506,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2527,
                  "src": "2263:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2505,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2263:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2262:9:10"
            },
            "scope": 3247,
            "src": "2191:235:10",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3393
            ],
            "body": {
              "id": 2536,
              "nodeType": "Block",
              "src": "2557:29:10",
              "statements": [
                {
                  "expression": {
                    "id": 2534,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2407,
                    "src": "2574:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2533,
                  "id": 2535,
                  "nodeType": "Return",
                  "src": "2567:12:10"
                }
              ]
            },
            "documentation": {
              "id": 2528,
              "nodeType": "StructuredDocumentation",
              "src": "2432:51:10",
              "text": " @dev See {IERC721Metadata-name}."
            },
            "functionSelector": "06fdde03",
            "id": 2537,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "2497:4:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2530,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2524:8:10"
            },
            "parameters": {
              "id": 2529,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2501:2:10"
            },
            "returnParameters": {
              "id": 2533,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2532,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2537,
                  "src": "2542:13:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2531,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2542:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2541:15:10"
            },
            "scope": 3247,
            "src": "2488:98:10",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3399
            ],
            "body": {
              "id": 2546,
              "nodeType": "Block",
              "src": "2721:31:10",
              "statements": [
                {
                  "expression": {
                    "id": 2544,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2409,
                    "src": "2738:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2543,
                  "id": 2545,
                  "nodeType": "Return",
                  "src": "2731:14:10"
                }
              ]
            },
            "documentation": {
              "id": 2538,
              "nodeType": "StructuredDocumentation",
              "src": "2592:53:10",
              "text": " @dev See {IERC721Metadata-symbol}."
            },
            "functionSelector": "95d89b41",
            "id": 2547,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "2659:6:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2540,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2688:8:10"
            },
            "parameters": {
              "id": 2539,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2665:2:10"
            },
            "returnParameters": {
              "id": 2543,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2542,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2547,
                  "src": "2706:13:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2541,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2706:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2705:15:10"
            },
            "scope": 3247,
            "src": "2650:102:10",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3407
            ],
            "body": {
              "id": 2588,
              "nodeType": "Block",
              "src": "2906:241:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2558,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2550,
                            "src": "2932:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2557,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2820,
                          "src": "2924:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2924:16:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 2560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2942:49:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        },
                        "value": "ERC721Metadata: URI query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        }
                      ],
                      "id": 2556,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2916:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2916:76:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2562,
                  "nodeType": "ExpressionStatement",
                  "src": "2916:76:10"
                },
                {
                  "assignments": [
                    2564
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2564,
                      "mutability": "mutable",
                      "name": "baseURI",
                      "nameLocation": "3017:7:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 2588,
                      "src": "3003:21:10",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 2563,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "3003:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2567,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2565,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2598,
                      "src": "3027:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
                        "typeString": "function () view returns (string memory)"
                      }
                    },
                    "id": 2566,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3027:10:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3003:34:10"
                },
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2574,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2570,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2564,
                              "src": "3060:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 2569,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3054:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 2568,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "3054:5:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2571,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3054:14:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 2572,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "3054:21:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 2573,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3078:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3054:25:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "",
                      "id": 2585,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3138:2:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                        "typeString": "literal_string \"\""
                      },
                      "value": ""
                    },
                    "id": 2586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "3054:86:10",
                    "trueExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 2579,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2564,
                              "src": "3106:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 2580,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2550,
                                  "src": "3115:7:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2581,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1354,
                                "src": "3115:16:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 2582,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3115:18:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 2577,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "3089:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 2578,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "3089:16:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 2583,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3089:45:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 2576,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3082:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 2575,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3082:6:10",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2584,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3082:53:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 2555,
                  "id": 2587,
                  "nodeType": "Return",
                  "src": "3047:93:10"
                }
              ]
            },
            "documentation": {
              "id": 2548,
              "nodeType": "StructuredDocumentation",
              "src": "2758:55:10",
              "text": " @dev See {IERC721Metadata-tokenURI}."
            },
            "functionSelector": "c87b56dd",
            "id": 2589,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "2827:8:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2552,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2873:8:10"
            },
            "parameters": {
              "id": 2551,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2550,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2844:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2589,
                  "src": "2836:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2549,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2836:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2835:17:10"
            },
            "returnParameters": {
              "id": 2555,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2554,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2589,
                  "src": "2891:13:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2553,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2891:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2890:15:10"
            },
            "scope": 3247,
            "src": "2818:329:10",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2597,
              "nodeType": "Block",
              "src": "3455:26:10",
              "statements": [
                {
                  "expression": {
                    "hexValue": "",
                    "id": 2595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3472:2:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "typeString": "literal_string \"\""
                    },
                    "value": ""
                  },
                  "functionReturnParameters": 2594,
                  "id": 2596,
                  "nodeType": "Return",
                  "src": "3465:9:10"
                }
              ]
            },
            "documentation": {
              "id": 2590,
              "nodeType": "StructuredDocumentation",
              "src": "3153:231:10",
              "text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
            },
            "id": 2598,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_baseURI",
            "nameLocation": "3398:8:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2591,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3406:2:10"
            },
            "returnParameters": {
              "id": 2594,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2593,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2598,
                  "src": "3440:13:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2592,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3440:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3439:15:10"
            },
            "scope": 3247,
            "src": "3389:92:10",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              3336
            ],
            "body": {
              "id": 2640,
              "nodeType": "Block",
              "src": "3608:331:10",
              "statements": [
                {
                  "assignments": [
                    2608
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2608,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "3626:5:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 2640,
                      "src": "3618:13:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2607,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3618:7:10",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2613,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2611,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2603,
                        "src": "3649:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2609,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3247,
                        "src": "3634:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$3247_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 2610,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2527,
                      "src": "3634:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 2612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3634:23:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3618:39:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2617,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2615,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2601,
                          "src": "3675:2:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 2616,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2608,
                          "src": "3681:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3675:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572",
                        "id": 2618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3688:35:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
                          "typeString": "literal_string \"ERC721: approval to current owner\""
                        },
                        "value": "ERC721: approval to current owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
                          "typeString": "literal_string \"ERC721: approval to current owner\""
                        }
                      ],
                      "id": 2614,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3667:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3667:57:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2620,
                  "nodeType": "ExpressionStatement",
                  "src": "3667:57:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2631,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2625,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2622,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1259,
                              "src": "3756:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 2623,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3756:12:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 2624,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2608,
                            "src": "3772:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3756:21:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 2627,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2608,
                              "src": "3798:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2628,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1259,
                                "src": "3805:10:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 2629,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3805:12:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2626,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2697,
                            "src": "3781:16:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 2630,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3781:37:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3756:62:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c",
                        "id": 2632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3832:58:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
                          "typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
                        },
                        "value": "ERC721: approve caller is not owner nor approved for all"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
                          "typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
                        }
                      ],
                      "id": 2621,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3735:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3735:165:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2634,
                  "nodeType": "ExpressionStatement",
                  "src": "3735:165:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2636,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2601,
                        "src": "3920:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2637,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2603,
                        "src": "3924:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2635,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3130,
                      "src": "3911:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3911:21:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2639,
                  "nodeType": "ExpressionStatement",
                  "src": "3911:21:10"
                }
              ]
            },
            "documentation": {
              "id": 2599,
              "nodeType": "StructuredDocumentation",
              "src": "3487:46:10",
              "text": " @dev See {IERC721-approve}."
            },
            "functionSelector": "095ea7b3",
            "id": 2641,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "3547:7:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2605,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3599:8:10"
            },
            "parameters": {
              "id": 2604,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2601,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3563:2:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2641,
                  "src": "3555:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2600,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3555:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2603,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3575:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2641,
                  "src": "3567:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2602,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3567:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3554:29:10"
            },
            "returnParameters": {
              "id": 2606,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3608:0:10"
            },
            "scope": 3247,
            "src": "3538:401:10",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3352
            ],
            "body": {
              "id": 2661,
              "nodeType": "Block",
              "src": "4085:132:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2652,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2644,
                            "src": "4111:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2651,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2820,
                          "src": "4103:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4103:16:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 2654,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4121:46:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
                          "typeString": "literal_string \"ERC721: approved query for nonexistent token\""
                        },
                        "value": "ERC721: approved query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
                          "typeString": "literal_string \"ERC721: approved query for nonexistent token\""
                        }
                      ],
                      "id": 2650,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4095:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4095:73:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2656,
                  "nodeType": "ExpressionStatement",
                  "src": "4095:73:10"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 2657,
                      "name": "_tokenApprovals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2421,
                      "src": "4186:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 2659,
                    "indexExpression": {
                      "id": 2658,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2644,
                      "src": "4202:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4186:24:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 2649,
                  "id": 2660,
                  "nodeType": "Return",
                  "src": "4179:31:10"
                }
              ]
            },
            "documentation": {
              "id": 2642,
              "nodeType": "StructuredDocumentation",
              "src": "3945:50:10",
              "text": " @dev See {IERC721-getApproved}."
            },
            "functionSelector": "081812fc",
            "id": 2662,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getApproved",
            "nameLocation": "4009:11:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2646,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4058:8:10"
            },
            "parameters": {
              "id": 2645,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2644,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4029:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2662,
                  "src": "4021:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2643,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4021:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4020:17:10"
            },
            "returnParameters": {
              "id": 2649,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2648,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2662,
                  "src": "4076:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2647,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4076:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4075:9:10"
            },
            "scope": 3247,
            "src": "4000:217:10",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3344
            ],
            "body": {
              "id": 2678,
              "nodeType": "Block",
              "src": "4368:69:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2672,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1259,
                          "src": "4397:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4397:12:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2674,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2665,
                        "src": "4411:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2675,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2667,
                        "src": "4421:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2671,
                      "name": "_setApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3162,
                      "src": "4378:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 2676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4378:52:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2677,
                  "nodeType": "ExpressionStatement",
                  "src": "4378:52:10"
                }
              ]
            },
            "documentation": {
              "id": 2663,
              "nodeType": "StructuredDocumentation",
              "src": "4223:56:10",
              "text": " @dev See {IERC721-setApprovalForAll}."
            },
            "functionSelector": "a22cb465",
            "id": 2679,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setApprovalForAll",
            "nameLocation": "4293:17:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2669,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4359:8:10"
            },
            "parameters": {
              "id": 2668,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2665,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "4319:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2679,
                  "src": "4311:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2664,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4311:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2667,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "4334:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2679,
                  "src": "4329:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2666,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4329:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4310:33:10"
            },
            "returnParameters": {
              "id": 2670,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4368:0:10"
            },
            "scope": 3247,
            "src": "4284:153:10",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3362
            ],
            "body": {
              "id": 2696,
              "nodeType": "Block",
              "src": "4606:59:10",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 2690,
                        "name": "_operatorApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2427,
                        "src": "4623:18:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(address => mapping(address => bool))"
                        }
                      },
                      "id": 2692,
                      "indexExpression": {
                        "id": 2691,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2682,
                        "src": "4642:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4623:25:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 2694,
                    "indexExpression": {
                      "id": 2693,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2684,
                      "src": "4649:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4623:35:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2689,
                  "id": 2695,
                  "nodeType": "Return",
                  "src": "4616:42:10"
                }
              ]
            },
            "documentation": {
              "id": 2680,
              "nodeType": "StructuredDocumentation",
              "src": "4443:55:10",
              "text": " @dev See {IERC721-isApprovedForAll}."
            },
            "functionSelector": "e985e9c5",
            "id": 2697,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
            "nameLocation": "4512:16:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2686,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4582:8:10"
            },
            "parameters": {
              "id": 2685,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2682,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "4537:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2697,
                  "src": "4529:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2681,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4529:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2684,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "4552:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2697,
                  "src": "4544:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2683,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4544:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4528:33:10"
            },
            "returnParameters": {
              "id": 2689,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2688,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2697,
                  "src": "4600:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2687,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4600:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4599:6:10"
            },
            "scope": 3247,
            "src": "4503:162:10",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3328
            ],
            "body": {
              "id": 2723,
              "nodeType": "Block",
              "src": "4846:211:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2710,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1259,
                              "src": "4935:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 2711,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4935:12:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2712,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2704,
                            "src": "4949:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2709,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2861,
                          "src": "4916:18:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 2713,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4916:41:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 2714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4959:51:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC721: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        }
                      ],
                      "id": 2708,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4908:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4908:103:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2716,
                  "nodeType": "ExpressionStatement",
                  "src": "4908:103:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2718,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2700,
                        "src": "5032:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2719,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2702,
                        "src": "5038:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2720,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2704,
                        "src": "5042:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2717,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3106,
                      "src": "5022:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5022:28:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2722,
                  "nodeType": "ExpressionStatement",
                  "src": "5022:28:10"
                }
              ]
            },
            "documentation": {
              "id": 2698,
              "nodeType": "StructuredDocumentation",
              "src": "4671:51:10",
              "text": " @dev See {IERC721-transferFrom}."
            },
            "functionSelector": "23b872dd",
            "id": 2724,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "4736:12:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2706,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4837:8:10"
            },
            "parameters": {
              "id": 2705,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2700,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "4766:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2724,
                  "src": "4758:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2699,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4758:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2702,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "4788:2:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2724,
                  "src": "4780:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2701,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4780:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2704,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4808:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2724,
                  "src": "4800:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2703,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4800:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4748:73:10"
            },
            "returnParameters": {
              "id": 2707,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4846:0:10"
            },
            "scope": 3247,
            "src": "4727:330:10",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3318
            ],
            "body": {
              "id": 2742,
              "nodeType": "Block",
              "src": "5246:56:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2736,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2727,
                        "src": "5273:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2737,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2729,
                        "src": "5279:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2738,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2731,
                        "src": "5283:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 2739,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5292:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 2735,
                      "name": "safeTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2743,
                        2773
                      ],
                      "referencedDeclaration": 2773,
                      "src": "5256:16:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 2740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5256:39:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2741,
                  "nodeType": "ExpressionStatement",
                  "src": "5256:39:10"
                }
              ]
            },
            "documentation": {
              "id": 2725,
              "nodeType": "StructuredDocumentation",
              "src": "5063:55:10",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "42842e0e",
            "id": 2743,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "5132:16:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2733,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5237:8:10"
            },
            "parameters": {
              "id": 2732,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2727,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5166:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2743,
                  "src": "5158:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2726,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5158:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2729,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5188:2:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2743,
                  "src": "5180:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2728,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5180:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2731,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5208:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2743,
                  "src": "5200:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2730,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5200:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5148:73:10"
            },
            "returnParameters": {
              "id": 2734,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5246:0:10"
            },
            "scope": 3247,
            "src": "5123:179:10",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3308
            ],
            "body": {
              "id": 2772,
              "nodeType": "Block",
              "src": "5519:169:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2758,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1259,
                              "src": "5556:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 2759,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5556:12:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2760,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2750,
                            "src": "5570:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2757,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2861,
                          "src": "5537:18:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 2761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5537:41:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 2762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5580:51:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC721: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        }
                      ],
                      "id": 2756,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5529:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5529:103:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2764,
                  "nodeType": "ExpressionStatement",
                  "src": "5529:103:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2766,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2746,
                        "src": "5656:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2767,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2748,
                        "src": "5662:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2768,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2750,
                        "src": "5666:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2769,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2752,
                        "src": "5675:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2765,
                      "name": "_safeTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2802,
                      "src": "5642:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 2770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5642:39:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2771,
                  "nodeType": "ExpressionStatement",
                  "src": "5642:39:10"
                }
              ]
            },
            "documentation": {
              "id": 2744,
              "nodeType": "StructuredDocumentation",
              "src": "5308:55:10",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "b88d4fde",
            "id": 2773,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "5377:16:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2754,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5510:8:10"
            },
            "parameters": {
              "id": 2753,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2746,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5411:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2773,
                  "src": "5403:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2745,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5403:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2748,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5433:2:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2773,
                  "src": "5425:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2747,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5425:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2750,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5453:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2773,
                  "src": "5445:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2749,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5445:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2752,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "5483:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2773,
                  "src": "5470:18:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2751,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5470:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5393:101:10"
            },
            "returnParameters": {
              "id": 2755,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5519:0:10"
            },
            "scope": 3247,
            "src": "5368:320:10",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2801,
              "nodeType": "Block",
              "src": "6691:166:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2786,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2776,
                        "src": "6711:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2787,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2778,
                        "src": "6717:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2788,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2780,
                        "src": "6721:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2785,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3106,
                      "src": "6701:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2789,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6701:28:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2790,
                  "nodeType": "ExpressionStatement",
                  "src": "6701:28:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2793,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2776,
                            "src": "6770:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2794,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2778,
                            "src": "6776:2:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2795,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2780,
                            "src": "6780:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 2796,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2782,
                            "src": "6789:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 2792,
                          "name": "_checkOnERC721Received",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3224,
                          "src": "6747:22:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256,bytes memory) returns (bool)"
                          }
                        },
                        "id": 2797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6747:48:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                        "id": 2798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6797:52:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        }
                      ],
                      "id": 2791,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6739:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6739:111:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2800,
                  "nodeType": "ExpressionStatement",
                  "src": "6739:111:10"
                }
              ]
            },
            "documentation": {
              "id": 2774,
              "nodeType": "StructuredDocumentation",
              "src": "5694:851:10",
              "text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `_data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "id": 2802,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeTransfer",
            "nameLocation": "6559:13:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2783,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2776,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "6590:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2802,
                  "src": "6582:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2775,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6582:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2778,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "6612:2:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2802,
                  "src": "6604:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2777,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6604:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2780,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6632:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2802,
                  "src": "6624:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2779,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6624:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2782,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "6662:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2802,
                  "src": "6649:18:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2781,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6649:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6572:101:10"
            },
            "returnParameters": {
              "id": 2784,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6691:0:10"
            },
            "scope": 3247,
            "src": "6550:307:10",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2819,
              "nodeType": "Block",
              "src": "7231:54:10",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 2817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 2810,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2413,
                        "src": "7248:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 2812,
                      "indexExpression": {
                        "id": 2811,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2805,
                        "src": "7256:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7248:16:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 2815,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7276:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 2814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7268:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 2813,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7268:7:10",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2816,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7268:10:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7248:30:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2809,
                  "id": 2818,
                  "nodeType": "Return",
                  "src": "7241:37:10"
                }
              ]
            },
            "documentation": {
              "id": 2803,
              "nodeType": "StructuredDocumentation",
              "src": "6863:292:10",
              "text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."
            },
            "id": 2820,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_exists",
            "nameLocation": "7169:7:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2806,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2805,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7185:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2820,
                  "src": "7177:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2804,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7177:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7176:17:10"
            },
            "returnParameters": {
              "id": 2809,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2808,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2820,
                  "src": "7225:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2807,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7225:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7224:6:10"
            },
            "scope": 3247,
            "src": "7160:125:10",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2860,
              "nodeType": "Block",
              "src": "7542:245:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2832,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2825,
                            "src": "7568:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2831,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2820,
                          "src": "7560:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2833,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7560:16:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 2834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7578:46:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
                          "typeString": "literal_string \"ERC721: operator query for nonexistent token\""
                        },
                        "value": "ERC721: operator query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
                          "typeString": "literal_string \"ERC721: operator query for nonexistent token\""
                        }
                      ],
                      "id": 2830,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7552:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7552:73:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2836,
                  "nodeType": "ExpressionStatement",
                  "src": "7552:73:10"
                },
                {
                  "assignments": [
                    2838
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2838,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "7643:5:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 2860,
                      "src": "7635:13:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2837,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7635:7:10",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2843,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2841,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2825,
                        "src": "7666:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2839,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3247,
                        "src": "7651:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$3247_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 2840,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2527,
                      "src": "7651:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 2842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7651:23:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7635:39:10"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2851,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 2846,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2844,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2823,
                              "src": "7692:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 2845,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2838,
                              "src": "7703:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "7692:16:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 2848,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2838,
                                "src": "7729:5:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 2849,
                                "name": "spender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2823,
                                "src": "7736:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2847,
                              "name": "isApprovedForAll",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2697,
                              "src": "7712:16:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address,address) view returns (bool)"
                              }
                            },
                            "id": 2850,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7712:32:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "7692:52:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 2853,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2825,
                                "src": "7760:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 2852,
                              "name": "getApproved",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2662,
                              "src": "7748:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view returns (address)"
                              }
                            },
                            "id": 2854,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7748:20:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 2855,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2823,
                            "src": "7772:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7748:31:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7692:87:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 2858,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "7691:89:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2829,
                  "id": 2859,
                  "nodeType": "Return",
                  "src": "7684:96:10"
                }
              ]
            },
            "documentation": {
              "id": 2821,
              "nodeType": "StructuredDocumentation",
              "src": "7291:147:10",
              "text": " @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."
            },
            "id": 2861,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isApprovedOrOwner",
            "nameLocation": "7452:18:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2826,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2823,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "7479:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2861,
                  "src": "7471:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2822,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7471:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2825,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7496:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2861,
                  "src": "7488:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2824,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7488:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7470:34:10"
            },
            "returnParameters": {
              "id": 2829,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2828,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2861,
                  "src": "7536:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2827,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7536:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7535:6:10"
            },
            "scope": 3247,
            "src": "7443:344:10",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2875,
              "nodeType": "Block",
              "src": "8182:43:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2870,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2864,
                        "src": "8202:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2871,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2866,
                        "src": "8206:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 2872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8215:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 2869,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2876,
                        2905
                      ],
                      "referencedDeclaration": 2905,
                      "src": "8192:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 2873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8192:26:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2874,
                  "nodeType": "ExpressionStatement",
                  "src": "8192:26:10"
                }
              ]
            },
            "documentation": {
              "id": 2862,
              "nodeType": "StructuredDocumentation",
              "src": "7793:319:10",
              "text": " @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "id": 2876,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nameLocation": "8126:9:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2867,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2864,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8144:2:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2876,
                  "src": "8136:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2863,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8136:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2866,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8156:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2876,
                  "src": "8148:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2865,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8148:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8135:29:10"
            },
            "returnParameters": {
              "id": 2868,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8182:0:10"
            },
            "scope": 3247,
            "src": "8117:108:10",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2904,
              "nodeType": "Block",
              "src": "8561:196:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2887,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2879,
                        "src": "8577:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2888,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2881,
                        "src": "8581:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2886,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2971,
                      "src": "8571:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8571:18:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2890,
                  "nodeType": "ExpressionStatement",
                  "src": "8571:18:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 2895,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8651:1:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 2894,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8643:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2893,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8643:7:10",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2896,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8643:10:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2897,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2879,
                            "src": "8655:2:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2898,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2881,
                            "src": "8659:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 2899,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2883,
                            "src": "8668:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 2892,
                          "name": "_checkOnERC721Received",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3224,
                          "src": "8620:22:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256,bytes memory) returns (bool)"
                          }
                        },
                        "id": 2900,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8620:54:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                        "id": 2901,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8688:52:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        }
                      ],
                      "id": 2891,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8599:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8599:151:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2903,
                  "nodeType": "ExpressionStatement",
                  "src": "8599:151:10"
                }
              ]
            },
            "documentation": {
              "id": 2877,
              "nodeType": "StructuredDocumentation",
              "src": "8231:210:10",
              "text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
            },
            "id": 2905,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nameLocation": "8455:9:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2884,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2879,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8482:2:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2905,
                  "src": "8474:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2878,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8474:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2881,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8502:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2905,
                  "src": "8494:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2880,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8494:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2883,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "8532:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2905,
                  "src": "8519:18:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2882,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8519:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8464:79:10"
            },
            "returnParameters": {
              "id": 2885,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8561:0:10"
            },
            "scope": 3247,
            "src": "8446:311:10",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2970,
              "nodeType": "Block",
              "src": "9140:366:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2919,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2914,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2908,
                          "src": "9158:2:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2917,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9172:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2916,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9164:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2915,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9164:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2918,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9164:10:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9158:16:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 2920,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9176:34:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
                          "typeString": "literal_string \"ERC721: mint to the zero address\""
                        },
                        "value": "ERC721: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
                          "typeString": "literal_string \"ERC721: mint to the zero address\""
                        }
                      ],
                      "id": 2913,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9150:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9150:61:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2922,
                  "nodeType": "ExpressionStatement",
                  "src": "9150:61:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "9229:17:10",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 2925,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2910,
                              "src": "9238:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2924,
                            "name": "_exists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2820,
                            "src": "9230:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view returns (bool)"
                            }
                          },
                          "id": 2926,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9230:16:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
                        "id": 2928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9248:30:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        },
                        "value": "ERC721: token already minted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        }
                      ],
                      "id": 2923,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9221:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9221:58:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2930,
                  "nodeType": "ExpressionStatement",
                  "src": "9221:58:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2934,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9319:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2933,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9311:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2932,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9311:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2935,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9311:10:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2936,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2908,
                        "src": "9323:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2937,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2910,
                        "src": "9327:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2931,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3235,
                      "src": "9290:20:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9290:45:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2939,
                  "nodeType": "ExpressionStatement",
                  "src": "9290:45:10"
                },
                {
                  "expression": {
                    "id": 2944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2940,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2417,
                        "src": "9346:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2942,
                      "indexExpression": {
                        "id": 2941,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2908,
                        "src": "9356:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9346:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 2943,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9363:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "9346:18:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2945,
                  "nodeType": "ExpressionStatement",
                  "src": "9346:18:10"
                },
                {
                  "expression": {
                    "id": 2950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2946,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2413,
                        "src": "9374:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 2948,
                      "indexExpression": {
                        "id": 2947,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2910,
                        "src": "9382:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9374:16:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2949,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2908,
                      "src": "9393:2:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9374:21:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2951,
                  "nodeType": "ExpressionStatement",
                  "src": "9374:21:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2955,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9428:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2954,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9420:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2953,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9420:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2956,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9420:10:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2957,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2908,
                        "src": "9432:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2958,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2910,
                        "src": "9436:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2952,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3262,
                      "src": "9411:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2959,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9411:33:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2960,
                  "nodeType": "EmitStatement",
                  "src": "9406:38:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2964,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9483:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2963,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9475:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2962,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9475:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2965,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9475:10:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2966,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2908,
                        "src": "9487:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2967,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2910,
                        "src": "9491:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2961,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3246,
                      "src": "9455:19:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9455:44:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2969,
                  "nodeType": "ExpressionStatement",
                  "src": "9455:44:10"
                }
              ]
            },
            "documentation": {
              "id": 2906,
              "nodeType": "StructuredDocumentation",
              "src": "8763:311:10",
              "text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
            },
            "id": 2971,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "9088:5:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2911,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2908,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9102:2:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2971,
                  "src": "9094:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2907,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9094:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2910,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "9114:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2971,
                  "src": "9106:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2909,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9106:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9093:29:10"
            },
            "returnParameters": {
              "id": 2912,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9140:0:10"
            },
            "scope": 3247,
            "src": "9079:427:10",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3030,
              "nodeType": "Block",
              "src": "9772:357:10",
              "statements": [
                {
                  "assignments": [
                    2978
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2978,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "9790:5:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 3030,
                      "src": "9782:13:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2977,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9782:7:10",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2983,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2981,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2974,
                        "src": "9813:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2979,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3247,
                        "src": "9798:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$3247_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 2980,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2527,
                      "src": "9798:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 2982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9798:23:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9782:39:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2985,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2978,
                        "src": "9853:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2988,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9868:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2987,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9860:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2986,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9860:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9860:10:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2990,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2974,
                        "src": "9872:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2984,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3235,
                      "src": "9832:20:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9832:48:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2992,
                  "nodeType": "ExpressionStatement",
                  "src": "9832:48:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2996,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9935:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2995,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9927:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2994,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9927:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2997,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9927:10:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2998,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2974,
                        "src": "9939:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2993,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3130,
                      "src": "9918:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9918:29:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3000,
                  "nodeType": "ExpressionStatement",
                  "src": "9918:29:10"
                },
                {
                  "expression": {
                    "id": 3005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3001,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2417,
                        "src": "9958:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3003,
                      "indexExpression": {
                        "id": 3002,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2978,
                        "src": "9968:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9958:16:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 3004,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9978:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "9958:21:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3006,
                  "nodeType": "ExpressionStatement",
                  "src": "9958:21:10"
                },
                {
                  "expression": {
                    "id": 3010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "9989:23:10",
                    "subExpression": {
                      "baseExpression": {
                        "id": 3007,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2413,
                        "src": "9996:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 3009,
                      "indexExpression": {
                        "id": 3008,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2974,
                        "src": "10004:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9996:16:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3011,
                  "nodeType": "ExpressionStatement",
                  "src": "9989:23:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3013,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2978,
                        "src": "10037:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 3016,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10052:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 3015,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10044:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3014,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10044:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10044:10:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3018,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2974,
                        "src": "10056:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3012,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3262,
                      "src": "10028:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10028:36:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3020,
                  "nodeType": "EmitStatement",
                  "src": "10023:41:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3022,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2978,
                        "src": "10095:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 3025,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10110:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 3024,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10102:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3023,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10102:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3026,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10102:10:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3027,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2974,
                        "src": "10114:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3021,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3246,
                      "src": "10075:19:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10075:47:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3029,
                  "nodeType": "ExpressionStatement",
                  "src": "10075:47:10"
                }
              ]
            },
            "documentation": {
              "id": 2972,
              "nodeType": "StructuredDocumentation",
              "src": "9512:206:10",
              "text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
            },
            "id": 3031,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "9732:5:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2975,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2974,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "9746:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 3031,
                  "src": "9738:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2973,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9738:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9737:17:10"
            },
            "returnParameters": {
              "id": 2976,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9772:0:10"
            },
            "scope": 3247,
            "src": "9723:406:10",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3105,
              "nodeType": "Block",
              "src": "10562:496:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3047,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 3044,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3038,
                              "src": "10595:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 3042,
                              "name": "ERC721",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3247,
                              "src": "10580:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC721_$3247_$",
                                "typeString": "type(contract ERC721)"
                              }
                            },
                            "id": 3043,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2527,
                            "src": "10580:14:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 3045,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10580:23:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3046,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3034,
                          "src": "10607:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10580:31:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572",
                        "id": 3048,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10613:39:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
                          "typeString": "literal_string \"ERC721: transfer from incorrect owner\""
                        },
                        "value": "ERC721: transfer from incorrect owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
                          "typeString": "literal_string \"ERC721: transfer from incorrect owner\""
                        }
                      ],
                      "id": 3041,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10572:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10572:81:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3050,
                  "nodeType": "ExpressionStatement",
                  "src": "10572:81:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3057,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3052,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3036,
                          "src": "10671:2:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3055,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10685:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3054,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10677:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3053,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10677:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3056,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10677:10:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10671:16:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 3058,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10689:38:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
                          "typeString": "literal_string \"ERC721: transfer to the zero address\""
                        },
                        "value": "ERC721: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
                          "typeString": "literal_string \"ERC721: transfer to the zero address\""
                        }
                      ],
                      "id": 3051,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10663:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10663:65:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3060,
                  "nodeType": "ExpressionStatement",
                  "src": "10663:65:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3062,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3034,
                        "src": "10760:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3063,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3036,
                        "src": "10766:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3064,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3038,
                        "src": "10770:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3061,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3235,
                      "src": "10739:20:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10739:39:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3066,
                  "nodeType": "ExpressionStatement",
                  "src": "10739:39:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 3070,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10857:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 3069,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10849:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3068,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10849:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3071,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10849:10:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3072,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3038,
                        "src": "10861:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3067,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3130,
                      "src": "10840:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10840:29:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3074,
                  "nodeType": "ExpressionStatement",
                  "src": "10840:29:10"
                },
                {
                  "expression": {
                    "id": 3079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3075,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2417,
                        "src": "10880:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3077,
                      "indexExpression": {
                        "id": 3076,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3034,
                        "src": "10890:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10880:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 3078,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10899:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "10880:20:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3080,
                  "nodeType": "ExpressionStatement",
                  "src": "10880:20:10"
                },
                {
                  "expression": {
                    "id": 3085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3081,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2417,
                        "src": "10910:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3083,
                      "indexExpression": {
                        "id": 3082,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3036,
                        "src": "10920:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10910:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 3084,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10927:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "10910:18:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3086,
                  "nodeType": "ExpressionStatement",
                  "src": "10910:18:10"
                },
                {
                  "expression": {
                    "id": 3091,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3087,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2413,
                        "src": "10938:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 3089,
                      "indexExpression": {
                        "id": 3088,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3038,
                        "src": "10946:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10938:16:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3090,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3036,
                      "src": "10957:2:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10938:21:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3092,
                  "nodeType": "ExpressionStatement",
                  "src": "10938:21:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3094,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3034,
                        "src": "10984:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3095,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3036,
                        "src": "10990:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3096,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3038,
                        "src": "10994:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3093,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3262,
                      "src": "10975:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10975:27:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3098,
                  "nodeType": "EmitStatement",
                  "src": "10970:32:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3100,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3034,
                        "src": "11033:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3101,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3036,
                        "src": "11039:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3102,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3038,
                        "src": "11043:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3099,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3246,
                      "src": "11013:19:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11013:38:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3104,
                  "nodeType": "ExpressionStatement",
                  "src": "11013:38:10"
                }
              ]
            },
            "documentation": {
              "id": 3032,
              "nodeType": "StructuredDocumentation",
              "src": "10135:313:10",
              "text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
            },
            "id": 3106,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "10462:9:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3039,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3034,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "10489:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 3106,
                  "src": "10481:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3033,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10481:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3036,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "10511:2:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 3106,
                  "src": "10503:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3035,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10503:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3038,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "10531:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 3106,
                  "src": "10523:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3037,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10523:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10471:73:10"
            },
            "returnParameters": {
              "id": 3040,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10562:0:10"
            },
            "scope": 3247,
            "src": "10453:605:10",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3129,
              "nodeType": "Block",
              "src": "11233:107:10",
              "statements": [
                {
                  "expression": {
                    "id": 3118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3114,
                        "name": "_tokenApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2421,
                        "src": "11243:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 3116,
                      "indexExpression": {
                        "id": 3115,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3111,
                        "src": "11259:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11243:24:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3117,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3109,
                      "src": "11270:2:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11243:29:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3119,
                  "nodeType": "ExpressionStatement",
                  "src": "11243:29:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3123,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3111,
                            "src": "11311:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 3121,
                            "name": "ERC721",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3247,
                            "src": "11296:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC721_$3247_$",
                              "typeString": "type(contract ERC721)"
                            }
                          },
                          "id": 3122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2527,
                          "src": "11296:14:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 3124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11296:23:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3125,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3109,
                        "src": "11321:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3126,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3111,
                        "src": "11325:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3120,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3271,
                      "src": "11287:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11287:46:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3128,
                  "nodeType": "EmitStatement",
                  "src": "11282:51:10"
                }
              ]
            },
            "documentation": {
              "id": 3107,
              "nodeType": "StructuredDocumentation",
              "src": "11064:100:10",
              "text": " @dev Approve `to` to operate on `tokenId`\n Emits a {Approval} event."
            },
            "id": 3130,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nameLocation": "11178:8:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3109,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "11195:2:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 3130,
                  "src": "11187:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3108,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11187:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3111,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "11207:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 3130,
                  "src": "11199:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3110,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11199:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11186:29:10"
            },
            "returnParameters": {
              "id": 3113,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11233:0:10"
            },
            "scope": 3247,
            "src": "11169:171:10",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3161,
              "nodeType": "Block",
              "src": "11598:184:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3141,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3133,
                          "src": "11616:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 3142,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3135,
                          "src": "11625:8:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11616:17:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
                        "id": 3144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11635:27:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
                          "typeString": "literal_string \"ERC721: approve to caller\""
                        },
                        "value": "ERC721: approve to caller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
                          "typeString": "literal_string \"ERC721: approve to caller\""
                        }
                      ],
                      "id": 3140,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11608:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11608:55:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3146,
                  "nodeType": "ExpressionStatement",
                  "src": "11608:55:10"
                },
                {
                  "expression": {
                    "id": 3153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 3147,
                          "name": "_operatorApprovals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2427,
                          "src": "11673:18:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 3150,
                        "indexExpression": {
                          "id": 3148,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3133,
                          "src": "11692:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11673:25:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 3151,
                      "indexExpression": {
                        "id": 3149,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3135,
                        "src": "11699:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11673:35:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3152,
                      "name": "approved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3137,
                      "src": "11711:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "11673:46:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3154,
                  "nodeType": "ExpressionStatement",
                  "src": "11673:46:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3156,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3133,
                        "src": "11749:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3157,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3135,
                        "src": "11756:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3158,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3137,
                        "src": "11766:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3155,
                      "name": "ApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3280,
                      "src": "11734:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 3159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11734:41:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3160,
                  "nodeType": "EmitStatement",
                  "src": "11729:46:10"
                }
              ]
            },
            "documentation": {
              "id": 3131,
              "nodeType": "StructuredDocumentation",
              "src": "11346:124:10",
              "text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits a {ApprovalForAll} event."
            },
            "id": 3162,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setApprovalForAll",
            "nameLocation": "11484:18:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3138,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3133,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "11520:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 3162,
                  "src": "11512:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3132,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11512:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3135,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "11543:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 3162,
                  "src": "11535:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3134,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11535:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3137,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "11566:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 3162,
                  "src": "11561:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3136,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11561:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11502:78:10"
            },
            "returnParameters": {
              "id": 3139,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11598:0:10"
            },
            "scope": 3247,
            "src": "11475:307:10",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3223,
              "nodeType": "Block",
              "src": "12491:622:10",
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 3176,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3167,
                        "src": "12505:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 3177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1884,
                      "src": "12505:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 3178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12505:15:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 3221,
                    "nodeType": "Block",
                    "src": "13071:36:10",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 3219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13092:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 3175,
                        "id": 3220,
                        "nodeType": "Return",
                        "src": "13085:11:10"
                      }
                    ]
                  },
                  "id": 3222,
                  "nodeType": "IfStatement",
                  "src": "12501:606:10",
                  "trueBody": {
                    "id": 3218,
                    "nodeType": "Block",
                    "src": "12522:543:10",
                    "statements": [
                      {
                        "clauses": [
                          {
                            "block": {
                              "id": 3198,
                              "nodeType": "Block",
                              "src": "12637:91:10",
                              "statements": [
                                {
                                  "expression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 3196,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 3192,
                                      "name": "retval",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3190,
                                      "src": "12662:6:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 3193,
                                          "name": "IERC721Receiver",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3381,
                                          "src": "12672:15:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$3381_$",
                                            "typeString": "type(contract IERC721Receiver)"
                                          }
                                        },
                                        "id": 3194,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "onERC721Received",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 3380,
                                        "src": "12672:32:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
                                          "typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
                                        }
                                      },
                                      "id": 3195,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "12672:41:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "12662:51:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "functionReturnParameters": 3175,
                                  "id": 3197,
                                  "nodeType": "Return",
                                  "src": "12655:58:10"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 3199,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 3191,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 3190,
                                  "mutability": "mutable",
                                  "name": "retval",
                                  "nameLocation": "12629:6:10",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 3199,
                                  "src": "12622:13:10",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "typeName": {
                                    "id": 3189,
                                    "name": "bytes4",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "12622:6:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "12621:15:10"
                            },
                            "src": "12613:115:10"
                          },
                          {
                            "block": {
                              "id": 3215,
                              "nodeType": "Block",
                              "src": "12757:298:10",
                              "statements": [
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 3206,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 3203,
                                        "name": "reason",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3201,
                                        "src": "12779:6:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      },
                                      "id": 3204,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "12779:13:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 3205,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "12796:1:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "12779:18:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseBody": {
                                    "id": 3213,
                                    "nodeType": "Block",
                                    "src": "12906:135:10",
                                    "statements": [
                                      {
                                        "AST": {
                                          "nodeType": "YulBlock",
                                          "src": "12937:86:10",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "kind": "number",
                                                        "nodeType": "YulLiteral",
                                                        "src": "12974:2:10",
                                                        "type": "",
                                                        "value": "32"
                                                      },
                                                      {
                                                        "name": "reason",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "12978:6:10"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "12970:3:10"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "12970:15:10"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "reason",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "12993:6:10"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "mload",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "12987:5:10"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "12987:13:10"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "revert",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "12963:6:10"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "12963:38:10"
                                              },
                                              "nodeType": "YulExpressionStatement",
                                              "src": "12963:38:10"
                                            }
                                          ]
                                        },
                                        "evmVersion": "istanbul",
                                        "externalReferences": [
                                          {
                                            "declaration": 3201,
                                            "isOffset": false,
                                            "isSlot": false,
                                            "src": "12978:6:10",
                                            "valueSize": 1
                                          },
                                          {
                                            "declaration": 3201,
                                            "isOffset": false,
                                            "isSlot": false,
                                            "src": "12993:6:10",
                                            "valueSize": 1
                                          }
                                        ],
                                        "id": 3212,
                                        "nodeType": "InlineAssembly",
                                        "src": "12928:95:10"
                                      }
                                    ]
                                  },
                                  "id": 3214,
                                  "nodeType": "IfStatement",
                                  "src": "12775:266:10",
                                  "trueBody": {
                                    "id": 3211,
                                    "nodeType": "Block",
                                    "src": "12799:101:10",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                                              "id": 3208,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "12828:52:10",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                                                "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                                              },
                                              "value": "ERC721: transfer to non ERC721Receiver implementer"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                                                "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                                              }
                                            ],
                                            "id": 3207,
                                            "name": "revert",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                              -19,
                                              -19
                                            ],
                                            "referencedDeclaration": -19,
                                            "src": "12821:6:10",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                              "typeString": "function (string memory) pure"
                                            }
                                          },
                                          "id": 3209,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "12821:60:10",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                          }
                                        },
                                        "id": 3210,
                                        "nodeType": "ExpressionStatement",
                                        "src": "12821:60:10"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 3216,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 3202,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 3201,
                                  "mutability": "mutable",
                                  "name": "reason",
                                  "nameLocation": "12749:6:10",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 3216,
                                  "src": "12736:19:10",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes"
                                  },
                                  "typeName": {
                                    "id": 3200,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "12736:5:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage_ptr",
                                      "typeString": "bytes"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "12735:21:10"
                            },
                            "src": "12729:326:10"
                          }
                        ],
                        "externalCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 3183,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1259,
                                "src": "12577:10:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 3184,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12577:12:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3185,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3165,
                              "src": "12591:4:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3186,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3169,
                              "src": "12597:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 3187,
                              "name": "_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3171,
                              "src": "12606:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 3180,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3167,
                                  "src": "12556:2:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3179,
                                "name": "IERC721Receiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3381,
                                "src": "12540:15:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$3381_$",
                                  "typeString": "type(contract IERC721Receiver)"
                                }
                              },
                              "id": 3181,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12540:19:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721Receiver_$3381",
                                "typeString": "contract IERC721Receiver"
                              }
                            },
                            "id": 3182,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "onERC721Received",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3380,
                            "src": "12540:36:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                              "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                            }
                          },
                          "id": 3188,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12540:72:10",
                          "tryCall": true,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 3217,
                        "nodeType": "TryStatement",
                        "src": "12536:519:10"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 3163,
              "nodeType": "StructuredDocumentation",
              "src": "11788:542:10",
              "text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param _data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
            },
            "id": 3224,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkOnERC721Received",
            "nameLocation": "12344:22:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3172,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3165,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "12384:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 3224,
                  "src": "12376:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3164,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12376:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3167,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "12406:2:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 3224,
                  "src": "12398:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3166,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12398:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3169,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "12426:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 3224,
                  "src": "12418:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3168,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12418:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3171,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "12456:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 3224,
                  "src": "12443:18:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3170,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12443:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12366:101:10"
            },
            "returnParameters": {
              "id": 3175,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3174,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3224,
                  "src": "12485:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3173,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12485:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12484:6:10"
            },
            "scope": 3247,
            "src": "12335:778:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 3234,
              "nodeType": "Block",
              "src": "13789:2:10",
              "statements": []
            },
            "documentation": {
              "id": 3225,
              "nodeType": "StructuredDocumentation",
              "src": "13119:545:10",
              "text": " @dev Hook that is called before any token transfer. This includes minting\n and burning.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, ``from``'s `tokenId` will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 3235,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "13678:20:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3232,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3227,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "13716:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 3235,
                  "src": "13708:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3226,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13708:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3229,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "13738:2:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 3235,
                  "src": "13730:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3228,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13730:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3231,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "13758:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 3235,
                  "src": "13750:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3230,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13750:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13698:73:10"
            },
            "returnParameters": {
              "id": 3233,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13789:0:10"
            },
            "scope": 3247,
            "src": "13669:122:10",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3245,
              "nodeType": "Block",
              "src": "14282:2:10",
              "statements": []
            },
            "documentation": {
              "id": 3236,
              "nodeType": "StructuredDocumentation",
              "src": "13797:361:10",
              "text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 3246,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterTokenTransfer",
            "nameLocation": "14172:19:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3243,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3238,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "14209:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 3246,
                  "src": "14201:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3237,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14201:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3240,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "14231:2:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 3246,
                  "src": "14223:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3239,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14223:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3242,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "14251:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 3246,
                  "src": "14243:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3241,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14243:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14191:73:10"
            },
            "returnParameters": {
              "id": 3244,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14282:0:10"
            },
            "scope": 3247,
            "src": "14163:121:10",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 3248,
        "src": "628:13658:10",
        "usedErrors": []
      }
    ],
    "src": "107:14180:10"
  },
  "bytecode": "60806040523480156200001157600080fd5b50604051620014de380380620014de8339810160408190526200003491620001db565b81516200004990600090602085019062000068565b5080516200005f90600190602084019062000068565b50505062000281565b828054620000769062000245565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013657600080fd5b81516001600160401b03808211156200015357620001536200010e565b604051601f8301601f19908116603f011681019082821181831017156200017e576200017e6200010e565b816040528381526020925086838588010111156200019b57600080fd5b600091505b83821015620001bf5785820183015181830184015290820190620001a0565b83821115620001d15760008385830101525b9695505050505050565b60008060408385031215620001ef57600080fd5b82516001600160401b03808211156200020757600080fd5b620002158683870162000124565b935060208501519150808211156200022c57600080fd5b506200023b8582860162000124565b9150509250929050565b600181811c908216806200025a57607f821691505b6020821081036200027b57634e487b7160e01b600052602260045260246000fd5b50919050565b61124d80620002916000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101b3578063b88d4fde146101c6578063c87b56dd146101d9578063e985e9c5146101ec57600080fd5b80636352211e1461017757806370a082311461018a57806395d89b41146101ab57600080fd5b806301ffc9a7146100d457806306fdde03146100fc578063081812fc14610111578063095ea7b31461013c57806323b872dd1461015157806342842e0e14610164575b600080fd5b6100e76100e2366004610d60565b610228565b60405190151581526020015b60405180910390f35b61010461027a565b6040516100f39190610dd5565b61012461011f366004610de8565b61030c565b6040516001600160a01b0390911681526020016100f3565b61014f61014a366004610e1d565b6103a6565b005b61014f61015f366004610e47565b6104bb565b61014f610172366004610e47565b6104ec565b610124610185366004610de8565b610507565b61019d610198366004610e83565b61057e565b6040519081526020016100f3565b610104610605565b61014f6101c1366004610e9e565b610614565b61014f6101d4366004610ef0565b610623565b6101046101e7366004610de8565b61065b565b6100e76101fa366004610fcc565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061025957506001600160e01b03198216635b5e139f60e01b145b8061027457506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461028990610fff565b80601f01602080910402602001604051908101604052809291908181526020018280546102b590610fff565b80156103025780601f106102d757610100808354040283529160200191610302565b820191906000526020600020905b8154815290600101906020018083116102e557829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b031661038a5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006103b182610507565b9050806001600160a01b0316836001600160a01b03160361041e5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610381565b336001600160a01b038216148061043a575061043a81336101fa565b6104ac5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610381565b6104b68383610743565b505050565b6104c533826107b1565b6104e15760405162461bcd60e51b815260040161038190611039565b6104b68383836108a8565b6104b683838360405180602001604052806000815250610623565b6000818152600260205260408120546001600160a01b0316806102745760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610381565b60006001600160a01b0382166105e95760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610381565b506001600160a01b031660009081526003602052604090205490565b60606001805461028990610fff565b61061f338383610a44565b5050565b61062d33836107b1565b6106495760405162461bcd60e51b815260040161038190611039565b61065584848484610b12565b50505050565b6000818152600260205260409020546060906001600160a01b03166106da5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610381565b60006106f160408051602081019091526000815290565b90506000815111610711576040518060200160405280600081525061073c565b8061071b84610b45565b60405160200161072c92919061108a565b6040516020818303038152906040525b9392505050565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061077882610507565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b031661082a5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610381565b600061083583610507565b9050806001600160a01b0316846001600160a01b0316148061087c57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806108a05750836001600160a01b03166108958461030c565b6001600160a01b0316145b949350505050565b826001600160a01b03166108bb82610507565b6001600160a01b03161461091f5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610381565b6001600160a01b0382166109815760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610381565b61098c600082610743565b6001600160a01b03831660009081526003602052604081208054600192906109b59084906110cf565b90915550506001600160a01b03821660009081526003602052604081208054600192906109e39084906110e6565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b031603610aa55760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610381565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610b1d8484846108a8565b610b2984848484610c46565b6106555760405162461bcd60e51b8152600401610381906110fe565b606081600003610b6c5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610b965780610b8081611150565b9150610b8f9050600a8361117f565b9150610b70565b60008167ffffffffffffffff811115610bb157610bb1610eda565b6040519080825280601f01601f191660200182016040528015610bdb576020820181803683370190505b5090505b84156108a057610bf06001836110cf565b9150610bfd600a86611193565b610c089060306110e6565b60f81b818381518110610c1d57610c1d6111a7565b60200101906001600160f81b031916908160001a905350610c3f600a8661117f565b9450610bdf565b60006001600160a01b0384163b15610d3c57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610c8a9033908990889088906004016111bd565b6020604051808303816000875af1925050508015610cc5575060408051601f3d908101601f19168201909252610cc2918101906111fa565b60015b610d22573d808015610cf3576040519150601f19603f3d011682016040523d82523d6000602084013e610cf8565b606091505b508051600003610d1a5760405162461bcd60e51b8152600401610381906110fe565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506108a0565b506001949350505050565b6001600160e01b031981168114610d5d57600080fd5b50565b600060208284031215610d7257600080fd5b813561073c81610d47565b60005b83811015610d98578181015183820152602001610d80565b838111156106555750506000910152565b60008151808452610dc1816020860160208601610d7d565b601f01601f19169290920160200192915050565b60208152600061073c6020830184610da9565b600060208284031215610dfa57600080fd5b5035919050565b80356001600160a01b0381168114610e1857600080fd5b919050565b60008060408385031215610e3057600080fd5b610e3983610e01565b946020939093013593505050565b600080600060608486031215610e5c57600080fd5b610e6584610e01565b9250610e7360208501610e01565b9150604084013590509250925092565b600060208284031215610e9557600080fd5b61073c82610e01565b60008060408385031215610eb157600080fd5b610eba83610e01565b915060208301358015158114610ecf57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610f0657600080fd5b610f0f85610e01565b9350610f1d60208601610e01565b925060408501359150606085013567ffffffffffffffff80821115610f4157600080fd5b818701915087601f830112610f5557600080fd5b813581811115610f6757610f67610eda565b604051601f8201601f19908116603f01168101908382118183101715610f8f57610f8f610eda565b816040528281528a6020848701011115610fa857600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610fdf57600080fd5b610fe883610e01565b9150610ff660208401610e01565b90509250929050565b600181811c9082168061101357607f821691505b60208210810361103357634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6000835161109c818460208801610d7d565b8351908301906110b0818360208801610d7d565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156110e1576110e16110b9565b500390565b600082198211156110f9576110f96110b9565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b600060018201611162576111626110b9565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261118e5761118e611169565b500490565b6000826111a2576111a2611169565b500690565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906111f090830184610da9565b9695505050505050565b60006020828403121561120c57600080fd5b815161073c81610d4756fea264697066735822122068a7370c088bfa1e8e4d684fd8962e6051394851eb15193b1c0f3b674aaf648864736f6c634300080d0033",
  "bytecodeSha1": "790f84d8a99b4200a76a1ba4a29a5b153fe19883",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.13+commit.abaa5c0e"
  },
  "contractName": "ERC721",
  "coverageMap": {
    "branches": {
      "10": {
        "ERC721._checkOnERC721Received": {
          "61": [
            12779,
            12797,
            false
          ]
        },
        "ERC721._safeTransfer": {
          "60": [
            6747,
            6795,
            true
          ]
        },
        "ERC721._setApprovalForAll": {
          "59": [
            11616,
            11633,
            true
          ]
        },
        "ERC721._transfer": {
          "57": [
            10580,
            10611,
            true
          ],
          "58": [
            10671,
            10687,
            true
          ]
        },
        "ERC721.approve": {
          "50": [
            3675,
            3686,
            true
          ],
          "51": [
            3756,
            3777,
            true
          ],
          "52": [
            3781,
            3818,
            true
          ]
        },
        "ERC721.balanceOf": {
          "54": [
            2028,
            2047,
            true
          ]
        },
        "ERC721.safeTransferFrom": {
          "55": [
            5537,
            5578,
            true
          ]
        },
        "ERC721.tokenURI": {
          "56": [
            3054,
            3079,
            true
          ]
        },
        "ERC721.transferFrom": {
          "53": [
            4916,
            4957,
            true
          ]
        }
      },
      "11": {},
      "12": {},
      "14": {},
      "15": {},
      "16": {},
      "18": {
        "Strings.toString": {
          "62": [
            601,
            611,
            false
          ]
        }
      },
      "19": {},
      "20": {}
    },
    "statements": {
      "10": {
        "ERC721._approve": {
          "24": [
            11243,
            11272
          ],
          "25": [
            11282,
            11333
          ]
        },
        "ERC721._baseURI": {
          "22": [
            3465,
            3474
          ]
        },
        "ERC721._checkOnERC721Received": {
          "47": [
            12821,
            12881
          ],
          "48": [
            12655,
            12713
          ],
          "49": [
            13085,
            13096
          ]
        },
        "ERC721._exists": {
          "4": [
            7241,
            7278
          ]
        },
        "ERC721._isApprovedOrOwner": {
          "26": [
            7552,
            7625
          ],
          "27": [
            7684,
            7780
          ]
        },
        "ERC721._safeTransfer": {
          "38": [
            6701,
            6729
          ],
          "39": [
            6739,
            6850
          ]
        },
        "ERC721._setApprovalForAll": {
          "35": [
            11608,
            11663
          ],
          "36": [
            11673,
            11719
          ],
          "37": [
            11729,
            11775
          ]
        },
        "ERC721._transfer": {
          "28": [
            10572,
            10653
          ],
          "29": [
            10663,
            10728
          ],
          "30": [
            10840,
            10869
          ],
          "31": [
            10880,
            10900
          ],
          "32": [
            10910,
            10928
          ],
          "33": [
            10938,
            10959
          ],
          "34": [
            10970,
            11002
          ]
        },
        "ERC721.approve": {
          "7": [
            3667,
            3724
          ],
          "9": [
            3735,
            3900
          ],
          "10": [
            3911,
            3932
          ]
        },
        "ERC721.balanceOf": {
          "15": [
            2020,
            2094
          ],
          "16": [
            2104,
            2127
          ]
        },
        "ERC721.getApproved": {
          "5": [
            4095,
            4168
          ],
          "6": [
            4179,
            4210
          ]
        },
        "ERC721.isApprovedForAll": {
          "0": [
            4616,
            4658
          ]
        },
        "ERC721.name": {
          "3": [
            2567,
            2579
          ]
        },
        "ERC721.ownerOf": {
          "14": [
            2324,
            2397
          ]
        },
        "ERC721.safeTransferFrom": {
          "13": [
            5256,
            5295
          ],
          "19": [
            5529,
            5632
          ],
          "20": [
            5642,
            5681
          ]
        },
        "ERC721.setApprovalForAll": {
          "18": [
            4378,
            4430
          ]
        },
        "ERC721.supportsInterface": {
          "1": [
            1688,
            1863
          ]
        },
        "ERC721.symbol": {
          "17": [
            2731,
            2745
          ]
        },
        "ERC721.tokenURI": {
          "21": [
            2916,
            2992
          ],
          "23": [
            3047,
            3140
          ]
        },
        "ERC721.transferFrom": {
          "11": [
            4908,
            5011
          ],
          "12": [
            5022,
            5050
          ]
        }
      },
      "11": {},
      "12": {},
      "14": {},
      "15": {
        "Address.isContract": {
          "46": [
            1458,
            1488
          ]
        }
      },
      "16": {
        "Context._msgSender": {
          "8": [
            712,
            729
          ]
        }
      },
      "18": {
        "Strings.toString": {
          "40": [
            627,
            637
          ],
          "41": [
            743,
            751
          ],
          "42": [
            765,
            775
          ],
          "43": [
            877,
            888
          ],
          "44": [
            902,
            958
          ],
          "45": [
            972,
            983
          ]
        }
      },
      "19": {
        "ERC165.supportsInterface": {
          "2": [
            930,
            977
          ]
        }
      },
      "20": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.6.0/Address",
    "OpenZeppelin/openzeppelin-contracts@4.6.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.6.0/ERC165",
    "OpenZeppelin/openzeppelin-contracts@4.6.0/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.6.0/IERC721",
    "OpenZeppelin/openzeppelin-contracts@4.6.0/IERC721Metadata",
    "OpenZeppelin/openzeppelin-contracts@4.6.0/IERC721Receiver",
    "OpenZeppelin/openzeppelin-contracts@4.6.0/Strings"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101b3578063b88d4fde146101c6578063c87b56dd146101d9578063e985e9c5146101ec57600080fd5b80636352211e1461017757806370a082311461018a57806395d89b41146101ab57600080fd5b806301ffc9a7146100d457806306fdde03146100fc578063081812fc14610111578063095ea7b31461013c57806323b872dd1461015157806342842e0e14610164575b600080fd5b6100e76100e2366004610d60565b610228565b60405190151581526020015b60405180910390f35b61010461027a565b6040516100f39190610dd5565b61012461011f366004610de8565b61030c565b6040516001600160a01b0390911681526020016100f3565b61014f61014a366004610e1d565b6103a6565b005b61014f61015f366004610e47565b6104bb565b61014f610172366004610e47565b6104ec565b610124610185366004610de8565b610507565b61019d610198366004610e83565b61057e565b6040519081526020016100f3565b610104610605565b61014f6101c1366004610e9e565b610614565b61014f6101d4366004610ef0565b610623565b6101046101e7366004610de8565b61065b565b6100e76101fa366004610fcc565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061025957506001600160e01b03198216635b5e139f60e01b145b8061027457506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461028990610fff565b80601f01602080910402602001604051908101604052809291908181526020018280546102b590610fff565b80156103025780601f106102d757610100808354040283529160200191610302565b820191906000526020600020905b8154815290600101906020018083116102e557829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b031661038a5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006103b182610507565b9050806001600160a01b0316836001600160a01b03160361041e5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610381565b336001600160a01b038216148061043a575061043a81336101fa565b6104ac5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610381565b6104b68383610743565b505050565b6104c533826107b1565b6104e15760405162461bcd60e51b815260040161038190611039565b6104b68383836108a8565b6104b683838360405180602001604052806000815250610623565b6000818152600260205260408120546001600160a01b0316806102745760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610381565b60006001600160a01b0382166105e95760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610381565b506001600160a01b031660009081526003602052604090205490565b60606001805461028990610fff565b61061f338383610a44565b5050565b61062d33836107b1565b6106495760405162461bcd60e51b815260040161038190611039565b61065584848484610b12565b50505050565b6000818152600260205260409020546060906001600160a01b03166106da5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610381565b60006106f160408051602081019091526000815290565b90506000815111610711576040518060200160405280600081525061073c565b8061071b84610b45565b60405160200161072c92919061108a565b6040516020818303038152906040525b9392505050565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061077882610507565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b031661082a5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610381565b600061083583610507565b9050806001600160a01b0316846001600160a01b0316148061087c57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806108a05750836001600160a01b03166108958461030c565b6001600160a01b0316145b949350505050565b826001600160a01b03166108bb82610507565b6001600160a01b03161461091f5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610381565b6001600160a01b0382166109815760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610381565b61098c600082610743565b6001600160a01b03831660009081526003602052604081208054600192906109b59084906110cf565b90915550506001600160a01b03821660009081526003602052604081208054600192906109e39084906110e6565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b031603610aa55760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610381565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610b1d8484846108a8565b610b2984848484610c46565b6106555760405162461bcd60e51b8152600401610381906110fe565b606081600003610b6c5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610b965780610b8081611150565b9150610b8f9050600a8361117f565b9150610b70565b60008167ffffffffffffffff811115610bb157610bb1610eda565b6040519080825280601f01601f191660200182016040528015610bdb576020820181803683370190505b5090505b84156108a057610bf06001836110cf565b9150610bfd600a86611193565b610c089060306110e6565b60f81b818381518110610c1d57610c1d6111a7565b60200101906001600160f81b031916908160001a905350610c3f600a8661117f565b9450610bdf565b60006001600160a01b0384163b15610d3c57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610c8a9033908990889088906004016111bd565b6020604051808303816000875af1925050508015610cc5575060408051601f3d908101601f19168201909252610cc2918101906111fa565b60015b610d22573d808015610cf3576040519150601f19603f3d011682016040523d82523d6000602084013e610cf8565b606091505b508051600003610d1a5760405162461bcd60e51b8152600401610381906110fe565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506108a0565b506001949350505050565b6001600160e01b031981168114610d5d57600080fd5b50565b600060208284031215610d7257600080fd5b813561073c81610d47565b60005b83811015610d98578181015183820152602001610d80565b838111156106555750506000910152565b60008151808452610dc1816020860160208601610d7d565b601f01601f19169290920160200192915050565b60208152600061073c6020830184610da9565b600060208284031215610dfa57600080fd5b5035919050565b80356001600160a01b0381168114610e1857600080fd5b919050565b60008060408385031215610e3057600080fd5b610e3983610e01565b946020939093013593505050565b600080600060608486031215610e5c57600080fd5b610e6584610e01565b9250610e7360208501610e01565b9150604084013590509250925092565b600060208284031215610e9557600080fd5b61073c82610e01565b60008060408385031215610eb157600080fd5b610eba83610e01565b915060208301358015158114610ecf57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610f0657600080fd5b610f0f85610e01565b9350610f1d60208601610e01565b925060408501359150606085013567ffffffffffffffff80821115610f4157600080fd5b818701915087601f830112610f5557600080fd5b813581811115610f6757610f67610eda565b604051601f8201601f19908116603f01168101908382118183101715610f8f57610f8f610eda565b816040528281528a6020848701011115610fa857600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610fdf57600080fd5b610fe883610e01565b9150610ff660208401610e01565b90509250929050565b600181811c9082168061101357607f821691505b60208210810361103357634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6000835161109c818460208801610d7d565b8351908301906110b0818360208801610d7d565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156110e1576110e16110b9565b500390565b600082198211156110f9576110f96110b9565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b600060018201611162576111626110b9565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261118e5761118e611169565b500490565b6000826111a2576111a2611169565b500690565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906111f090830184610da9565b9695505050505050565b60006020828403121561120c57600080fd5b815161073c81610d4756fea264697066735822122068a7370c088bfa1e8e4d684fd8962e6051394851eb15193b1c0f3b674aaf648864736f6c634300080d0033",
  "deployedSourceMap": "628:13658:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300;;;;;;:::i;:::-;;:::i;:::-;;;565:14:23;;558:22;540:41;;528:2;513:18;1570:300:10;;;;;;;;2488:98;;;:::i;:::-;;;;;;;:::i;4000:217::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1692:32:23;;;1674:51;;1662:2;1647:18;4000:217:10;1528:203:23;3538:401:10;;;;;;:::i;:::-;;:::i;:::-;;4727:330;;;;;;:::i;:::-;;:::i;5123:179::-;;;;;;:::i;:::-;;:::i;2191:235::-;;;;;;:::i;:::-;;:::i;1929:205::-;;;;;;:::i;:::-;;:::i;:::-;;;2843:25:23;;;2831:2;2816:18;1929:205:10;2697:177:23;2650:102:10;;;:::i;4284:153::-;;;;;;:::i;:::-;;:::i;5368:320::-;;;;;;:::i;:::-;;:::i;2818:329::-;;;;;;:::i;:::-;;:::i;4503:162::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4623:25:10;;;4600:4;4623:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4503:162;1570:300;1672:4;-1:-1:-1;;;;;;1707:40:10;;-1:-1:-1;;;1707:40:10;;:104;;-1:-1:-1;;;;;;;1763:48:10;;-1:-1:-1;;;1763:48:10;1707:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:19;;;1827:36:10;1688:175;1570:300;-1:-1:-1;;1570:300:10:o;2488:98::-;2542:13;2574:5;2567:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2488:98;:::o;4000:217::-;4076:7;7248:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7248:16:10;4095:73;;;;-1:-1:-1;;;4095:73:10;;5358:2:23;4095:73:10;;;5340:21:23;5397:2;5377:18;;;5370:30;5436:34;5416:18;;;5409:62;-1:-1:-1;;;5487:18:23;;;5480:42;5539:19;;4095:73:10;;;;;;;;;-1:-1:-1;4186:24:10;;;;:15;:24;;;;;;-1:-1:-1;;;;;4186:24:10;;4000:217::o;3538:401::-;3618:13;3634:23;3649:7;3634:14;:23::i;:::-;3618:39;;3681:5;-1:-1:-1;;;;;3675:11:10;:2;-1:-1:-1;;;;;3675:11:10;;3667:57;;;;-1:-1:-1;;;3667:57:10;;5771:2:23;3667:57:10;;;5753:21:23;5810:2;5790:18;;;5783:30;5849:34;5829:18;;;5822:62;-1:-1:-1;;;5900:18:23;;;5893:31;5941:19;;3667:57:10;5569:397:23;3667:57:10;719:10:16;-1:-1:-1;;;;;3756:21:10;;;;:62;;-1:-1:-1;3781:37:10;3798:5;719:10:16;4503:162:10;:::i;3781:37::-;3735:165;;;;-1:-1:-1;;;3735:165:10;;6173:2:23;3735:165:10;;;6155:21:23;6212:2;6192:18;;;6185:30;6251:34;6231:18;;;6224:62;6322:26;6302:18;;;6295:54;6366:19;;3735:165:10;5971:420:23;3735:165:10;3911:21;3920:2;3924:7;3911:8;:21::i;:::-;3608:331;3538:401;;:::o;4727:330::-;4916:41;719:10:16;4949:7:10;4916:18;:41::i;:::-;4908:103;;;;-1:-1:-1;;;4908:103:10;;;;;;;:::i;:::-;5022:28;5032:4;5038:2;5042:7;5022:9;:28::i;5123:179::-;5256:39;5273:4;5279:2;5283:7;5256:39;;;;;;;;;;;;:16;:39::i;2191:235::-;2263:7;2298:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2298:16:10;;2324:73;;;;-1:-1:-1;;;2324:73:10;;7016:2:23;2324:73:10;;;6998:21:23;7055:2;7035:18;;;7028:30;7094:34;7074:18;;;7067:62;-1:-1:-1;;;7145:18:23;;;7138:39;7194:19;;2324:73:10;6814:405:23;1929:205:10;2001:7;-1:-1:-1;;;;;2028:19:10;;2020:74;;;;-1:-1:-1;;;2020:74:10;;7426:2:23;2020:74:10;;;7408:21:23;7465:2;7445:18;;;7438:30;7504:34;7484:18;;;7477:62;-1:-1:-1;;;7555:18:23;;;7548:40;7605:19;;2020:74:10;7224:406:23;2020:74:10;-1:-1:-1;;;;;;2111:16:10;;;;;:9;:16;;;;;;;1929:205::o;2650:102::-;2706:13;2738:7;2731:14;;;;;:::i;4284:153::-;4378:52;719:10:16;4411:8:10;4421;4378:18;:52::i;:::-;4284:153;;:::o;5368:320::-;5537:41;719:10:16;5570:7:10;5537:18;:41::i;:::-;5529:103;;;;-1:-1:-1;;;5529:103:10;;;;;;;:::i;:::-;5642:39;5656:4;5662:2;5666:7;5675:5;5642:13;:39::i;:::-;5368:320;;;;:::o;2818:329::-;7225:4;7248:16;;;:7;:16;;;;;;2891:13;;-1:-1:-1;;;;;7248:16:10;2916:76;;;;-1:-1:-1;;;2916:76:10;;7837:2:23;2916:76:10;;;7819:21:23;7876:2;7856:18;;;7849:30;7915:34;7895:18;;;7888:62;-1:-1:-1;;;7966:18:23;;;7959:45;8021:19;;2916:76:10;7635:411:23;2916:76:10;3003:21;3027:10;3465:9;;;;;;;;;-1:-1:-1;3465:9:10;;;3389:92;3027:10;3003:34;;3078:1;3060:7;3054:21;:25;:86;;;;;;;;;;;;;;;;;3106:7;3115:18;:7;:16;:18::i;:::-;3089:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3054:86;3047:93;2818:329;-1:-1:-1;;;2818:329:10:o;11169:171::-;11243:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11243:29:10;-1:-1:-1;;;;;11243:29:10;;;;;;;;:24;;11296:23;11243:24;11296:14;:23::i;:::-;-1:-1:-1;;;;;11287:46:10;;;;;;;;;;;11169:171;;:::o;7443:344::-;7536:4;7248:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7248:16:10;7552:73;;;;-1:-1:-1;;;7552:73:10;;8728:2:23;7552:73:10;;;8710:21:23;8767:2;8747:18;;;8740:30;8806:34;8786:18;;;8779:62;-1:-1:-1;;;8857:18:23;;;8850:42;8909:19;;7552:73:10;8526:408:23;7552:73:10;7635:13;7651:23;7666:7;7651:14;:23::i;:::-;7635:39;;7703:5;-1:-1:-1;;;;;7692:16:10;:7;-1:-1:-1;;;;;7692:16:10;;:52;;;-1:-1:-1;;;;;;4623:25:10;;;4600:4;4623:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;7712:32;7692:87;;;;7772:7;-1:-1:-1;;;;;7748:31:10;:20;7760:7;7748:11;:20::i;:::-;-1:-1:-1;;;;;7748:31:10;;7692:87;7684:96;7443:344;-1:-1:-1;;;;7443:344:10:o;10453:605::-;10607:4;-1:-1:-1;;;;;10580:31:10;:23;10595:7;10580:14;:23::i;:::-;-1:-1:-1;;;;;10580:31:10;;10572:81;;;;-1:-1:-1;;;10572:81:10;;9141:2:23;10572:81:10;;;9123:21:23;9180:2;9160:18;;;9153:30;9219:34;9199:18;;;9192:62;-1:-1:-1;;;9270:18:23;;;9263:35;9315:19;;10572:81:10;8939:401:23;10572:81:10;-1:-1:-1;;;;;10671:16:10;;10663:65;;;;-1:-1:-1;;;10663:65:10;;9547:2:23;10663:65:10;;;9529:21:23;9586:2;9566:18;;;9559:30;9625:34;9605:18;;;9598:62;-1:-1:-1;;;9676:18:23;;;9669:34;9720:19;;10663:65:10;9345:400:23;10663:65:10;10840:29;10857:1;10861:7;10840:8;:29::i;:::-;-1:-1:-1;;;;;10880:15:10;;;;;;:9;:15;;;;;:20;;10899:1;;10880:15;:20;;10899:1;;10880:20;:::i;:::-;;;;-1:-1:-1;;;;;;;10910:13:10;;;;;;:9;:13;;;;;:18;;10927:1;;10910:13;:18;;10927:1;;10910:18;:::i;:::-;;;;-1:-1:-1;;10938:16:10;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;10938:21:10;-1:-1:-1;;;;;10938:21:10;;;;;;;;;10975:27;;10938:16;;10975:27;;;;;;;3608:331;3538:401;;:::o;11475:307::-;11625:8;-1:-1:-1;;;;;11616:17:10;:5;-1:-1:-1;;;;;11616:17:10;;11608:55;;;;-1:-1:-1;;;11608:55:10;;10347:2:23;11608:55:10;;;10329:21:23;10386:2;10366:18;;;10359:30;10425:27;10405:18;;;10398:55;10470:18;;11608:55:10;10145:349:23;11608:55:10;-1:-1:-1;;;;;11673:25:10;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;11673:46:10;;;;;;;;;;11734:41;;540::23;;;11734::10;;513:18:23;11734:41:10;;;;;;;11475:307;;;:::o;6550:::-;6701:28;6711:4;6717:2;6721:7;6701:9;:28::i;:::-;6747:48;6770:4;6776:2;6780:7;6789:5;6747:22;:48::i;:::-;6739:111;;;;-1:-1:-1;;;6739:111:10;;;;;;;:::i;328:703:18:-;384:13;601:5;610:1;601:10;597:51;;-1:-1:-1;;627:10:18;;;;;;;;;;;;-1:-1:-1;;;627:10:18;;;;;328:703::o;597:51::-;672:5;657:12;711:75;718:9;;711:75;;743:8;;;;:::i;:::-;;-1:-1:-1;765:10:18;;-1:-1:-1;773:2:18;765:10;;:::i;:::-;;;711:75;;;795:19;827:6;817:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:17:18;;795:39;;844:150;851:10;;844:150;;877:11;887:1;877:11;;:::i;:::-;;-1:-1:-1;945:10:18;953:2;945:5;:10;:::i;:::-;932:24;;:2;:24;:::i;:::-;919:39;;902:6;909;902:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;902:56:18;;;;;;;;-1:-1:-1;972:11:18;981:2;972:11;;:::i;:::-;;;844:150;;12335:778:10;12485:4;-1:-1:-1;;;;;12505:13:10;;1465:19:15;:23;12501:606:10;;12540:72;;-1:-1:-1;;;12540:72:10;;-1:-1:-1;;;;;12540:36:10;;;;;:72;;719:10:16;;12591:4:10;;12597:7;;12606:5;;12540:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12540:72:10;;;;;;;;-1:-1:-1;;12540:72:10;;;;;;;;;;;;:::i;:::-;;;12536:519;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12779:6;:13;12796:1;12779:18;12775:266;;12821:60;;-1:-1:-1;;;12821:60:10;;;;;;;:::i;12775:266::-;12993:6;12987:13;12978:6;12974:2;12970:15;12963:38;12536:519;-1:-1:-1;;;;;;12662:51:10;-1:-1:-1;;;12662:51:10;;-1:-1:-1;12655:58:10;;12501:606;-1:-1:-1;13092:4:10;12335:778;;;;;;:::o;14:131:23:-;-1:-1:-1;;;;;;88:32:23;;78:43;;68:71;;135:1;132;125:12;68:71;14:131;:::o;150:245::-;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:258::-;664:1;674:113;688:6;685:1;682:13;674:113;;;764:11;;;758:18;745:11;;;738:39;710:2;703:10;674:113;;;805:6;802:1;799:13;796:48;;;-1:-1:-1;;840:1:23;822:16;;815:27;592:258::o;855:::-;897:3;935:5;929:12;962:6;957:3;950:19;978:63;1034:6;1027:4;1022:3;1018:14;1011:4;1004:5;1000:16;978:63;:::i;:::-;1095:2;1074:15;-1:-1:-1;;1070:29:23;1061:39;;;;1102:4;1057:50;;855:258;-1:-1:-1;;855:258:23:o;1118:220::-;1267:2;1256:9;1249:21;1230:4;1287:45;1328:2;1317:9;1313:18;1305:6;1287:45;:::i;1343:180::-;1402:6;1455:2;1443:9;1434:7;1430:23;1426:32;1423:52;;;1471:1;1468;1461:12;1423:52;-1:-1:-1;1494:23:23;;1343:180;-1:-1:-1;1343:180:23:o;1736:173::-;1804:20;;-1:-1:-1;;;;;1853:31:23;;1843:42;;1833:70;;1899:1;1896;1889:12;1833:70;1736:173;;;:::o;1914:254::-;1982:6;1990;2043:2;2031:9;2022:7;2018:23;2014:32;2011:52;;;2059:1;2056;2049:12;2011:52;2082:29;2101:9;2082:29;:::i;:::-;2072:39;2158:2;2143:18;;;;2130:32;;-1:-1:-1;;;1914:254:23:o;2173:328::-;2250:6;2258;2266;2319:2;2307:9;2298:7;2294:23;2290:32;2287:52;;;2335:1;2332;2325:12;2287:52;2358:29;2377:9;2358:29;:::i;:::-;2348:39;;2406:38;2440:2;2429:9;2425:18;2406:38;:::i;:::-;2396:48;;2491:2;2480:9;2476:18;2463:32;2453:42;;2173:328;;;;;:::o;2506:186::-;2565:6;2618:2;2606:9;2597:7;2593:23;2589:32;2586:52;;;2634:1;2631;2624:12;2586:52;2657:29;2676:9;2657:29;:::i;2879:347::-;2944:6;2952;3005:2;2993:9;2984:7;2980:23;2976:32;2973:52;;;3021:1;3018;3011:12;2973:52;3044:29;3063:9;3044:29;:::i;:::-;3034:39;;3123:2;3112:9;3108:18;3095:32;3170:5;3163:13;3156:21;3149:5;3146:32;3136:60;;3192:1;3189;3182:12;3136:60;3215:5;3205:15;;;2879:347;;;;;:::o;3231:127::-;3292:10;3287:3;3283:20;3280:1;3273:31;3323:4;3320:1;3313:15;3347:4;3344:1;3337:15;3363:1138;3458:6;3466;3474;3482;3535:3;3523:9;3514:7;3510:23;3506:33;3503:53;;;3552:1;3549;3542:12;3503:53;3575:29;3594:9;3575:29;:::i;:::-;3565:39;;3623:38;3657:2;3646:9;3642:18;3623:38;:::i;:::-;3613:48;;3708:2;3697:9;3693:18;3680:32;3670:42;;3763:2;3752:9;3748:18;3735:32;3786:18;3827:2;3819:6;3816:14;3813:34;;;3843:1;3840;3833:12;3813:34;3881:6;3870:9;3866:22;3856:32;;3926:7;3919:4;3915:2;3911:13;3907:27;3897:55;;3948:1;3945;3938:12;3897:55;3984:2;3971:16;4006:2;4002;3999:10;3996:36;;;4012:18;;:::i;:::-;4087:2;4081:9;4055:2;4141:13;;-1:-1:-1;;4137:22:23;;;4161:2;4133:31;4129:40;4117:53;;;4185:18;;;4205:22;;;4182:46;4179:72;;;4231:18;;:::i;:::-;4271:10;4267:2;4260:22;4306:2;4298:6;4291:18;4346:7;4341:2;4336;4332;4328:11;4324:20;4321:33;4318:53;;;4367:1;4364;4357:12;4318:53;4423:2;4418;4414;4410:11;4405:2;4397:6;4393:15;4380:46;4468:1;4463:2;4458;4450:6;4446:15;4442:24;4435:35;4489:6;4479:16;;;;;;;3363:1138;;;;;;;:::o;4506:260::-;4574:6;4582;4635:2;4623:9;4614:7;4610:23;4606:32;4603:52;;;4651:1;4648;4641:12;4603:52;4674:29;4693:9;4674:29;:::i;:::-;4664:39;;4722:38;4756:2;4745:9;4741:18;4722:38;:::i;:::-;4712:48;;4506:260;;;;;:::o;4771:380::-;4850:1;4846:12;;;;4893;;;4914:61;;4968:4;4960:6;4956:17;4946:27;;4914:61;5021:2;5013:6;5010:14;4990:18;4987:38;4984:161;;5067:10;5062:3;5058:20;5055:1;5048:31;5102:4;5099:1;5092:15;5130:4;5127:1;5120:15;4984:161;;4771:380;;;:::o;6396:413::-;6598:2;6580:21;;;6637:2;6617:18;;;6610:30;6676:34;6671:2;6656:18;;6649:62;-1:-1:-1;;;6742:2:23;6727:18;;6720:47;6799:3;6784:19;;6396:413::o;8051:470::-;8230:3;8268:6;8262:13;8284:53;8330:6;8325:3;8318:4;8310:6;8306:17;8284:53;:::i;:::-;8400:13;;8359:16;;;;8422:57;8400:13;8359:16;8456:4;8444:17;;8422:57;:::i;:::-;8495:20;;8051:470;-1:-1:-1;;;;8051:470:23:o;9750:127::-;9811:10;9806:3;9802:20;9799:1;9792:31;9842:4;9839:1;9832:15;9866:4;9863:1;9856:15;9882:125;9922:4;9950:1;9947;9944:8;9941:34;;;9955:18;;:::i;:::-;-1:-1:-1;9992:9:23;;9882:125::o;10012:128::-;10052:3;10083:1;10079:6;10076:1;10073:13;10070:39;;;10089:18;;:::i;:::-;-1:-1:-1;10125:9:23;;10012:128::o;10499:414::-;10701:2;10683:21;;;10740:2;10720:18;;;10713:30;10779:34;10774:2;10759:18;;10752:62;-1:-1:-1;;;10845:2:23;10830:18;;10823:48;10903:3;10888:19;;10499:414::o;10918:135::-;10957:3;10978:17;;;10975:43;;10998:18;;:::i;:::-;-1:-1:-1;11045:1:23;11034:13;;10918:135::o;11058:127::-;11119:10;11114:3;11110:20;11107:1;11100:31;11150:4;11147:1;11140:15;11174:4;11171:1;11164:15;11190:120;11230:1;11256;11246:35;;11261:18;;:::i;:::-;-1:-1:-1;11295:9:23;;11190:120::o;11315:112::-;11347:1;11373;11363:35;;11378:18;;:::i;:::-;-1:-1:-1;11412:9:23;;11315:112::o;11432:127::-;11493:10;11488:3;11484:20;11481:1;11474:31;11524:4;11521:1;11514:15;11548:4;11545:1;11538:15;11564:489;-1:-1:-1;;;;;11833:15:23;;;11815:34;;11885:15;;11880:2;11865:18;;11858:43;11932:2;11917:18;;11910:34;;;11980:3;11975:2;11960:18;;11953:31;;;11758:4;;12001:46;;12027:19;;12019:6;12001:46;:::i;:::-;11993:54;11564:489;-1:-1:-1;;;;;;11564:489:23:o;12058:249::-;12127:6;12180:2;12168:9;12159:7;12155:23;12151:32;12148:52;;;12196:1;12193;12186:12;12148:52;12228:9;12222:16;12247:30;12271:5;12247:30;:::i",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "constructor": {
        "details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      }
    },
    "version": 1
  },
  "offset": [
    628,
    14286
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x164 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7 PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0xD60 JUMP JUMPDEST PUSH2 0x228 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x27A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xDD5 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0xDE8 JUMP JUMPDEST PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0xE1D JUMP JUMPDEST PUSH2 0x3A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0xE47 JUMP JUMPDEST PUSH2 0x4BB JUMP JUMPDEST PUSH2 0x14F PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0xE47 JUMP JUMPDEST PUSH2 0x4EC JUMP JUMPDEST PUSH2 0x124 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0xDE8 JUMP JUMPDEST PUSH2 0x507 JUMP JUMPDEST PUSH2 0x19D PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0xE83 JUMP JUMPDEST PUSH2 0x57E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x605 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0xE9E JUMP JUMPDEST PUSH2 0x614 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0xEF0 JUMP JUMPDEST PUSH2 0x623 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x1E7 CALLDATASIZE PUSH1 0x4 PUSH2 0xDE8 JUMP JUMPDEST PUSH2 0x65B JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0xFCC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x259 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x274 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0xFFF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B5 SWAP1 PUSH2 0xFFF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x302 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x302 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x38A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B1 DUP3 PUSH2 0x507 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x41E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x43A JUMPI POP PUSH2 0x43A DUP2 CALLER PUSH2 0x1FA JUMP JUMPDEST PUSH2 0x4AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH2 0x4B6 DUP4 DUP4 PUSH2 0x743 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x4C5 CALLER DUP3 PUSH2 0x7B1 JUMP JUMPDEST PUSH2 0x4E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x1039 JUMP JUMPDEST PUSH2 0x4B6 DUP4 DUP4 DUP4 PUSH2 0x8A8 JUMP JUMPDEST PUSH2 0x4B6 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x623 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x274 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0xFFF JUMP JUMPDEST PUSH2 0x61F CALLER DUP4 DUP4 PUSH2 0xA44 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x62D CALLER DUP4 PUSH2 0x7B1 JUMP JUMPDEST PUSH2 0x649 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x1039 JUMP JUMPDEST PUSH2 0x655 DUP5 DUP5 DUP5 DUP5 PUSH2 0xB12 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6F1 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x711 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x73C JUMP JUMPDEST DUP1 PUSH2 0x71B DUP5 PUSH2 0xB45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x72C SWAP3 SWAP2 SWAP1 PUSH2 0x108A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x778 DUP3 PUSH2 0x507 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x82A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x835 DUP4 PUSH2 0x507 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x87C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0x8A0 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x895 DUP5 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8BB DUP3 PUSH2 0x507 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x91F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x981 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH2 0x98C PUSH1 0x0 DUP3 PUSH2 0x743 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x9B5 SWAP1 DUP5 SWAP1 PUSH2 0x10CF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x9E3 SWAP1 DUP5 SWAP1 PUSH2 0x10E6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xAA5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xB1D DUP5 DUP5 DUP5 PUSH2 0x8A8 JUMP JUMPDEST PUSH2 0xB29 DUP5 DUP5 DUP5 DUP5 PUSH2 0xC46 JUMP JUMPDEST PUSH2 0x655 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x10FE JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 SUB PUSH2 0xB6C JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0xB96 JUMPI DUP1 PUSH2 0xB80 DUP2 PUSH2 0x1150 JUMP JUMPDEST SWAP2 POP PUSH2 0xB8F SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x117F JUMP JUMPDEST SWAP2 POP PUSH2 0xB70 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBB1 JUMPI PUSH2 0xBB1 PUSH2 0xEDA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBDB JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x8A0 JUMPI PUSH2 0xBF0 PUSH1 0x1 DUP4 PUSH2 0x10CF JUMP JUMPDEST SWAP2 POP PUSH2 0xBFD PUSH1 0xA DUP7 PUSH2 0x1193 JUMP JUMPDEST PUSH2 0xC08 SWAP1 PUSH1 0x30 PUSH2 0x10E6 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xC1D JUMPI PUSH2 0xC1D PUSH2 0x11A7 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0xC3F PUSH1 0xA DUP7 PUSH2 0x117F JUMP JUMPDEST SWAP5 POP PUSH2 0xBDF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xD3C JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xC8A SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x11BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xCC5 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xCC2 SWAP2 DUP2 ADD SWAP1 PUSH2 0x11FA JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xD22 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xCF3 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xCF8 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xD1A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x10FE JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x8A0 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xD5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x73C DUP2 PUSH2 0xD47 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD98 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD80 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x655 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xDC1 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xD7D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x73C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xDA9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE39 DUP4 PUSH2 0xE01 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE65 DUP5 PUSH2 0xE01 JUMP JUMPDEST SWAP3 POP PUSH2 0xE73 PUSH1 0x20 DUP6 ADD PUSH2 0xE01 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x73C DUP3 PUSH2 0xE01 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEBA DUP4 PUSH2 0xE01 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xECF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xF06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF0F DUP6 PUSH2 0xE01 JUMP JUMPDEST SWAP4 POP PUSH2 0xF1D PUSH1 0x20 DUP7 ADD PUSH2 0xE01 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xF41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xF67 JUMPI PUSH2 0xF67 PUSH2 0xEDA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xF8F JUMPI PUSH2 0xF8F PUSH2 0xEDA JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xFA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFE8 DUP4 PUSH2 0xE01 JUMP JUMPDEST SWAP2 POP PUSH2 0xFF6 PUSH1 0x20 DUP5 ADD PUSH2 0xE01 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1013 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1033 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x109C DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xD7D JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x10B0 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xD7D JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x10E1 JUMPI PUSH2 0x10E1 PUSH2 0x10B9 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x10F9 JUMPI PUSH2 0x10F9 PUSH2 0x10B9 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1162 JUMPI PUSH2 0x1162 PUSH2 0x10B9 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x118E JUMPI PUSH2 0x118E PUSH2 0x1169 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x11A2 JUMPI PUSH2 0x11A2 PUSH2 0x1169 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x11F0 SWAP1 DUP4 ADD DUP5 PUSH2 0xDA9 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x120C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x73C DUP2 PUSH2 0xD47 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0xA7370C088BFA1E8E4D PUSH9 0x4FD8962E6051394851 0xEB ISZERO NOT EXTCODESIZE SHR 0xF EXTCODESIZE PUSH8 0x4AAF648864736F6C PUSH4 0x4300080D STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        628,
        14286
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "6": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "DUP1",
      "path": "10"
    },
    "7": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "8": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "12": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "DUP1",
      "path": "10"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "REVERT",
      "path": "10"
    },
    "16": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "17": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "POP",
      "path": "10"
    },
    "18": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "21": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "LT",
      "path": "10"
    },
    "22": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xCF"
    },
    "25": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "26": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "29": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "SHR",
      "path": "10"
    },
    "32": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "DUP1",
      "path": "10"
    },
    "33": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x6352211E"
    },
    "38": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "GT",
      "path": "10"
    },
    "39": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x8C"
    },
    "42": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "43": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "DUP1",
      "path": "10"
    },
    "44": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xA22CB465"
    },
    "49": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "GT",
      "path": "10"
    },
    "50": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "54": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "DUP1",
      "path": "10"
    },
    "55": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xA22CB465"
    },
    "60": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "EQ",
      "path": "10"
    },
    "61": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1B3"
    },
    "64": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "65": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "DUP1",
      "path": "10"
    },
    "66": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xB88D4FDE"
    },
    "71": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "EQ",
      "path": "10"
    },
    "72": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1C6"
    },
    "75": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "76": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "DUP1",
      "path": "10"
    },
    "77": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xC87B56DD"
    },
    "82": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "EQ",
      "path": "10"
    },
    "83": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1D9"
    },
    "86": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "87": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "DUP1",
      "path": "10"
    },
    "88": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xE985E9C5"
    },
    "93": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "EQ",
      "path": "10"
    },
    "94": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1EC"
    },
    "97": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "98": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "DUP1",
      "path": "10"
    },
    "101": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "REVERT",
      "path": "10"
    },
    "102": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "103": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "DUP1",
      "path": "10"
    },
    "104": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x6352211E"
    },
    "109": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "EQ",
      "path": "10"
    },
    "110": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x177"
    },
    "113": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "114": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "DUP1",
      "path": "10"
    },
    "115": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x70A08231"
    },
    "120": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "EQ",
      "path": "10"
    },
    "121": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x18A"
    },
    "124": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "125": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "DUP1",
      "path": "10"
    },
    "126": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x95D89B41"
    },
    "131": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "EQ",
      "path": "10"
    },
    "132": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1AB"
    },
    "135": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "136": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "138": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "DUP1",
      "path": "10"
    },
    "139": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "REVERT",
      "path": "10"
    },
    "140": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "141": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "DUP1",
      "path": "10"
    },
    "142": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x1FFC9A7"
    },
    "147": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "EQ",
      "path": "10"
    },
    "148": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xD4"
    },
    "151": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "152": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "DUP1",
      "path": "10"
    },
    "153": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x6FDDE03"
    },
    "158": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "EQ",
      "path": "10"
    },
    "159": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xFC"
    },
    "162": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "163": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "DUP1",
      "path": "10"
    },
    "164": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x81812FC"
    },
    "169": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "EQ",
      "path": "10"
    },
    "170": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x111"
    },
    "173": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "174": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "DUP1",
      "path": "10"
    },
    "175": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x95EA7B3"
    },
    "180": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "EQ",
      "path": "10"
    },
    "181": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x13C"
    },
    "184": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "185": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "DUP1",
      "path": "10"
    },
    "186": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x23B872DD"
    },
    "191": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "EQ",
      "path": "10"
    },
    "192": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x151"
    },
    "195": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "196": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "DUP1",
      "path": "10"
    },
    "197": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x42842E0E"
    },
    "202": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "EQ",
      "path": "10"
    },
    "203": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x164"
    },
    "206": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "207": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "208": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "210": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "DUP1",
      "path": "10"
    },
    "211": {
      "first_revert": true,
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "REVERT",
      "path": "10"
    },
    "212": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "213": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xE7"
    },
    "216": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xE2"
    },
    "219": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "220": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "222": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xD60"
    },
    "225": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMP",
      "path": "10"
    },
    "226": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "227": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x228"
    },
    "230": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMP",
      "path": "10"
    },
    "231": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "232": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "234": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "235": {
      "op": "SWAP1"
    },
    "236": {
      "op": "ISZERO"
    },
    "237": {
      "op": "ISZERO"
    },
    "238": {
      "op": "DUP2"
    },
    "239": {
      "op": "MSTORE"
    },
    "240": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "242": {
      "op": "ADD"
    },
    "243": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "244": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "246": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "247": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "DUP1",
      "path": "10"
    },
    "248": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "249": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "SUB",
      "path": "10"
    },
    "250": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "251": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "RETURN",
      "path": "10"
    },
    "252": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "253": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x104"
    },
    "256": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x27A"
    },
    "259": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMP",
      "path": "10"
    },
    "260": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "261": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "263": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "264": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xF3"
    },
    "267": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "268": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "269": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xDD5"
    },
    "272": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMP",
      "path": "10"
    },
    "273": {
      "fn": "ERC721.getApproved",
      "offset": [
        4000,
        4217
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "274": {
      "fn": "ERC721.getApproved",
      "offset": [
        4000,
        4217
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x124"
    },
    "277": {
      "fn": "ERC721.getApproved",
      "offset": [
        4000,
        4217
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x11F"
    },
    "280": {
      "fn": "ERC721.getApproved",
      "offset": [
        4000,
        4217
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "281": {
      "fn": "ERC721.getApproved",
      "offset": [
        4000,
        4217
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "283": {
      "fn": "ERC721.getApproved",
      "offset": [
        4000,
        4217
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xDE8"
    },
    "286": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        4000,
        4217
      ],
      "op": "JUMP",
      "path": "10"
    },
    "287": {
      "fn": "ERC721.getApproved",
      "offset": [
        4000,
        4217
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "288": {
      "fn": "ERC721.getApproved",
      "offset": [
        4000,
        4217
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x30C"
    },
    "291": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        4000,
        4217
      ],
      "op": "JUMP",
      "path": "10"
    },
    "292": {
      "fn": "ERC721.getApproved",
      "offset": [
        4000,
        4217
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "293": {
      "fn": "ERC721.getApproved",
      "offset": [
        4000,
        4217
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "295": {
      "fn": "ERC721.getApproved",
      "offset": [
        4000,
        4217
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "300": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "302": {
      "op": "SHL"
    },
    "303": {
      "op": "SUB"
    },
    "304": {
      "op": "SWAP1"
    },
    "305": {
      "op": "SWAP2"
    },
    "306": {
      "op": "AND"
    },
    "307": {
      "op": "DUP2"
    },
    "308": {
      "op": "MSTORE"
    },
    "309": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "311": {
      "op": "ADD"
    },
    "312": {
      "fn": "ERC721.getApproved",
      "offset": [
        4000,
        4217
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xF3"
    },
    "315": {
      "op": "JUMP"
    },
    "316": {
      "fn": "ERC721.approve",
      "offset": [
        3538,
        3939
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "317": {
      "fn": "ERC721.approve",
      "offset": [
        3538,
        3939
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x14F"
    },
    "320": {
      "fn": "ERC721.approve",
      "offset": [
        3538,
        3939
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x14A"
    },
    "323": {
      "fn": "ERC721.approve",
      "offset": [
        3538,
        3939
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "324": {
      "fn": "ERC721.approve",
      "offset": [
        3538,
        3939
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "326": {
      "fn": "ERC721.approve",
      "offset": [
        3538,
        3939
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xE1D"
    },
    "329": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3538,
        3939
      ],
      "op": "JUMP",
      "path": "10"
    },
    "330": {
      "fn": "ERC721.approve",
      "offset": [
        3538,
        3939
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "331": {
      "fn": "ERC721.approve",
      "offset": [
        3538,
        3939
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3A6"
    },
    "334": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3538,
        3939
      ],
      "op": "JUMP",
      "path": "10"
    },
    "335": {
      "fn": "ERC721.approve",
      "offset": [
        3538,
        3939
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "336": {
      "fn": "ERC721.approve",
      "offset": [
        3538,
        3939
      ],
      "op": "STOP",
      "path": "10"
    },
    "337": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4727,
        5057
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "338": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4727,
        5057
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x14F"
    },
    "341": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4727,
        5057
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x15F"
    },
    "344": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4727,
        5057
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "345": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4727,
        5057
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "347": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4727,
        5057
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xE47"
    },
    "350": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4727,
        5057
      ],
      "op": "JUMP",
      "path": "10"
    },
    "351": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4727,
        5057
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "352": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4727,
        5057
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4BB"
    },
    "355": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4727,
        5057
      ],
      "op": "JUMP",
      "path": "10"
    },
    "356": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5123,
        5302
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "357": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5123,
        5302
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x14F"
    },
    "360": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5123,
        5302
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x172"
    },
    "363": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5123,
        5302
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "364": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5123,
        5302
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "366": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5123,
        5302
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xE47"
    },
    "369": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5123,
        5302
      ],
      "op": "JUMP",
      "path": "10"
    },
    "370": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5123,
        5302
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "371": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5123,
        5302
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4EC"
    },
    "374": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5123,
        5302
      ],
      "op": "JUMP",
      "path": "10"
    },
    "375": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "376": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x124"
    },
    "379": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x185"
    },
    "382": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "383": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "385": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xDE8"
    },
    "388": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2191,
        2426
      ],
      "op": "JUMP",
      "path": "10"
    },
    "389": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "390": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x507"
    },
    "393": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2191,
        2426
      ],
      "op": "JUMP",
      "path": "10"
    },
    "394": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "395": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x19D"
    },
    "398": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x198"
    },
    "401": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "402": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "404": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xE83"
    },
    "407": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMP",
      "path": "10"
    },
    "408": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "409": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x57E"
    },
    "412": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMP",
      "path": "10"
    },
    "413": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "414": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "416": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "417": {
      "op": "SWAP1"
    },
    "418": {
      "op": "DUP2"
    },
    "419": {
      "op": "MSTORE"
    },
    "420": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "422": {
      "op": "ADD"
    },
    "423": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xF3"
    },
    "426": {
      "op": "JUMP"
    },
    "427": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "428": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x104"
    },
    "431": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x605"
    },
    "434": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2650,
        2752
      ],
      "op": "JUMP",
      "path": "10"
    },
    "435": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4284,
        4437
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "436": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4284,
        4437
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x14F"
    },
    "439": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4284,
        4437
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1C1"
    },
    "442": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4284,
        4437
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "443": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4284,
        4437
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "445": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4284,
        4437
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xE9E"
    },
    "448": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4284,
        4437
      ],
      "op": "JUMP",
      "path": "10"
    },
    "449": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4284,
        4437
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "450": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4284,
        4437
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x614"
    },
    "453": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4284,
        4437
      ],
      "op": "JUMP",
      "path": "10"
    },
    "454": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5368,
        5688
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "455": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5368,
        5688
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x14F"
    },
    "458": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5368,
        5688
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1D4"
    },
    "461": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5368,
        5688
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "462": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5368,
        5688
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "464": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5368,
        5688
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xEF0"
    },
    "467": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5368,
        5688
      ],
      "op": "JUMP",
      "path": "10"
    },
    "468": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5368,
        5688
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "469": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5368,
        5688
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x623"
    },
    "472": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5368,
        5688
      ],
      "op": "JUMP",
      "path": "10"
    },
    "473": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2818,
        3147
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "474": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2818,
        3147
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x104"
    },
    "477": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2818,
        3147
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1E7"
    },
    "480": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2818,
        3147
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "481": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2818,
        3147
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "483": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2818,
        3147
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xDE8"
    },
    "486": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        2818,
        3147
      ],
      "op": "JUMP",
      "path": "10"
    },
    "487": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2818,
        3147
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "488": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2818,
        3147
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x65B"
    },
    "491": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        2818,
        3147
      ],
      "op": "JUMP",
      "path": "10"
    },
    "492": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4503,
        4665
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "493": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4503,
        4665
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xE7"
    },
    "496": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4503,
        4665
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1FA"
    },
    "499": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4503,
        4665
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "500": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4503,
        4665
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "502": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4503,
        4665
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xFCC"
    },
    "505": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4503,
        4665
      ],
      "op": "JUMP",
      "path": "10"
    },
    "506": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4503,
        4665
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "511": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "513": {
      "op": "SHL"
    },
    "514": {
      "op": "SUB"
    },
    "515": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4648
      ],
      "op": "SWAP2",
      "path": "10",
      "statement": 0
    },
    "516": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4648
      ],
      "op": "DUP3",
      "path": "10"
    },
    "517": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4648
      ],
      "op": "AND",
      "path": "10"
    },
    "518": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4600,
        4604
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "520": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4648
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "521": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4648
      ],
      "op": "DUP2",
      "path": "10"
    },
    "522": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4648
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "523": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4641
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x5"
    },
    "525": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4648
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "527": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4648
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "528": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4648
      ],
      "op": "DUP2",
      "path": "10"
    },
    "529": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4648
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "530": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4648
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "532": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4648
      ],
      "op": "DUP1",
      "path": "10"
    },
    "533": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4648
      ],
      "op": "DUP4",
      "path": "10"
    },
    "534": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4648
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "535": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4658
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "536": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4658
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "537": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4658
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "538": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4658
      ],
      "op": "AND",
      "path": "10"
    },
    "539": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4658
      ],
      "op": "DUP3",
      "path": "10"
    },
    "540": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4658
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "541": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4658
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "542": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4658
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "543": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4658
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "544": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4658
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "545": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4658
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "546": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4658
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "547": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4658
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xFF"
    },
    "549": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4658
      ],
      "op": "AND",
      "path": "10"
    },
    "550": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4658
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "551": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4503,
        4665
      ],
      "op": "JUMP",
      "path": "10"
    },
    "552": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "553": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1672,
        1676
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "557": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "559": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "561": {
      "op": "SHL"
    },
    "562": {
      "op": "SUB"
    },
    "563": {
      "op": "NOT"
    },
    "564": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "DUP3",
      "path": "10",
      "statement": 1
    },
    "565": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "AND",
      "path": "10"
    },
    "566": {
      "op": "PUSH4",
      "value": "0x80AC58CD"
    },
    "571": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "573": {
      "op": "SHL"
    },
    "574": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "EQ",
      "path": "10"
    },
    "575": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "DUP1",
      "path": "10"
    },
    "576": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1811
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x259"
    },
    "579": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1811
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "580": {
      "op": "POP"
    },
    "581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "583": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "585": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "587": {
      "op": "SHL"
    },
    "588": {
      "op": "SUB"
    },
    "589": {
      "op": "NOT"
    },
    "590": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1763,
        1811
      ],
      "op": "DUP3",
      "path": "10"
    },
    "591": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1763,
        1811
      ],
      "op": "AND",
      "path": "10"
    },
    "592": {
      "op": "PUSH4",
      "value": "0x5B5E139F"
    },
    "597": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "599": {
      "op": "SHL"
    },
    "600": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1763,
        1811
      ],
      "op": "EQ",
      "path": "10"
    },
    "601": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1811
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "602": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1863
      ],
      "op": "DUP1",
      "path": "10"
    },
    "603": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1863
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x274"
    },
    "606": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1863
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "607": {
      "op": "POP"
    },
    "608": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "613": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "615": {
      "op": "SHL"
    },
    "616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "620": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "622": {
      "op": "SHL"
    },
    "623": {
      "op": "SUB"
    },
    "624": {
      "op": "NOT"
    },
    "625": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "DUP4",
      "path": "19",
      "statement": 2
    },
    "626": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "AND",
      "path": "19"
    },
    "627": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "EQ",
      "path": "19"
    },
    "628": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1827,
        1863
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "629": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1688,
        1863
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "630": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "631": {
      "op": "POP"
    },
    "632": {
      "op": "POP"
    },
    "633": {
      "fn": "ERC721.supportsInterface",
      "jump": "o",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMP",
      "path": "10"
    },
    "634": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "635": {
      "fn": "ERC721.name",
      "offset": [
        2542,
        2555
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "637": {
      "fn": "ERC721.name",
      "offset": [
        2574,
        2579
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 3,
      "value": "0x0"
    },
    "639": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "10"
    },
    "640": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "641": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x289"
    },
    "644": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "645": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xFFF"
    },
    "648": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMP",
      "path": "10"
    },
    "649": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "650": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "10"
    },
    "651": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "653": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "10"
    },
    "654": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "656": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "10"
    },
    "657": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "658": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DIV",
      "path": "10"
    },
    "659": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MUL",
      "path": "10"
    },
    "660": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "662": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "10"
    },
    "663": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "665": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "666": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "667": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP2",
      "path": "10"
    },
    "668": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "10"
    },
    "669": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "671": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "672": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "10"
    },
    "673": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "674": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "675": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "676": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP2",
      "path": "10"
    },
    "677": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP2",
      "path": "10"
    },
    "678": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "679": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "681": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "10"
    },
    "682": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP3",
      "path": "10"
    },
    "683": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "10"
    },
    "684": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "685": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2B5"
    },
    "688": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "689": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xFFF"
    },
    "692": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMP",
      "path": "10"
    },
    "693": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "694": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "10"
    },
    "695": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "696": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x302"
    },
    "699": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "700": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "10"
    },
    "701": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "703": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "LT",
      "path": "10"
    },
    "704": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2D7"
    },
    "707": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "708": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x100"
    },
    "711": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "10"
    },
    "712": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP4",
      "path": "10"
    },
    "713": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "714": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DIV",
      "path": "10"
    },
    "715": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MUL",
      "path": "10"
    },
    "716": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP4",
      "path": "10"
    },
    "717": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "718": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "719": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "721": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "10"
    },
    "722": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "723": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x302"
    },
    "726": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMP",
      "path": "10"
    },
    "727": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "728": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP3",
      "path": "10"
    },
    "729": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "10"
    },
    "730": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "731": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "732": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "734": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "735": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "737": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "739": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "740": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "741": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "742": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP2",
      "path": "10"
    },
    "743": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "744": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP2",
      "path": "10"
    },
    "745": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "746": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "747": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "749": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "10"
    },
    "750": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "751": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "753": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "10"
    },
    "754": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "10"
    },
    "755": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP4",
      "path": "10"
    },
    "756": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "GT",
      "path": "10"
    },
    "757": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2E5"
    },
    "760": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "761": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP3",
      "path": "10"
    },
    "762": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "763": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SUB",
      "path": "10"
    },
    "764": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "766": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "AND",
      "path": "10"
    },
    "767": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP3",
      "path": "10"
    },
    "768": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "10"
    },
    "769": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "770": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "771": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "10"
    },
    "772": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "10"
    },
    "773": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "10"
    },
    "774": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "10"
    },
    "775": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "10"
    },
    "776": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "777": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "10"
    },
    "778": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "779": {
      "fn": "ERC721.name",
      "jump": "o",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMP",
      "path": "10"
    },
    "780": {
      "fn": "ERC721.getApproved",
      "offset": [
        4000,
        4217
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "781": {
      "fn": "ERC721.getApproved",
      "offset": [
        4076,
        4083
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "783": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "DUP2",
      "path": "10",
      "statement": 4
    },
    "784": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "DUP2",
      "path": "10"
    },
    "785": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "786": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7255
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "788": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "790": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "791": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "793": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "DUP2",
      "path": "10"
    },
    "794": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "795": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "796": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "800": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "802": {
      "op": "SHL"
    },
    "803": {
      "op": "SUB"
    },
    "804": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "AND",
      "path": "10"
    },
    "805": {
      "fn": "ERC721.getApproved",
      "offset": [
        4095,
        4168
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 5,
      "value": "0x38A"
    },
    "808": {
      "fn": "ERC721.getApproved",
      "offset": [
        4095,
        4168
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "809": {
      "fn": "ERC721.getApproved",
      "offset": [
        4095,
        4168
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "811": {
      "fn": "ERC721.getApproved",
      "offset": [
        4095,
        4168
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "812": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "816": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "818": {
      "op": "SHL"
    },
    "819": {
      "fn": "ERC721.getApproved",
      "offset": [
        4095,
        4168
      ],
      "op": "DUP2",
      "path": "10"
    },
    "820": {
      "fn": "ERC721.getApproved",
      "offset": [
        4095,
        4168
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "821": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "823": {
      "fn": "ERC721.getApproved",
      "offset": [
        4095,
        4168
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "825": {
      "fn": "ERC721.getApproved",
      "offset": [
        4095,
        4168
      ],
      "op": "DUP3",
      "path": "10"
    },
    "826": {
      "fn": "ERC721.getApproved",
      "offset": [
        4095,
        4168
      ],
      "op": "ADD",
      "path": "10"
    },
    "827": {
      "op": "MSTORE"
    },
    "828": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "830": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "832": {
      "op": "DUP3"
    },
    "833": {
      "op": "ADD"
    },
    "834": {
      "op": "MSTORE"
    },
    "835": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578"
    },
    "868": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "870": {
      "op": "DUP3"
    },
    "871": {
      "op": "ADD"
    },
    "872": {
      "op": "MSTORE"
    },
    "873": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "886": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "888": {
      "op": "SHL"
    },
    "889": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "891": {
      "op": "DUP3"
    },
    "892": {
      "op": "ADD"
    },
    "893": {
      "op": "MSTORE"
    },
    "894": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "896": {
      "op": "ADD"
    },
    "897": {
      "fn": "ERC721.getApproved",
      "offset": [
        4095,
        4168
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "898": {
      "fn": "ERC721.getApproved",
      "offset": [
        4095,
        4168
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "900": {
      "fn": "ERC721.getApproved",
      "offset": [
        4095,
        4168
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "901": {
      "fn": "ERC721.getApproved",
      "offset": [
        4095,
        4168
      ],
      "op": "DUP1",
      "path": "10"
    },
    "902": {
      "fn": "ERC721.getApproved",
      "offset": [
        4095,
        4168
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "903": {
      "fn": "ERC721.getApproved",
      "offset": [
        4095,
        4168
      ],
      "op": "SUB",
      "path": "10"
    },
    "904": {
      "fn": "ERC721.getApproved",
      "offset": [
        4095,
        4168
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "905": {
      "fn": "ERC721.getApproved",
      "offset": [
        4095,
        4168
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "10"
    },
    "906": {
      "fn": "ERC721.getApproved",
      "offset": [
        4095,
        4168
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "907": {
      "op": "POP"
    },
    "908": {
      "fn": "ERC721.getApproved",
      "offset": [
        4186,
        4210
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 6,
      "value": "0x0"
    },
    "910": {
      "fn": "ERC721.getApproved",
      "offset": [
        4186,
        4210
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "911": {
      "fn": "ERC721.getApproved",
      "offset": [
        4186,
        4210
      ],
      "op": "DUP2",
      "path": "10"
    },
    "912": {
      "fn": "ERC721.getApproved",
      "offset": [
        4186,
        4210
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "913": {
      "fn": "ERC721.getApproved",
      "offset": [
        4186,
        4201
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "915": {
      "fn": "ERC721.getApproved",
      "offset": [
        4186,
        4210
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "917": {
      "fn": "ERC721.getApproved",
      "offset": [
        4186,
        4210
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "918": {
      "fn": "ERC721.getApproved",
      "offset": [
        4186,
        4210
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "920": {
      "fn": "ERC721.getApproved",
      "offset": [
        4186,
        4210
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "921": {
      "fn": "ERC721.getApproved",
      "offset": [
        4186,
        4210
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "922": {
      "fn": "ERC721.getApproved",
      "offset": [
        4186,
        4210
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "927": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "929": {
      "op": "SHL"
    },
    "930": {
      "op": "SUB"
    },
    "931": {
      "fn": "ERC721.getApproved",
      "offset": [
        4186,
        4210
      ],
      "op": "AND",
      "path": "10"
    },
    "932": {
      "fn": "ERC721.getApproved",
      "offset": [
        4186,
        4210
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "933": {
      "fn": "ERC721.getApproved",
      "jump": "o",
      "offset": [
        4000,
        4217
      ],
      "op": "JUMP",
      "path": "10"
    },
    "934": {
      "fn": "ERC721.approve",
      "offset": [
        3538,
        3939
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "935": {
      "fn": "ERC721.approve",
      "offset": [
        3618,
        3631
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "937": {
      "fn": "ERC721.approve",
      "offset": [
        3634,
        3657
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3B1"
    },
    "940": {
      "fn": "ERC721.approve",
      "offset": [
        3649,
        3656
      ],
      "op": "DUP3",
      "path": "10"
    },
    "941": {
      "fn": "ERC721.approve",
      "offset": [
        3634,
        3648
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x507"
    },
    "944": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3634,
        3657
      ],
      "op": "JUMP",
      "path": "10"
    },
    "945": {
      "fn": "ERC721.approve",
      "offset": [
        3634,
        3657
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "946": {
      "fn": "ERC721.approve",
      "offset": [
        3618,
        3657
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "947": {
      "fn": "ERC721.approve",
      "offset": [
        3618,
        3657
      ],
      "op": "POP",
      "path": "10"
    },
    "948": {
      "fn": "ERC721.approve",
      "offset": [
        3681,
        3686
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 7
    },
    "949": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "951": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "953": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "955": {
      "op": "SHL"
    },
    "956": {
      "op": "SUB"
    },
    "957": {
      "fn": "ERC721.approve",
      "offset": [
        3675,
        3686
      ],
      "op": "AND",
      "path": "10"
    },
    "958": {
      "fn": "ERC721.approve",
      "offset": [
        3675,
        3677
      ],
      "op": "DUP4",
      "path": "10"
    },
    "959": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "963": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "965": {
      "op": "SHL"
    },
    "966": {
      "op": "SUB"
    },
    "967": {
      "fn": "ERC721.approve",
      "offset": [
        3675,
        3686
      ],
      "op": "AND",
      "path": "10"
    },
    "968": {
      "branch": 50,
      "fn": "ERC721.approve",
      "offset": [
        3675,
        3686
      ],
      "op": "SUB",
      "path": "10"
    },
    "969": {
      "fn": "ERC721.approve",
      "offset": [
        3667,
        3724
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x41E"
    },
    "972": {
      "branch": 50,
      "fn": "ERC721.approve",
      "offset": [
        3667,
        3724
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "973": {
      "fn": "ERC721.approve",
      "offset": [
        3667,
        3724
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "975": {
      "fn": "ERC721.approve",
      "offset": [
        3667,
        3724
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "976": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "980": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "982": {
      "op": "SHL"
    },
    "983": {
      "fn": "ERC721.approve",
      "offset": [
        3667,
        3724
      ],
      "op": "DUP2",
      "path": "10"
    },
    "984": {
      "fn": "ERC721.approve",
      "offset": [
        3667,
        3724
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "985": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "987": {
      "fn": "ERC721.approve",
      "offset": [
        3667,
        3724
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "989": {
      "fn": "ERC721.approve",
      "offset": [
        3667,
        3724
      ],
      "op": "DUP3",
      "path": "10"
    },
    "990": {
      "fn": "ERC721.approve",
      "offset": [
        3667,
        3724
      ],
      "op": "ADD",
      "path": "10"
    },
    "991": {
      "op": "MSTORE"
    },
    "992": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "994": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "996": {
      "op": "DUP3"
    },
    "997": {
      "op": "ADD"
    },
    "998": {
      "op": "MSTORE"
    },
    "999": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
    },
    "1032": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1034": {
      "op": "DUP3"
    },
    "1035": {
      "op": "ADD"
    },
    "1036": {
      "op": "MSTORE"
    },
    "1037": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "1039": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "1041": {
      "op": "SHL"
    },
    "1042": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1044": {
      "op": "DUP3"
    },
    "1045": {
      "op": "ADD"
    },
    "1046": {
      "op": "MSTORE"
    },
    "1047": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1049": {
      "op": "ADD"
    },
    "1050": {
      "fn": "ERC721.approve",
      "offset": [
        3667,
        3724
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x381"
    },
    "1053": {
      "op": "JUMP"
    },
    "1054": {
      "fn": "ERC721.approve",
      "offset": [
        3667,
        3724
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1055": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "16",
      "statement": 8
    },
    "1056": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1058": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1060": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1062": {
      "op": "SHL"
    },
    "1063": {
      "op": "SUB"
    },
    "1064": {
      "fn": "ERC721.approve",
      "offset": [
        3756,
        3777
      ],
      "op": "DUP3",
      "path": "10",
      "statement": 9
    },
    "1065": {
      "fn": "ERC721.approve",
      "offset": [
        3756,
        3777
      ],
      "op": "AND",
      "path": "10"
    },
    "1066": {
      "fn": "ERC721.approve",
      "offset": [
        3756,
        3777
      ],
      "op": "EQ",
      "path": "10"
    },
    "1067": {
      "branch": 51,
      "fn": "ERC721.approve",
      "offset": [
        3756,
        3777
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1068": {
      "fn": "ERC721.approve",
      "offset": [
        3756,
        3818
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x43A"
    },
    "1071": {
      "branch": 51,
      "fn": "ERC721.approve",
      "offset": [
        3756,
        3818
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1072": {
      "op": "POP"
    },
    "1073": {
      "fn": "ERC721.approve",
      "offset": [
        3781,
        3818
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x43A"
    },
    "1076": {
      "fn": "ERC721.approve",
      "offset": [
        3798,
        3803
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1077": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "16"
    },
    "1078": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4503,
        4665
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1FA"
    },
    "1081": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4503,
        4665
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1082": {
      "branch": 52,
      "fn": "ERC721.approve",
      "offset": [
        3781,
        3818
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1083": {
      "fn": "ERC721.approve",
      "offset": [
        3735,
        3900
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4AC"
    },
    "1086": {
      "branch": 52,
      "fn": "ERC721.approve",
      "offset": [
        3735,
        3900
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1087": {
      "fn": "ERC721.approve",
      "offset": [
        3735,
        3900
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1089": {
      "fn": "ERC721.approve",
      "offset": [
        3735,
        3900
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1090": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1094": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1096": {
      "op": "SHL"
    },
    "1097": {
      "fn": "ERC721.approve",
      "offset": [
        3735,
        3900
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1098": {
      "fn": "ERC721.approve",
      "offset": [
        3735,
        3900
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1099": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1101": {
      "fn": "ERC721.approve",
      "offset": [
        3735,
        3900
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1103": {
      "fn": "ERC721.approve",
      "offset": [
        3735,
        3900
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1104": {
      "fn": "ERC721.approve",
      "offset": [
        3735,
        3900
      ],
      "op": "ADD",
      "path": "10"
    },
    "1105": {
      "op": "MSTORE"
    },
    "1106": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "1108": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1110": {
      "op": "DUP3"
    },
    "1111": {
      "op": "ADD"
    },
    "1112": {
      "op": "MSTORE"
    },
    "1113": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77"
    },
    "1146": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1148": {
      "op": "DUP3"
    },
    "1149": {
      "op": "ADD"
    },
    "1150": {
      "op": "MSTORE"
    },
    "1151": {
      "op": "PUSH32",
      "value": "0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000"
    },
    "1184": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1186": {
      "op": "DUP3"
    },
    "1187": {
      "op": "ADD"
    },
    "1188": {
      "op": "MSTORE"
    },
    "1189": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1191": {
      "op": "ADD"
    },
    "1192": {
      "fn": "ERC721.approve",
      "offset": [
        3735,
        3900
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x381"
    },
    "1195": {
      "op": "JUMP"
    },
    "1196": {
      "fn": "ERC721.approve",
      "offset": [
        3735,
        3900
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1197": {
      "fn": "ERC721.approve",
      "offset": [
        3911,
        3932
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 10,
      "value": "0x4B6"
    },
    "1200": {
      "fn": "ERC721.approve",
      "offset": [
        3920,
        3922
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1201": {
      "fn": "ERC721.approve",
      "offset": [
        3924,
        3931
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1202": {
      "fn": "ERC721.approve",
      "offset": [
        3911,
        3919
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x743"
    },
    "1205": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3911,
        3932
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1206": {
      "fn": "ERC721.approve",
      "offset": [
        3911,
        3932
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1207": {
      "fn": "ERC721.approve",
      "offset": [
        3608,
        3939
      ],
      "op": "POP",
      "path": "10"
    },
    "1208": {
      "fn": "ERC721.approve",
      "offset": [
        3538,
        3939
      ],
      "op": "POP",
      "path": "10"
    },
    "1209": {
      "fn": "ERC721.approve",
      "offset": [
        3538,
        3939
      ],
      "op": "POP",
      "path": "10"
    },
    "1210": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        3538,
        3939
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1211": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4727,
        5057
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1212": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4916,
        4957
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 11,
      "value": "0x4C5"
    },
    "1215": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "16"
    },
    "1216": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4949,
        4956
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1217": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4916,
        4934
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7B1"
    },
    "1220": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4916,
        4957
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1221": {
      "branch": 53,
      "fn": "ERC721.transferFrom",
      "offset": [
        4916,
        4957
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1222": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4908,
        5011
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4E1"
    },
    "1225": {
      "branch": 53,
      "fn": "ERC721.transferFrom",
      "offset": [
        4908,
        5011
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1226": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4908,
        5011
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1228": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4908,
        5011
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1229": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1233": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1235": {
      "op": "SHL"
    },
    "1236": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4908,
        5011
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1237": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4908,
        5011
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1238": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4908,
        5011
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1240": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4908,
        5011
      ],
      "op": "ADD",
      "path": "10"
    },
    "1241": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4908,
        5011
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x381"
    },
    "1244": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4908,
        5011
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1245": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4908,
        5011
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1039"
    },
    "1248": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4908,
        5011
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1249": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4908,
        5011
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1250": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5022,
        5050
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 12,
      "value": "0x4B6"
    },
    "1253": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5032,
        5036
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1254": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5038,
        5040
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1255": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5042,
        5049
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1256": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5022,
        5031
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x8A8"
    },
    "1259": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        5022,
        5050
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1260": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5123,
        5302
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1261": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5256,
        5295
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 13,
      "value": "0x4B6"
    },
    "1264": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5273,
        5277
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1265": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5279,
        5281
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1266": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5283,
        5290
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1267": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5256,
        5295
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1269": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5256,
        5295
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1270": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5256,
        5295
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1271": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5256,
        5295
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1273": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5256,
        5295
      ],
      "op": "ADD",
      "path": "10"
    },
    "1274": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5256,
        5295
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1276": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5256,
        5295
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1277": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5256,
        5295
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1278": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5256,
        5295
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1280": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5256,
        5295
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1281": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5256,
        5295
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1282": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5256,
        5295
      ],
      "op": "POP",
      "path": "10"
    },
    "1283": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5256,
        5272
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x623"
    },
    "1286": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5256,
        5295
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1287": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1288": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2263,
        2270
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1290": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1291": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1292": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1293": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2305
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "1295": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1297": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1298": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1300": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1301": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1302": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1303": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1305": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1307": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1309": {
      "op": "SHL"
    },
    "1310": {
      "op": "SUB"
    },
    "1311": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "AND",
      "path": "10"
    },
    "1312": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1313": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 14,
      "value": "0x274"
    },
    "1316": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1317": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1319": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1320": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1324": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1326": {
      "op": "SHL"
    },
    "1327": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1328": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1329": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1331": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1333": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1334": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "ADD",
      "path": "10"
    },
    "1335": {
      "op": "MSTORE"
    },
    "1336": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "1338": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1340": {
      "op": "DUP3"
    },
    "1341": {
      "op": "ADD"
    },
    "1342": {
      "op": "MSTORE"
    },
    "1343": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374"
    },
    "1376": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1378": {
      "op": "DUP3"
    },
    "1379": {
      "op": "ADD"
    },
    "1380": {
      "op": "MSTORE"
    },
    "1381": {
      "op": "PUSH9",
      "value": "0x32B73A103A37B5B2B7"
    },
    "1391": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "1393": {
      "op": "SHL"
    },
    "1394": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1396": {
      "op": "DUP3"
    },
    "1397": {
      "op": "ADD"
    },
    "1398": {
      "op": "MSTORE"
    },
    "1399": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1401": {
      "op": "ADD"
    },
    "1402": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x381"
    },
    "1405": {
      "op": "JUMP"
    },
    "1406": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1407": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2001,
        2008
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1409": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1411": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1413": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1415": {
      "op": "SHL"
    },
    "1416": {
      "op": "SUB"
    },
    "1417": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2028,
        2047
      ],
      "op": "DUP3",
      "path": "10",
      "statement": 15
    },
    "1418": {
      "branch": 54,
      "fn": "ERC721.balanceOf",
      "offset": [
        2028,
        2047
      ],
      "op": "AND",
      "path": "10"
    },
    "1419": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x5E9"
    },
    "1422": {
      "branch": 54,
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1423": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1425": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1426": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1430": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1432": {
      "op": "SHL"
    },
    "1433": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1434": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1435": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1437": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1439": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1440": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "ADD",
      "path": "10"
    },
    "1441": {
      "op": "MSTORE"
    },
    "1442": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "1444": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1446": {
      "op": "DUP3"
    },
    "1447": {
      "op": "ADD"
    },
    "1448": {
      "op": "MSTORE"
    },
    "1449": {
      "op": "PUSH32",
      "value": "0x4552433732313A2062616C616E636520717565727920666F7220746865207A65"
    },
    "1482": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1484": {
      "op": "DUP3"
    },
    "1485": {
      "op": "ADD"
    },
    "1486": {
      "op": "MSTORE"
    },
    "1487": {
      "op": "PUSH10",
      "value": "0x726F2061646472657373"
    },
    "1498": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "1500": {
      "op": "SHL"
    },
    "1501": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1503": {
      "op": "DUP3"
    },
    "1504": {
      "op": "ADD"
    },
    "1505": {
      "op": "MSTORE"
    },
    "1506": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1508": {
      "op": "ADD"
    },
    "1509": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x381"
    },
    "1512": {
      "op": "JUMP"
    },
    "1513": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1514": {
      "op": "POP"
    },
    "1515": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1517": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1519": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1521": {
      "op": "SHL"
    },
    "1522": {
      "op": "SUB"
    },
    "1523": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "AND",
      "path": "10",
      "statement": 16
    },
    "1524": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1526": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1527": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1528": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1529": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2120
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "1531": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1533": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1534": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1536": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1537": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1538": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1539": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1540": {
      "fn": "ERC721.balanceOf",
      "jump": "o",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1541": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1542": {
      "fn": "ERC721.symbol",
      "offset": [
        2706,
        2719
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "1544": {
      "fn": "ERC721.symbol",
      "offset": [
        2738,
        2745
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 17,
      "value": "0x1"
    },
    "1546": {
      "fn": "ERC721.symbol",
      "offset": [
        2731,
        2745
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1547": {
      "fn": "ERC721.symbol",
      "offset": [
        2731,
        2745
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1548": {
      "fn": "ERC721.symbol",
      "offset": [
        2731,
        2745
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x289"
    },
    "1551": {
      "fn": "ERC721.symbol",
      "offset": [
        2731,
        2745
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1552": {
      "fn": "ERC721.symbol",
      "offset": [
        2731,
        2745
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xFFF"
    },
    "1555": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2731,
        2745
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1556": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4284,
        4437
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1557": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4378,
        4430
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 18,
      "value": "0x61F"
    },
    "1560": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "16"
    },
    "1561": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4411,
        4419
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1562": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4421,
        4429
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1563": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4378,
        4396
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA44"
    },
    "1566": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4378,
        4430
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1567": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4378,
        4430
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1568": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4284,
        4437
      ],
      "op": "POP",
      "path": "10"
    },
    "1569": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4284,
        4437
      ],
      "op": "POP",
      "path": "10"
    },
    "1570": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "o",
      "offset": [
        4284,
        4437
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1571": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5368,
        5688
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1572": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5537,
        5578
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 19,
      "value": "0x62D"
    },
    "1575": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "16"
    },
    "1576": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5570,
        5577
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1577": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5537,
        5555
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7B1"
    },
    "1580": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5537,
        5578
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1581": {
      "branch": 55,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5537,
        5578
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1582": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5529,
        5632
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x649"
    },
    "1585": {
      "branch": 55,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5529,
        5632
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1586": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5529,
        5632
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1588": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5529,
        5632
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1589": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1593": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1595": {
      "op": "SHL"
    },
    "1596": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5529,
        5632
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1597": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5529,
        5632
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1598": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5529,
        5632
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1600": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5529,
        5632
      ],
      "op": "ADD",
      "path": "10"
    },
    "1601": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5529,
        5632
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x381"
    },
    "1604": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5529,
        5632
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1605": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5529,
        5632
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1039"
    },
    "1608": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5529,
        5632
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1609": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5529,
        5632
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1610": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5642,
        5681
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 20,
      "value": "0x655"
    },
    "1613": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5656,
        5660
      ],
      "op": "DUP5",
      "path": "10"
    },
    "1614": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5662,
        5664
      ],
      "op": "DUP5",
      "path": "10"
    },
    "1615": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5666,
        5673
      ],
      "op": "DUP5",
      "path": "10"
    },
    "1616": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5675,
        5680
      ],
      "op": "DUP5",
      "path": "10"
    },
    "1617": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5642,
        5655
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB12"
    },
    "1620": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5642,
        5681
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1621": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5642,
        5681
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1622": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5368,
        5688
      ],
      "op": "POP",
      "path": "10"
    },
    "1623": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5368,
        5688
      ],
      "op": "POP",
      "path": "10"
    },
    "1624": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5368,
        5688
      ],
      "op": "POP",
      "path": "10"
    },
    "1625": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5368,
        5688
      ],
      "op": "POP",
      "path": "10"
    },
    "1626": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "o",
      "offset": [
        5368,
        5688
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1627": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2818,
        3147
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1628": {
      "fn": "ERC721._exists",
      "offset": [
        7225,
        7229
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1630": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1631": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1632": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1633": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7255
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "1635": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1637": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1638": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1640": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1641": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1642": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1643": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2891,
        2904
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "1645": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2891,
        2904
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1646": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1648": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1650": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1652": {
      "op": "SHL"
    },
    "1653": {
      "op": "SUB"
    },
    "1654": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "AND",
      "path": "10"
    },
    "1655": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 21,
      "value": "0x6DA"
    },
    "1658": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1659": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1661": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1662": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1666": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1668": {
      "op": "SHL"
    },
    "1669": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1670": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1671": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1673": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1675": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1676": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "ADD",
      "path": "10"
    },
    "1677": {
      "op": "MSTORE"
    },
    "1678": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "1680": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1682": {
      "op": "DUP3"
    },
    "1683": {
      "op": "ADD"
    },
    "1684": {
      "op": "MSTORE"
    },
    "1685": {
      "op": "PUSH32",
      "value": "0x4552433732314D657461646174613A2055524920717565727920666F72206E6F"
    },
    "1718": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1720": {
      "op": "DUP3"
    },
    "1721": {
      "op": "ADD"
    },
    "1722": {
      "op": "MSTORE"
    },
    "1723": {
      "op": "PUSH15",
      "value": "0x3732BC34B9BA32B73A103A37B5B2B7"
    },
    "1739": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "1741": {
      "op": "SHL"
    },
    "1742": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1744": {
      "op": "DUP3"
    },
    "1745": {
      "op": "ADD"
    },
    "1746": {
      "op": "MSTORE"
    },
    "1747": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1749": {
      "op": "ADD"
    },
    "1750": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x381"
    },
    "1753": {
      "op": "JUMP"
    },
    "1754": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1755": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3003,
        3024
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1757": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3027,
        3037
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x6F1"
    },
    "1760": {
      "fn": "ERC721._baseURI",
      "offset": [
        3465,
        3474
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 22,
      "value": "0x40"
    },
    "1762": {
      "fn": "ERC721._baseURI",
      "offset": [
        3465,
        3474
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1763": {
      "fn": "ERC721._baseURI",
      "offset": [
        3465,
        3474
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1764": {
      "fn": "ERC721._baseURI",
      "offset": [
        3465,
        3474
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1766": {
      "fn": "ERC721._baseURI",
      "offset": [
        3465,
        3474
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1767": {
      "fn": "ERC721._baseURI",
      "offset": [
        3465,
        3474
      ],
      "op": "ADD",
      "path": "10"
    },
    "1768": {
      "fn": "ERC721._baseURI",
      "offset": [
        3465,
        3474
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1769": {
      "fn": "ERC721._baseURI",
      "offset": [
        3465,
        3474
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1770": {
      "fn": "ERC721._baseURI",
      "offset": [
        3465,
        3474
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1771": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1773": {
      "fn": "ERC721._baseURI",
      "offset": [
        3465,
        3474
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1774": {
      "fn": "ERC721._baseURI",
      "offset": [
        3465,
        3474
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1775": {
      "fn": "ERC721._baseURI",
      "offset": [
        3465,
        3474
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1776": {
      "fn": "ERC721._baseURI",
      "offset": [
        3389,
        3481
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1777": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3027,
        3037
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1778": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3003,
        3037
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1779": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3003,
        3037
      ],
      "op": "POP",
      "path": "10"
    },
    "1780": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3078,
        3079
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 23,
      "value": "0x0"
    },
    "1782": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3060,
        3067
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1783": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3075
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1784": {
      "branch": 56,
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3079
      ],
      "op": "GT",
      "path": "10"
    },
    "1785": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x711"
    },
    "1788": {
      "branch": 56,
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1789": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1791": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1792": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1793": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1795": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "ADD",
      "path": "10"
    },
    "1796": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1798": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1799": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1800": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1802": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1803": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1804": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "POP",
      "path": "10"
    },
    "1805": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x73C"
    },
    "1808": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1809": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1810": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3106,
        3113
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1811": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3115,
        3133
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x71B"
    },
    "1814": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3115,
        3122
      ],
      "op": "DUP5",
      "path": "10"
    },
    "1815": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3115,
        3131
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB45"
    },
    "1818": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        3115,
        3133
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1819": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3115,
        3133
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1820": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1822": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1823": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1825": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "ADD",
      "path": "10"
    },
    "1826": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x72C"
    },
    "1829": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1830": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1831": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1832": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x108A"
    },
    "1835": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        3089,
        3134
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1836": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1837": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1839": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1840": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1842": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1843": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1844": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "SUB",
      "path": "10"
    },
    "1845": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "SUB",
      "path": "10"
    },
    "1846": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1847": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1848": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1849": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1851": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1852": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1853": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3047,
        3140
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "1854": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2818,
        3147
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1855": {
      "op": "POP"
    },
    "1856": {
      "op": "POP"
    },
    "1857": {
      "op": "POP"
    },
    "1858": {
      "fn": "ERC721.tokenURI",
      "jump": "o",
      "offset": [
        2818,
        3147
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1859": {
      "fn": "ERC721._approve",
      "offset": [
        11169,
        11340
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1860": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11267
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 24,
      "value": "0x0"
    },
    "1862": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11267
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1863": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11267
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1864": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11267
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1865": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11258
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1867": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11267
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1869": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11267
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1870": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11267
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1872": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11267
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1873": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11267
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1874": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11272
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1875": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11272
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1876": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1878": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1880": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1882": {
      "op": "SHL"
    },
    "1883": {
      "op": "SUB"
    },
    "1884": {
      "op": "NOT"
    },
    "1885": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11272
      ],
      "op": "AND",
      "path": "10"
    },
    "1886": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1888": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1890": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1892": {
      "op": "SHL"
    },
    "1893": {
      "op": "SUB"
    },
    "1894": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11272
      ],
      "op": "DUP5",
      "path": "10"
    },
    "1895": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11272
      ],
      "op": "AND",
      "path": "10"
    },
    "1896": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11272
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1897": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11272
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1898": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11272
      ],
      "op": "OR",
      "path": "10"
    },
    "1899": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11272
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1900": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11272
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1901": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11272
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "1902": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11267
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1903": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11267
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1904": {
      "fn": "ERC721._approve",
      "offset": [
        11296,
        11319
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 25,
      "value": "0x778"
    },
    "1907": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11267
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1908": {
      "fn": "ERC721._approve",
      "offset": [
        11296,
        11310
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x507"
    },
    "1911": {
      "fn": "ERC721._approve",
      "jump": "i",
      "offset": [
        11296,
        11319
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1912": {
      "fn": "ERC721._approve",
      "offset": [
        11296,
        11319
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1913": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1915": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1917": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1919": {
      "op": "SHL"
    },
    "1920": {
      "op": "SUB"
    },
    "1921": {
      "fn": "ERC721._approve",
      "offset": [
        11287,
        11333
      ],
      "op": "AND",
      "path": "10"
    },
    "1922": {
      "fn": "ERC721._approve",
      "offset": [
        11287,
        11333
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "1955": {
      "fn": "ERC721._approve",
      "offset": [
        11287,
        11333
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1957": {
      "fn": "ERC721._approve",
      "offset": [
        11287,
        11333
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1958": {
      "fn": "ERC721._approve",
      "offset": [
        11287,
        11333
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1960": {
      "fn": "ERC721._approve",
      "offset": [
        11287,
        11333
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1961": {
      "fn": "ERC721._approve",
      "offset": [
        11287,
        11333
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1962": {
      "fn": "ERC721._approve",
      "offset": [
        11287,
        11333
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1963": {
      "fn": "ERC721._approve",
      "offset": [
        11287,
        11333
      ],
      "op": "SUB",
      "path": "10"
    },
    "1964": {
      "fn": "ERC721._approve",
      "offset": [
        11287,
        11333
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1965": {
      "fn": "ERC721._approve",
      "offset": [
        11287,
        11333
      ],
      "op": "LOG4",
      "path": "10"
    },
    "1966": {
      "fn": "ERC721._approve",
      "offset": [
        11169,
        11340
      ],
      "op": "POP",
      "path": "10"
    },
    "1967": {
      "fn": "ERC721._approve",
      "offset": [
        11169,
        11340
      ],
      "op": "POP",
      "path": "10"
    },
    "1968": {
      "fn": "ERC721._approve",
      "jump": "o",
      "offset": [
        11169,
        11340
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1969": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7443,
        7787
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1970": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7540
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1972": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1973": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1974": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1975": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7255
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "1977": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1979": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1980": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1982": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1983": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1984": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1987": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1989": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1991": {
      "op": "SHL"
    },
    "1992": {
      "op": "SUB"
    },
    "1993": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "AND",
      "path": "10"
    },
    "1994": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7552,
        7625
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 26,
      "value": "0x82A"
    },
    "1997": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7552,
        7625
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1998": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7552,
        7625
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2000": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7552,
        7625
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2001": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2005": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2007": {
      "op": "SHL"
    },
    "2008": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7552,
        7625
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2009": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7552,
        7625
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2010": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2012": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7552,
        7625
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "2014": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7552,
        7625
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2015": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7552,
        7625
      ],
      "op": "ADD",
      "path": "10"
    },
    "2016": {
      "op": "MSTORE"
    },
    "2017": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "2019": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2021": {
      "op": "DUP3"
    },
    "2022": {
      "op": "ADD"
    },
    "2023": {
      "op": "MSTORE"
    },
    "2024": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578"
    },
    "2057": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2059": {
      "op": "DUP3"
    },
    "2060": {
      "op": "ADD"
    },
    "2061": {
      "op": "MSTORE"
    },
    "2062": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "2075": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "2077": {
      "op": "SHL"
    },
    "2078": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2080": {
      "op": "DUP3"
    },
    "2081": {
      "op": "ADD"
    },
    "2082": {
      "op": "MSTORE"
    },
    "2083": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2085": {
      "op": "ADD"
    },
    "2086": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7552,
        7625
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x381"
    },
    "2089": {
      "op": "JUMP"
    },
    "2090": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7552,
        7625
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2091": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7635,
        7648
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2093": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7651,
        7674
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x835"
    },
    "2096": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7666,
        7673
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2097": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7651,
        7665
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x507"
    },
    "2100": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7651,
        7674
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2101": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7651,
        7674
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2102": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7635,
        7674
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2103": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7635,
        7674
      ],
      "op": "POP",
      "path": "10"
    },
    "2104": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7703,
        7708
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 27
    },
    "2105": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2109": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2111": {
      "op": "SHL"
    },
    "2112": {
      "op": "SUB"
    },
    "2113": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7692,
        7708
      ],
      "op": "AND",
      "path": "10"
    },
    "2114": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7692,
        7699
      ],
      "op": "DUP5",
      "path": "10"
    },
    "2115": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2117": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2119": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2121": {
      "op": "SHL"
    },
    "2122": {
      "op": "SUB"
    },
    "2123": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7692,
        7708
      ],
      "op": "AND",
      "path": "10"
    },
    "2124": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7692,
        7708
      ],
      "op": "EQ",
      "path": "10"
    },
    "2125": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7692,
        7744
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2126": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7692,
        7744
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x87C"
    },
    "2129": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7692,
        7744
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2130": {
      "op": "POP"
    },
    "2131": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2133": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2135": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2137": {
      "op": "SHL"
    },
    "2138": {
      "op": "SUB"
    },
    "2139": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4648
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2140": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4648
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2141": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4648
      ],
      "op": "AND",
      "path": "10"
    },
    "2142": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4600,
        4604
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2144": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4648
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2145": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4648
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2146": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4648
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2147": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4641
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x5"
    },
    "2149": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4648
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2151": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4648
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2152": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4648
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2153": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4648
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2154": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4648
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2156": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4648
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2157": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4648
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2158": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4648
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "2159": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4658
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "2160": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4658
      ],
      "op": "DUP9",
      "path": "10"
    },
    "2161": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4658
      ],
      "op": "AND",
      "path": "10"
    },
    "2162": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4658
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2163": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4658
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2164": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4658
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2165": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4658
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2166": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4658
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2167": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4658
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "2168": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4658
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2169": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4658
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xFF"
    },
    "2171": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4658
      ],
      "op": "AND",
      "path": "10"
    },
    "2172": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7712,
        7744
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2173": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7692,
        7779
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2174": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7692,
        7779
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x8A0"
    },
    "2177": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7692,
        7779
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2178": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7692,
        7779
      ],
      "op": "POP",
      "path": "10"
    },
    "2179": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7772,
        7779
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2180": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2182": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2184": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2186": {
      "op": "SHL"
    },
    "2187": {
      "op": "SUB"
    },
    "2188": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7748,
        7779
      ],
      "op": "AND",
      "path": "10"
    },
    "2189": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7748,
        7768
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x895"
    },
    "2192": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7760,
        7767
      ],
      "op": "DUP5",
      "path": "10"
    },
    "2193": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7748,
        7759
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x30C"
    },
    "2196": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7748,
        7768
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2197": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7748,
        7768
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2198": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2200": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2202": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2204": {
      "op": "SHL"
    },
    "2205": {
      "op": "SUB"
    },
    "2206": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7748,
        7779
      ],
      "op": "AND",
      "path": "10"
    },
    "2207": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7748,
        7779
      ],
      "op": "EQ",
      "path": "10"
    },
    "2208": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7692,
        7779
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2209": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7684,
        7780
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "2210": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7443,
        7787
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "2211": {
      "op": "POP"
    },
    "2212": {
      "op": "POP"
    },
    "2213": {
      "op": "POP"
    },
    "2214": {
      "op": "POP"
    },
    "2215": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "o",
      "offset": [
        7443,
        7787
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2216": {
      "fn": "ERC721._transfer",
      "offset": [
        10453,
        11058
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2217": {
      "fn": "ERC721._transfer",
      "offset": [
        10607,
        10611
      ],
      "op": "DUP3",
      "path": "10",
      "statement": 28
    },
    "2218": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2220": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2222": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2224": {
      "op": "SHL"
    },
    "2225": {
      "op": "SUB"
    },
    "2226": {
      "fn": "ERC721._transfer",
      "offset": [
        10580,
        10611
      ],
      "op": "AND",
      "path": "10"
    },
    "2227": {
      "fn": "ERC721._transfer",
      "offset": [
        10580,
        10603
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x8BB"
    },
    "2230": {
      "fn": "ERC721._transfer",
      "offset": [
        10595,
        10602
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2231": {
      "fn": "ERC721._transfer",
      "offset": [
        10580,
        10594
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x507"
    },
    "2234": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10580,
        10603
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2235": {
      "fn": "ERC721._transfer",
      "offset": [
        10580,
        10603
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2236": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2238": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2240": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2242": {
      "op": "SHL"
    },
    "2243": {
      "op": "SUB"
    },
    "2244": {
      "fn": "ERC721._transfer",
      "offset": [
        10580,
        10611
      ],
      "op": "AND",
      "path": "10"
    },
    "2245": {
      "branch": 57,
      "fn": "ERC721._transfer",
      "offset": [
        10580,
        10611
      ],
      "op": "EQ",
      "path": "10"
    },
    "2246": {
      "fn": "ERC721._transfer",
      "offset": [
        10572,
        10653
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x91F"
    },
    "2249": {
      "branch": 57,
      "fn": "ERC721._transfer",
      "offset": [
        10572,
        10653
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2250": {
      "fn": "ERC721._transfer",
      "offset": [
        10572,
        10653
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2252": {
      "fn": "ERC721._transfer",
      "offset": [
        10572,
        10653
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2253": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2257": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2259": {
      "op": "SHL"
    },
    "2260": {
      "fn": "ERC721._transfer",
      "offset": [
        10572,
        10653
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2261": {
      "fn": "ERC721._transfer",
      "offset": [
        10572,
        10653
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2262": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2264": {
      "fn": "ERC721._transfer",
      "offset": [
        10572,
        10653
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "2266": {
      "fn": "ERC721._transfer",
      "offset": [
        10572,
        10653
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2267": {
      "fn": "ERC721._transfer",
      "offset": [
        10572,
        10653
      ],
      "op": "ADD",
      "path": "10"
    },
    "2268": {
      "op": "MSTORE"
    },
    "2269": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "2271": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2273": {
      "op": "DUP3"
    },
    "2274": {
      "op": "ADD"
    },
    "2275": {
      "op": "MSTORE"
    },
    "2276": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722066726F6D20696E636F727265637420"
    },
    "2309": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2311": {
      "op": "DUP3"
    },
    "2312": {
      "op": "ADD"
    },
    "2313": {
      "op": "MSTORE"
    },
    "2314": {
      "op": "PUSH5",
      "value": "0x37BBB732B9"
    },
    "2320": {
      "op": "PUSH1",
      "value": "0xD9"
    },
    "2322": {
      "op": "SHL"
    },
    "2323": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2325": {
      "op": "DUP3"
    },
    "2326": {
      "op": "ADD"
    },
    "2327": {
      "op": "MSTORE"
    },
    "2328": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2330": {
      "op": "ADD"
    },
    "2331": {
      "fn": "ERC721._transfer",
      "offset": [
        10572,
        10653
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x381"
    },
    "2334": {
      "op": "JUMP"
    },
    "2335": {
      "fn": "ERC721._transfer",
      "offset": [
        10572,
        10653
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2336": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2340": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2342": {
      "op": "SHL"
    },
    "2343": {
      "op": "SUB"
    },
    "2344": {
      "fn": "ERC721._transfer",
      "offset": [
        10671,
        10687
      ],
      "op": "DUP3",
      "path": "10",
      "statement": 29
    },
    "2345": {
      "branch": 58,
      "fn": "ERC721._transfer",
      "offset": [
        10671,
        10687
      ],
      "op": "AND",
      "path": "10"
    },
    "2346": {
      "fn": "ERC721._transfer",
      "offset": [
        10663,
        10728
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x981"
    },
    "2349": {
      "branch": 58,
      "fn": "ERC721._transfer",
      "offset": [
        10663,
        10728
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2350": {
      "fn": "ERC721._transfer",
      "offset": [
        10663,
        10728
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2352": {
      "fn": "ERC721._transfer",
      "offset": [
        10663,
        10728
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2353": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2357": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2359": {
      "op": "SHL"
    },
    "2360": {
      "fn": "ERC721._transfer",
      "offset": [
        10663,
        10728
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2361": {
      "fn": "ERC721._transfer",
      "offset": [
        10663,
        10728
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2362": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2364": {
      "fn": "ERC721._transfer",
      "offset": [
        10663,
        10728
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "2366": {
      "fn": "ERC721._transfer",
      "offset": [
        10663,
        10728
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2367": {
      "fn": "ERC721._transfer",
      "offset": [
        10663,
        10728
      ],
      "op": "ADD",
      "path": "10"
    },
    "2368": {
      "op": "MSTORE"
    },
    "2369": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2371": {
      "op": "DUP1"
    },
    "2372": {
      "op": "DUP3"
    },
    "2373": {
      "op": "ADD"
    },
    "2374": {
      "op": "MSTORE"
    },
    "2375": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F20746865207A65726F20616464"
    },
    "2408": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2410": {
      "op": "DUP3"
    },
    "2411": {
      "op": "ADD"
    },
    "2412": {
      "op": "MSTORE"
    },
    "2413": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "2418": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2420": {
      "op": "SHL"
    },
    "2421": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2423": {
      "op": "DUP3"
    },
    "2424": {
      "op": "ADD"
    },
    "2425": {
      "op": "MSTORE"
    },
    "2426": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2428": {
      "op": "ADD"
    },
    "2429": {
      "fn": "ERC721._transfer",
      "offset": [
        10663,
        10728
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x381"
    },
    "2432": {
      "op": "JUMP"
    },
    "2433": {
      "fn": "ERC721._transfer",
      "offset": [
        10663,
        10728
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2434": {
      "fn": "ERC721._transfer",
      "offset": [
        10840,
        10869
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 30,
      "value": "0x98C"
    },
    "2437": {
      "fn": "ERC721._transfer",
      "offset": [
        10857,
        10858
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2439": {
      "fn": "ERC721._transfer",
      "offset": [
        10861,
        10868
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2440": {
      "fn": "ERC721._transfer",
      "offset": [
        10840,
        10848
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x743"
    },
    "2443": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10840,
        10869
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2444": {
      "fn": "ERC721._transfer",
      "offset": [
        10840,
        10869
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2445": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2447": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2449": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2451": {
      "op": "SHL"
    },
    "2452": {
      "op": "SUB"
    },
    "2453": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10895
      ],
      "op": "DUP4",
      "path": "10",
      "statement": 31
    },
    "2454": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10895
      ],
      "op": "AND",
      "path": "10"
    },
    "2455": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10895
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2457": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10895
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2458": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10895
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2459": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10895
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2460": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10889
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "2462": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10895
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2464": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10895
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2465": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10895
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2467": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10895
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2468": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10895
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "2469": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10900
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2470": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10900
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2471": {
      "fn": "ERC721._transfer",
      "offset": [
        10899,
        10900
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "2473": {
      "fn": "ERC721._transfer",
      "offset": [
        10899,
        10900
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2474": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10895
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2475": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10900
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x9B5"
    },
    "2478": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10900
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2479": {
      "fn": "ERC721._transfer",
      "offset": [
        10899,
        10900
      ],
      "op": "DUP5",
      "path": "10"
    },
    "2480": {
      "fn": "ERC721._transfer",
      "offset": [
        10899,
        10900
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2481": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10900
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x10CF"
    },
    "2484": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10880,
        10900
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2485": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10900
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2486": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10900
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2487": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10900
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2488": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10900
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "2489": {
      "op": "POP"
    },
    "2490": {
      "op": "POP"
    },
    "2491": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2493": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2495": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2497": {
      "op": "SHL"
    },
    "2498": {
      "op": "SUB"
    },
    "2499": {
      "fn": "ERC721._transfer",
      "offset": [
        10910,
        10923
      ],
      "op": "DUP3",
      "path": "10",
      "statement": 32
    },
    "2500": {
      "fn": "ERC721._transfer",
      "offset": [
        10910,
        10923
      ],
      "op": "AND",
      "path": "10"
    },
    "2501": {
      "fn": "ERC721._transfer",
      "offset": [
        10910,
        10923
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2503": {
      "fn": "ERC721._transfer",
      "offset": [
        10910,
        10923
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2504": {
      "fn": "ERC721._transfer",
      "offset": [
        10910,
        10923
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2505": {
      "fn": "ERC721._transfer",
      "offset": [
        10910,
        10923
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2506": {
      "fn": "ERC721._transfer",
      "offset": [
        10910,
        10919
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "2508": {
      "fn": "ERC721._transfer",
      "offset": [
        10910,
        10923
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2510": {
      "fn": "ERC721._transfer",
      "offset": [
        10910,
        10923
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2511": {
      "fn": "ERC721._transfer",
      "offset": [
        10910,
        10923
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2513": {
      "fn": "ERC721._transfer",
      "offset": [
        10910,
        10923
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2514": {
      "fn": "ERC721._transfer",
      "offset": [
        10910,
        10923
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "2515": {
      "fn": "ERC721._transfer",
      "offset": [
        10910,
        10928
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2516": {
      "fn": "ERC721._transfer",
      "offset": [
        10910,
        10928
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2517": {
      "fn": "ERC721._transfer",
      "offset": [
        10927,
        10928
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "2519": {
      "fn": "ERC721._transfer",
      "offset": [
        10927,
        10928
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2520": {
      "fn": "ERC721._transfer",
      "offset": [
        10910,
        10923
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2521": {
      "fn": "ERC721._transfer",
      "offset": [
        10910,
        10928
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x9E3"
    },
    "2524": {
      "fn": "ERC721._transfer",
      "offset": [
        10910,
        10928
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2525": {
      "fn": "ERC721._transfer",
      "offset": [
        10927,
        10928
      ],
      "op": "DUP5",
      "path": "10"
    },
    "2526": {
      "fn": "ERC721._transfer",
      "offset": [
        10927,
        10928
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2527": {
      "fn": "ERC721._transfer",
      "offset": [
        10910,
        10928
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x10E6"
    },
    "2530": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10910,
        10928
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2531": {
      "fn": "ERC721._transfer",
      "offset": [
        10910,
        10928
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2532": {
      "fn": "ERC721._transfer",
      "offset": [
        10910,
        10928
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2533": {
      "fn": "ERC721._transfer",
      "offset": [
        10910,
        10928
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2534": {
      "fn": "ERC721._transfer",
      "offset": [
        10910,
        10928
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "2535": {
      "op": "POP"
    },
    "2536": {
      "op": "POP"
    },
    "2537": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10954
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 33,
      "value": "0x0"
    },
    "2539": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10954
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2540": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10954
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2541": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10954
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2542": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10945
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "2544": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10954
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2546": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10954
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2547": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10954
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2549": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10954
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2550": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10954
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2551": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10954
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "2552": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10959
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2553": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10959
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2556": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2558": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2560": {
      "op": "SHL"
    },
    "2561": {
      "op": "SUB"
    },
    "2562": {
      "op": "NOT"
    },
    "2563": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10959
      ],
      "op": "AND",
      "path": "10"
    },
    "2564": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2566": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2568": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2570": {
      "op": "SHL"
    },
    "2571": {
      "op": "SUB"
    },
    "2572": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10959
      ],
      "op": "DUP7",
      "path": "10"
    },
    "2573": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10959
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2574": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10959
      ],
      "op": "AND",
      "path": "10"
    },
    "2575": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10959
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2576": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10959
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2577": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10959
      ],
      "op": "OR",
      "path": "10"
    },
    "2578": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10959
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2579": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10959
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2580": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10959
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "2581": {
      "fn": "ERC721._transfer",
      "offset": [
        10975,
        11002
      ],
      "op": "SWAP2",
      "path": "10",
      "statement": 34
    },
    "2582": {
      "fn": "ERC721._transfer",
      "offset": [
        10975,
        11002
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2583": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10954
      ],
      "op": "DUP5",
      "path": "10"
    },
    "2584": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10954
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "2585": {
      "fn": "ERC721._transfer",
      "offset": [
        10975,
        11002
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2586": {
      "fn": "ERC721._transfer",
      "offset": [
        10975,
        11002
      ],
      "op": "DUP8",
      "path": "10"
    },
    "2587": {
      "fn": "ERC721._transfer",
      "offset": [
        10975,
        11002
      ],
      "op": "AND",
      "path": "10"
    },
    "2588": {
      "fn": "ERC721._transfer",
      "offset": [
        10975,
        11002
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2589": {
      "fn": "ERC721._transfer",
      "offset": [
        10975,
        11002
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "2622": {
      "fn": "ERC721._transfer",
      "offset": [
        10975,
        11002
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2623": {
      "fn": "ERC721._transfer",
      "offset": [
        10975,
        11002
      ],
      "op": "LOG4",
      "path": "10"
    },
    "2624": {
      "fn": "ERC721.approve",
      "offset": [
        3608,
        3939
      ],
      "op": "POP",
      "path": "10"
    },
    "2625": {
      "fn": "ERC721.approve",
      "offset": [
        3538,
        3939
      ],
      "op": "POP",
      "path": "10"
    },
    "2626": {
      "fn": "ERC721.approve",
      "offset": [
        3538,
        3939
      ],
      "op": "POP",
      "path": "10"
    },
    "2627": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        3538,
        3939
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2628": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11475,
        11782
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2629": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11625,
        11633
      ],
      "op": "DUP2",
      "path": "10",
      "statement": 35
    },
    "2630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2632": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2634": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2636": {
      "op": "SHL"
    },
    "2637": {
      "op": "SUB"
    },
    "2638": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11616,
        11633
      ],
      "op": "AND",
      "path": "10"
    },
    "2639": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11616,
        11621
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2642": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2644": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2646": {
      "op": "SHL"
    },
    "2647": {
      "op": "SUB"
    },
    "2648": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11616,
        11633
      ],
      "op": "AND",
      "path": "10"
    },
    "2649": {
      "branch": 59,
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11616,
        11633
      ],
      "op": "SUB",
      "path": "10"
    },
    "2650": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11608,
        11663
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xAA5"
    },
    "2653": {
      "branch": 59,
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11608,
        11663
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2654": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11608,
        11663
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2656": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11608,
        11663
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2657": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2661": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2663": {
      "op": "SHL"
    },
    "2664": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11608,
        11663
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2665": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11608,
        11663
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2666": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2668": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11608,
        11663
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "2670": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11608,
        11663
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2671": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11608,
        11663
      ],
      "op": "ADD",
      "path": "10"
    },
    "2672": {
      "op": "MSTORE"
    },
    "2673": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "2675": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2677": {
      "op": "DUP3"
    },
    "2678": {
      "op": "ADD"
    },
    "2679": {
      "op": "MSTORE"
    },
    "2680": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F766520746F2063616C6C657200000000000000"
    },
    "2713": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2715": {
      "op": "DUP3"
    },
    "2716": {
      "op": "ADD"
    },
    "2717": {
      "op": "MSTORE"
    },
    "2718": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2720": {
      "op": "ADD"
    },
    "2721": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11608,
        11663
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x381"
    },
    "2724": {
      "op": "JUMP"
    },
    "2725": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11608,
        11663
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2726": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2728": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2730": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2732": {
      "op": "SHL"
    },
    "2733": {
      "op": "SUB"
    },
    "2734": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11698
      ],
      "op": "DUP4",
      "path": "10",
      "statement": 36
    },
    "2735": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11698
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2736": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11698
      ],
      "op": "AND",
      "path": "10"
    },
    "2737": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11698
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2739": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11698
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2740": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11698
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2741": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11698
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2742": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11691
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x5"
    },
    "2744": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11698
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2746": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11698
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2747": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11698
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2748": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11698
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2749": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11698
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2751": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11698
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2752": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11698
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2753": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11698
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "2754": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11708
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "2755": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11708
      ],
      "op": "DUP8",
      "path": "10"
    },
    "2756": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11708
      ],
      "op": "AND",
      "path": "10"
    },
    "2757": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11708
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2758": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11708
      ],
      "op": "DUP5",
      "path": "10"
    },
    "2759": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11708
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2760": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11708
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "2761": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11708
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2762": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11708
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2763": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11708
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2764": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11708
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2765": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11708
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2766": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11708
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "2767": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11719
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2768": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11719
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2769": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2771": {
      "op": "NOT"
    },
    "2772": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11719
      ],
      "op": "AND",
      "path": "10"
    },
    "2773": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11719
      ],
      "op": "DUP7",
      "path": "10"
    },
    "2774": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11719
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2775": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11719
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2776": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11719
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2777": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11719
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2778": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11719
      ],
      "op": "OR",
      "path": "10"
    },
    "2779": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11719
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2780": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11719
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2781": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11719
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "2782": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11734,
        11775
      ],
      "op": "SWAP2",
      "path": "10",
      "statement": 37
    },
    "2783": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11734,
        11775
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2784": {
      "op": "SWAP2"
    },
    "2785": {
      "op": "DUP3"
    },
    "2786": {
      "op": "MSTORE"
    },
    "2787": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11734,
        11775
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "2820": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11734,
        11775
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2821": {
      "op": "ADD"
    },
    "2822": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11734,
        11775
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2824": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11734,
        11775
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2825": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11734,
        11775
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2826": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11734,
        11775
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2827": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11734,
        11775
      ],
      "op": "SUB",
      "path": "10"
    },
    "2828": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11734,
        11775
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2829": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11734,
        11775
      ],
      "op": "LOG3",
      "path": "10"
    },
    "2830": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11475,
        11782
      ],
      "op": "POP",
      "path": "10"
    },
    "2831": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11475,
        11782
      ],
      "op": "POP",
      "path": "10"
    },
    "2832": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11475,
        11782
      ],
      "op": "POP",
      "path": "10"
    },
    "2833": {
      "fn": "ERC721._setApprovalForAll",
      "jump": "o",
      "offset": [
        11475,
        11782
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2834": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6550,
        6857
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2835": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6701,
        6729
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 38,
      "value": "0xB1D"
    },
    "2838": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6711,
        6715
      ],
      "op": "DUP5",
      "path": "10"
    },
    "2839": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6717,
        6719
      ],
      "op": "DUP5",
      "path": "10"
    },
    "2840": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6721,
        6728
      ],
      "op": "DUP5",
      "path": "10"
    },
    "2841": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6701,
        6710
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x8A8"
    },
    "2844": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6701,
        6729
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2845": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6701,
        6729
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2846": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6747,
        6795
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 39,
      "value": "0xB29"
    },
    "2849": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6770,
        6774
      ],
      "op": "DUP5",
      "path": "10"
    },
    "2850": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6776,
        6778
      ],
      "op": "DUP5",
      "path": "10"
    },
    "2851": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6780,
        6787
      ],
      "op": "DUP5",
      "path": "10"
    },
    "2852": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6789,
        6794
      ],
      "op": "DUP5",
      "path": "10"
    },
    "2853": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6747,
        6769
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC46"
    },
    "2856": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6747,
        6795
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2857": {
      "branch": 60,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6747,
        6795
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2858": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6739,
        6850
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x655"
    },
    "2861": {
      "branch": 60,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6739,
        6850
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2862": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6739,
        6850
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2864": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6739,
        6850
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2865": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2869": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2871": {
      "op": "SHL"
    },
    "2872": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6739,
        6850
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2873": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6739,
        6850
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2874": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6739,
        6850
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "2876": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6739,
        6850
      ],
      "op": "ADD",
      "path": "10"
    },
    "2877": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6739,
        6850
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x381"
    },
    "2880": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6739,
        6850
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2881": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6739,
        6850
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x10FE"
    },
    "2884": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6739,
        6850
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2885": {
      "fn": "Strings.toString",
      "offset": [
        328,
        1031
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2886": {
      "fn": "Strings.toString",
      "offset": [
        384,
        397
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "2888": {
      "fn": "Strings.toString",
      "offset": [
        601,
        606
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2889": {
      "fn": "Strings.toString",
      "offset": [
        610,
        611
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2891": {
      "branch": 62,
      "fn": "Strings.toString",
      "offset": [
        601,
        611
      ],
      "op": "SUB",
      "path": "18"
    },
    "2892": {
      "fn": "Strings.toString",
      "offset": [
        597,
        648
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xB6C"
    },
    "2895": {
      "branch": 62,
      "fn": "Strings.toString",
      "offset": [
        597,
        648
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2896": {
      "op": "POP"
    },
    "2897": {
      "op": "POP"
    },
    "2898": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 40,
      "value": "0x40"
    },
    "2900": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2901": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2902": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2903": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2904": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "ADD",
      "path": "18"
    },
    "2905": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2906": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2907": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2908": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "2910": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2911": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2912": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "2914": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "2916": {
      "op": "SHL"
    },
    "2917": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2919": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2920": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "ADD",
      "path": "18"
    },
    "2921": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2922": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2923": {
      "fn": "Strings.toString",
      "jump": "o",
      "offset": [
        328,
        1031
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2924": {
      "fn": "Strings.toString",
      "offset": [
        597,
        648
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2925": {
      "fn": "Strings.toString",
      "offset": [
        672,
        677
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2926": {
      "fn": "Strings.toString",
      "offset": [
        657,
        669
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2928": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2929": {
      "fn": "Strings.toString",
      "offset": [
        718,
        727
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2930": {
      "fn": "Strings.toString",
      "offset": [
        718,
        727
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "2931": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xB96"
    },
    "2934": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2935": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "DUP1",
      "path": "18",
      "statement": 41
    },
    "2936": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xB80"
    },
    "2939": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2940": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1150"
    },
    "2943": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        743,
        751
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2944": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2945": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2946": {
      "op": "POP"
    },
    "2947": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 42,
      "value": "0xB8F"
    },
    "2950": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2951": {
      "op": "POP"
    },
    "2952": {
      "fn": "Strings.toString",
      "offset": [
        773,
        775
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA"
    },
    "2954": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2955": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x117F"
    },
    "2958": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        765,
        775
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2959": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2960": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2961": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "POP",
      "path": "18"
    },
    "2962": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xB70"
    },
    "2965": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2966": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2967": {
      "fn": "Strings.toString",
      "offset": [
        795,
        814
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2969": {
      "fn": "Strings.toString",
      "offset": [
        827,
        833
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2970": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH8",
      "path": "18",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2979": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2980": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "GT",
      "path": "18"
    },
    "2981": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "2982": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xBB1"
    },
    "2985": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2986": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xBB1"
    },
    "2989": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xEDA"
    },
    "2992": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        817,
        834
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2993": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2994": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2996": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2997": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2998": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2999": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3000": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3001": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3002": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "3004": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "18"
    },
    "3005": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "3007": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "NOT",
      "path": "18"
    },
    "3008": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "AND",
      "path": "18"
    },
    "3009": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3011": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "18"
    },
    "3012": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3013": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "18"
    },
    "3014": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3016": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3017": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3018": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "3019": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xBDB"
    },
    "3022": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3023": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3025": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3026": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "18"
    },
    "3027": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3028": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3029": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "3030": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3031": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "CALLDATACOPY",
      "path": "18"
    },
    "3032": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "18"
    },
    "3033": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3034": {
      "op": "POP"
    },
    "3035": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3036": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "POP",
      "path": "18"
    },
    "3037": {
      "fn": "Strings.toString",
      "offset": [
        795,
        834
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3038": {
      "fn": "Strings.toString",
      "offset": [
        795,
        834
      ],
      "op": "POP",
      "path": "18"
    },
    "3039": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3040": {
      "fn": "Strings.toString",
      "offset": [
        851,
        861
      ],
      "op": "DUP5",
      "path": "18"
    },
    "3041": {
      "fn": "Strings.toString",
      "offset": [
        851,
        861
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "3042": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x8A0"
    },
    "3045": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3046": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 43,
      "value": "0xBF0"
    },
    "3049": {
      "fn": "Strings.toString",
      "offset": [
        887,
        888
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "3051": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3052": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x10CF"
    },
    "3055": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        877,
        888
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3056": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3057": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3058": {
      "op": "POP"
    },
    "3059": {
      "fn": "Strings.toString",
      "offset": [
        945,
        955
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 44,
      "value": "0xBFD"
    },
    "3062": {
      "fn": "Strings.toString",
      "offset": [
        953,
        955
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA"
    },
    "3064": {
      "fn": "Strings.toString",
      "offset": [
        945,
        950
      ],
      "op": "DUP7",
      "path": "18"
    },
    "3065": {
      "fn": "Strings.toString",
      "offset": [
        945,
        955
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1193"
    },
    "3068": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        945,
        955
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3069": {
      "fn": "Strings.toString",
      "offset": [
        945,
        955
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3070": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC08"
    },
    "3073": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3074": {
      "fn": "Strings.toString",
      "offset": [
        932,
        934
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x30"
    },
    "3076": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x10E6"
    },
    "3079": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        932,
        956
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3080": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3081": {
      "fn": "Strings.toString",
      "offset": [
        919,
        958
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xF8"
    },
    "3083": {
      "fn": "Strings.toString",
      "offset": [
        919,
        958
      ],
      "op": "SHL",
      "path": "18"
    },
    "3084": {
      "fn": "Strings.toString",
      "offset": [
        902,
        908
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3085": {
      "fn": "Strings.toString",
      "offset": [
        909,
        915
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3086": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3087": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3088": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3089": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "LT",
      "path": "18"
    },
    "3090": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC1D"
    },
    "3093": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3094": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC1D"
    },
    "3097": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x11A7"
    },
    "3100": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        902,
        916
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3101": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3102": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3104": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "ADD",
      "path": "18"
    },
    "3105": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "ADD",
      "path": "18"
    },
    "3106": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3109": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3111": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "3113": {
      "op": "SHL"
    },
    "3114": {
      "op": "SUB"
    },
    "3115": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "NOT",
      "path": "18"
    },
    "3116": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "AND",
      "path": "18"
    },
    "3117": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3118": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3119": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3121": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "BYTE",
      "path": "18"
    },
    "3122": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3123": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "MSTORE8",
      "path": "18"
    },
    "3124": {
      "op": "POP"
    },
    "3125": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 45,
      "value": "0xC3F"
    },
    "3128": {
      "fn": "Strings.toString",
      "offset": [
        981,
        983
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA"
    },
    "3130": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "DUP7",
      "path": "18"
    },
    "3131": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x117F"
    },
    "3134": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        972,
        983
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3135": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3136": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "3137": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "POP",
      "path": "18"
    },
    "3138": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xBDF"
    },
    "3141": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3142": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12335,
        13113
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3143": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12485,
        12489
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3145": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3147": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3149": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3151": {
      "op": "SHL"
    },
    "3152": {
      "op": "SUB"
    },
    "3153": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12505,
        12518
      ],
      "op": "DUP5",
      "path": "10"
    },
    "3154": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12505,
        12518
      ],
      "op": "AND",
      "path": "10"
    },
    "3155": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "EXTCODESIZE",
      "path": "15",
      "statement": 46
    },
    "3156": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1488
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3157": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12501,
        13107
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xD3C"
    },
    "3160": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12501,
        13107
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3161": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3163": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3164": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "3169": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3171": {
      "op": "SHL"
    },
    "3172": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3173": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3174": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3176": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3178": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3180": {
      "op": "SHL"
    },
    "3181": {
      "op": "SUB"
    },
    "3182": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12576
      ],
      "op": "DUP6",
      "path": "10"
    },
    "3183": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12576
      ],
      "op": "AND",
      "path": "10"
    },
    "3184": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12576
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3185": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12576
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x150B7A02"
    },
    "3190": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12576
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3191": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC8A"
    },
    "3194": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3195": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "16"
    },
    "3196": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3197": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12591,
        12595
      ],
      "op": "DUP10",
      "path": "10"
    },
    "3198": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12591,
        12595
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3199": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12597,
        12604
      ],
      "op": "DUP9",
      "path": "10"
    },
    "3200": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12597,
        12604
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3201": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12606,
        12611
      ],
      "op": "DUP9",
      "path": "10"
    },
    "3202": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12606,
        12611
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3203": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "3205": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "ADD",
      "path": "10"
    },
    "3206": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x11BD"
    },
    "3209": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12540,
        12612
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3210": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3211": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3213": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3215": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3216": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3217": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3218": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "SUB",
      "path": "10"
    },
    "3219": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3220": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3222": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "DUP8",
      "path": "10"
    },
    "3223": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "GAS",
      "path": "10"
    },
    "3224": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "CALL",
      "path": "10"
    },
    "3225": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "3226": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "POP",
      "path": "10"
    },
    "3227": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "POP",
      "path": "10"
    },
    "3228": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "POP",
      "path": "10"
    },
    "3229": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3230": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3231": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xCC5"
    },
    "3234": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3235": {
      "op": "POP"
    },
    "3236": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3238": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3239": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3240": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "3242": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "3243": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3244": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3245": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "ADD",
      "path": "10"
    },
    "3246": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3248": {
      "op": "NOT"
    },
    "3249": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "AND",
      "path": "10"
    },
    "3250": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3251": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "ADD",
      "path": "10"
    },
    "3252": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3253": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "3254": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3255": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xCC2"
    },
    "3258": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3259": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3260": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "ADD",
      "path": "10"
    },
    "3261": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3262": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x11FA"
    },
    "3265": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12540,
        12612
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3266": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3267": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "3269": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3270": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xD22"
    },
    "3273": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3274": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "3275": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3276": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3277": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3278": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xCF3"
    },
    "3281": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3282": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3284": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3285": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3286": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "POP",
      "path": "10"
    },
    "3287": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "3289": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "NOT",
      "path": "10"
    },
    "3290": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3F"
    },
    "3292": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "3293": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "ADD",
      "path": "10"
    },
    "3294": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "AND",
      "path": "10"
    },
    "3295": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3296": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "ADD",
      "path": "10"
    },
    "3297": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3299": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3300": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "3301": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3302": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3303": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "3304": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3306": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3308": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "DUP5",
      "path": "10"
    },
    "3309": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "ADD",
      "path": "10"
    },
    "3310": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "RETURNDATACOPY",
      "path": "10"
    },
    "3311": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xCF8"
    },
    "3314": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3315": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3316": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "3318": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3319": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "POP",
      "path": "10"
    },
    "3320": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3321": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "POP",
      "path": "10"
    },
    "3322": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12779,
        12785
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3323": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12779,
        12792
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3324": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12796,
        12797
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3326": {
      "branch": 61,
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12779,
        12797
      ],
      "op": "SUB",
      "path": "10"
    },
    "3327": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12775,
        13041
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xD1A"
    },
    "3330": {
      "branch": 61,
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12775,
        13041
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3331": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12821,
        12881
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 47,
      "value": "0x40"
    },
    "3333": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12821,
        12881
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3334": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3338": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3340": {
      "op": "SHL"
    },
    "3341": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12821,
        12881
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3342": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12821,
        12881
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3343": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12821,
        12881
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "3345": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12821,
        12881
      ],
      "op": "ADD",
      "path": "10"
    },
    "3346": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12821,
        12881
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x381"
    },
    "3349": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12821,
        12881
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3350": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12821,
        12881
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x10FE"
    },
    "3353": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12821,
        12881
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3354": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12775,
        13041
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3355": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12993,
        12999
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3356": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12987,
        13000
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3357": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12978,
        12984
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3358": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12974,
        12976
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3360": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12970,
        12985
      ],
      "op": "ADD",
      "path": "10"
    },
    "3361": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12963,
        13001
      ],
      "op": "REVERT",
      "path": "10"
    },
    "3362": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3363": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3365": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3367": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3369": {
      "op": "SHL"
    },
    "3370": {
      "op": "SUB"
    },
    "3371": {
      "op": "NOT"
    },
    "3372": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12662,
        12713
      ],
      "op": "AND",
      "path": "10",
      "statement": 48
    },
    "3373": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "3378": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3380": {
      "op": "SHL"
    },
    "3381": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12662,
        12713
      ],
      "op": "EQ",
      "path": "10"
    },
    "3382": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12662,
        12713
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3383": {
      "op": "POP"
    },
    "3384": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12655,
        12713
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x8A0"
    },
    "3387": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12655,
        12713
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3388": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12501,
        13107
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3389": {
      "op": "POP"
    },
    "3390": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13092,
        13096
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 49,
      "value": "0x1"
    },
    "3392": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12335,
        13113
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "3393": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12335,
        13113
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "3394": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12335,
        13113
      ],
      "op": "POP",
      "path": "10"
    },
    "3395": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12335,
        13113
      ],
      "op": "POP",
      "path": "10"
    },
    "3396": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12335,
        13113
      ],
      "op": "POP",
      "path": "10"
    },
    "3397": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12335,
        13113
      ],
      "op": "POP",
      "path": "10"
    },
    "3398": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "o",
      "offset": [
        12335,
        13113
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3399": {
      "op": "JUMPDEST"
    },
    "3400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3404": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3406": {
      "op": "SHL"
    },
    "3407": {
      "op": "SUB"
    },
    "3408": {
      "op": "NOT"
    },
    "3409": {
      "op": "DUP2"
    },
    "3410": {
      "op": "AND"
    },
    "3411": {
      "op": "DUP2"
    },
    "3412": {
      "op": "EQ"
    },
    "3413": {
      "op": "PUSH2",
      "value": "0xD5D"
    },
    "3416": {
      "op": "JUMPI"
    },
    "3417": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3419": {
      "op": "DUP1"
    },
    "3420": {
      "op": "REVERT"
    },
    "3421": {
      "op": "JUMPDEST"
    },
    "3422": {
      "op": "POP"
    },
    "3423": {
      "jump": "o",
      "op": "JUMP"
    },
    "3424": {
      "op": "JUMPDEST"
    },
    "3425": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3427": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3429": {
      "op": "DUP3"
    },
    "3430": {
      "op": "DUP5"
    },
    "3431": {
      "op": "SUB"
    },
    "3432": {
      "op": "SLT"
    },
    "3433": {
      "op": "ISZERO"
    },
    "3434": {
      "op": "PUSH2",
      "value": "0xD72"
    },
    "3437": {
      "op": "JUMPI"
    },
    "3438": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3440": {
      "op": "DUP1"
    },
    "3441": {
      "op": "REVERT"
    },
    "3442": {
      "op": "JUMPDEST"
    },
    "3443": {
      "op": "DUP2"
    },
    "3444": {
      "op": "CALLDATALOAD"
    },
    "3445": {
      "op": "PUSH2",
      "value": "0x73C"
    },
    "3448": {
      "op": "DUP2"
    },
    "3449": {
      "op": "PUSH2",
      "value": "0xD47"
    },
    "3452": {
      "jump": "i",
      "op": "JUMP"
    },
    "3453": {
      "op": "JUMPDEST"
    },
    "3454": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3456": {
      "op": "JUMPDEST"
    },
    "3457": {
      "op": "DUP4"
    },
    "3458": {
      "op": "DUP2"
    },
    "3459": {
      "op": "LT"
    },
    "3460": {
      "op": "ISZERO"
    },
    "3461": {
      "op": "PUSH2",
      "value": "0xD98"
    },
    "3464": {
      "op": "JUMPI"
    },
    "3465": {
      "op": "DUP2"
    },
    "3466": {
      "op": "DUP2"
    },
    "3467": {
      "op": "ADD"
    },
    "3468": {
      "op": "MLOAD"
    },
    "3469": {
      "op": "DUP4"
    },
    "3470": {
      "op": "DUP3"
    },
    "3471": {
      "op": "ADD"
    },
    "3472": {
      "op": "MSTORE"
    },
    "3473": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3475": {
      "op": "ADD"
    },
    "3476": {
      "op": "PUSH2",
      "value": "0xD80"
    },
    "3479": {
      "op": "JUMP"
    },
    "3480": {
      "op": "JUMPDEST"
    },
    "3481": {
      "op": "DUP4"
    },
    "3482": {
      "op": "DUP2"
    },
    "3483": {
      "op": "GT"
    },
    "3484": {
      "op": "ISZERO"
    },
    "3485": {
      "op": "PUSH2",
      "value": "0x655"
    },
    "3488": {
      "op": "JUMPI"
    },
    "3489": {
      "op": "POP"
    },
    "3490": {
      "op": "POP"
    },
    "3491": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3493": {
      "op": "SWAP2"
    },
    "3494": {
      "op": "ADD"
    },
    "3495": {
      "op": "MSTORE"
    },
    "3496": {
      "jump": "o",
      "op": "JUMP"
    },
    "3497": {
      "op": "JUMPDEST"
    },
    "3498": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3500": {
      "op": "DUP2"
    },
    "3501": {
      "op": "MLOAD"
    },
    "3502": {
      "op": "DUP1"
    },
    "3503": {
      "op": "DUP5"
    },
    "3504": {
      "op": "MSTORE"
    },
    "3505": {
      "op": "PUSH2",
      "value": "0xDC1"
    },
    "3508": {
      "op": "DUP2"
    },
    "3509": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3511": {
      "op": "DUP7"
    },
    "3512": {
      "op": "ADD"
    },
    "3513": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3515": {
      "op": "DUP7"
    },
    "3516": {
      "op": "ADD"
    },
    "3517": {
      "op": "PUSH2",
      "value": "0xD7D"
    },
    "3520": {
      "jump": "i",
      "op": "JUMP"
    },
    "3521": {
      "op": "JUMPDEST"
    },
    "3522": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3524": {
      "op": "ADD"
    },
    "3525": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3527": {
      "op": "NOT"
    },
    "3528": {
      "op": "AND"
    },
    "3529": {
      "op": "SWAP3"
    },
    "3530": {
      "op": "SWAP1"
    },
    "3531": {
      "op": "SWAP3"
    },
    "3532": {
      "op": "ADD"
    },
    "3533": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3535": {
      "op": "ADD"
    },
    "3536": {
      "op": "SWAP3"
    },
    "3537": {
      "op": "SWAP2"
    },
    "3538": {
      "op": "POP"
    },
    "3539": {
      "op": "POP"
    },
    "3540": {
      "jump": "o",
      "op": "JUMP"
    },
    "3541": {
      "op": "JUMPDEST"
    },
    "3542": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3544": {
      "op": "DUP2"
    },
    "3545": {
      "op": "MSTORE"
    },
    "3546": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3548": {
      "op": "PUSH2",
      "value": "0x73C"
    },
    "3551": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3553": {
      "op": "DUP4"
    },
    "3554": {
      "op": "ADD"
    },
    "3555": {
      "op": "DUP5"
    },
    "3556": {
      "op": "PUSH2",
      "value": "0xDA9"
    },
    "3559": {
      "jump": "i",
      "op": "JUMP"
    },
    "3560": {
      "op": "JUMPDEST"
    },
    "3561": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3563": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3565": {
      "op": "DUP3"
    },
    "3566": {
      "op": "DUP5"
    },
    "3567": {
      "op": "SUB"
    },
    "3568": {
      "op": "SLT"
    },
    "3569": {
      "op": "ISZERO"
    },
    "3570": {
      "op": "PUSH2",
      "value": "0xDFA"
    },
    "3573": {
      "op": "JUMPI"
    },
    "3574": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3576": {
      "op": "DUP1"
    },
    "3577": {
      "op": "REVERT"
    },
    "3578": {
      "op": "JUMPDEST"
    },
    "3579": {
      "op": "POP"
    },
    "3580": {
      "op": "CALLDATALOAD"
    },
    "3581": {
      "op": "SWAP2"
    },
    "3582": {
      "op": "SWAP1"
    },
    "3583": {
      "op": "POP"
    },
    "3584": {
      "jump": "o",
      "op": "JUMP"
    },
    "3585": {
      "op": "JUMPDEST"
    },
    "3586": {
      "op": "DUP1"
    },
    "3587": {
      "op": "CALLDATALOAD"
    },
    "3588": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3590": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3592": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3594": {
      "op": "SHL"
    },
    "3595": {
      "op": "SUB"
    },
    "3596": {
      "op": "DUP2"
    },
    "3597": {
      "op": "AND"
    },
    "3598": {
      "op": "DUP2"
    },
    "3599": {
      "op": "EQ"
    },
    "3600": {
      "op": "PUSH2",
      "value": "0xE18"
    },
    "3603": {
      "op": "JUMPI"
    },
    "3604": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3606": {
      "op": "DUP1"
    },
    "3607": {
      "op": "REVERT"
    },
    "3608": {
      "op": "JUMPDEST"
    },
    "3609": {
      "op": "SWAP2"
    },
    "3610": {
      "op": "SWAP1"
    },
    "3611": {
      "op": "POP"
    },
    "3612": {
      "jump": "o",
      "op": "JUMP"
    },
    "3613": {
      "op": "JUMPDEST"
    },
    "3614": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3616": {
      "op": "DUP1"
    },
    "3617": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3619": {
      "op": "DUP4"
    },
    "3620": {
      "op": "DUP6"
    },
    "3621": {
      "op": "SUB"
    },
    "3622": {
      "op": "SLT"
    },
    "3623": {
      "op": "ISZERO"
    },
    "3624": {
      "op": "PUSH2",
      "value": "0xE30"
    },
    "3627": {
      "op": "JUMPI"
    },
    "3628": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3630": {
      "op": "DUP1"
    },
    "3631": {
      "op": "REVERT"
    },
    "3632": {
      "op": "JUMPDEST"
    },
    "3633": {
      "op": "PUSH2",
      "value": "0xE39"
    },
    "3636": {
      "op": "DUP4"
    },
    "3637": {
      "op": "PUSH2",
      "value": "0xE01"
    },
    "3640": {
      "jump": "i",
      "op": "JUMP"
    },
    "3641": {
      "op": "JUMPDEST"
    },
    "3642": {
      "op": "SWAP5"
    },
    "3643": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3645": {
      "op": "SWAP4"
    },
    "3646": {
      "op": "SWAP1"
    },
    "3647": {
      "op": "SWAP4"
    },
    "3648": {
      "op": "ADD"
    },
    "3649": {
      "op": "CALLDATALOAD"
    },
    "3650": {
      "op": "SWAP4"
    },
    "3651": {
      "op": "POP"
    },
    "3652": {
      "op": "POP"
    },
    "3653": {
      "op": "POP"
    },
    "3654": {
      "jump": "o",
      "op": "JUMP"
    },
    "3655": {
      "op": "JUMPDEST"
    },
    "3656": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3658": {
      "op": "DUP1"
    },
    "3659": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3661": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3663": {
      "op": "DUP5"
    },
    "3664": {
      "op": "DUP7"
    },
    "3665": {
      "op": "SUB"
    },
    "3666": {
      "op": "SLT"
    },
    "3667": {
      "op": "ISZERO"
    },
    "3668": {
      "op": "PUSH2",
      "value": "0xE5C"
    },
    "3671": {
      "op": "JUMPI"
    },
    "3672": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3674": {
      "op": "DUP1"
    },
    "3675": {
      "op": "REVERT"
    },
    "3676": {
      "op": "JUMPDEST"
    },
    "3677": {
      "op": "PUSH2",
      "value": "0xE65"
    },
    "3680": {
      "op": "DUP5"
    },
    "3681": {
      "op": "PUSH2",
      "value": "0xE01"
    },
    "3684": {
      "jump": "i",
      "op": "JUMP"
    },
    "3685": {
      "op": "JUMPDEST"
    },
    "3686": {
      "op": "SWAP3"
    },
    "3687": {
      "op": "POP"
    },
    "3688": {
      "op": "PUSH2",
      "value": "0xE73"
    },
    "3691": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3693": {
      "op": "DUP6"
    },
    "3694": {
      "op": "ADD"
    },
    "3695": {
      "op": "PUSH2",
      "value": "0xE01"
    },
    "3698": {
      "jump": "i",
      "op": "JUMP"
    },
    "3699": {
      "op": "JUMPDEST"
    },
    "3700": {
      "op": "SWAP2"
    },
    "3701": {
      "op": "POP"
    },
    "3702": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3704": {
      "op": "DUP5"
    },
    "3705": {
      "op": "ADD"
    },
    "3706": {
      "op": "CALLDATALOAD"
    },
    "3707": {
      "op": "SWAP1"
    },
    "3708": {
      "op": "POP"
    },
    "3709": {
      "op": "SWAP3"
    },
    "3710": {
      "op": "POP"
    },
    "3711": {
      "op": "SWAP3"
    },
    "3712": {
      "op": "POP"
    },
    "3713": {
      "op": "SWAP3"
    },
    "3714": {
      "jump": "o",
      "op": "JUMP"
    },
    "3715": {
      "op": "JUMPDEST"
    },
    "3716": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3718": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3720": {
      "op": "DUP3"
    },
    "3721": {
      "op": "DUP5"
    },
    "3722": {
      "op": "SUB"
    },
    "3723": {
      "op": "SLT"
    },
    "3724": {
      "op": "ISZERO"
    },
    "3725": {
      "op": "PUSH2",
      "value": "0xE95"
    },
    "3728": {
      "op": "JUMPI"
    },
    "3729": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3731": {
      "op": "DUP1"
    },
    "3732": {
      "op": "REVERT"
    },
    "3733": {
      "op": "JUMPDEST"
    },
    "3734": {
      "op": "PUSH2",
      "value": "0x73C"
    },
    "3737": {
      "op": "DUP3"
    },
    "3738": {
      "op": "PUSH2",
      "value": "0xE01"
    },
    "3741": {
      "jump": "i",
      "op": "JUMP"
    },
    "3742": {
      "op": "JUMPDEST"
    },
    "3743": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3745": {
      "op": "DUP1"
    },
    "3746": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3748": {
      "op": "DUP4"
    },
    "3749": {
      "op": "DUP6"
    },
    "3750": {
      "op": "SUB"
    },
    "3751": {
      "op": "SLT"
    },
    "3752": {
      "op": "ISZERO"
    },
    "3753": {
      "op": "PUSH2",
      "value": "0xEB1"
    },
    "3756": {
      "op": "JUMPI"
    },
    "3757": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3759": {
      "op": "DUP1"
    },
    "3760": {
      "op": "REVERT"
    },
    "3761": {
      "op": "JUMPDEST"
    },
    "3762": {
      "op": "PUSH2",
      "value": "0xEBA"
    },
    "3765": {
      "op": "DUP4"
    },
    "3766": {
      "op": "PUSH2",
      "value": "0xE01"
    },
    "3769": {
      "jump": "i",
      "op": "JUMP"
    },
    "3770": {
      "op": "JUMPDEST"
    },
    "3771": {
      "op": "SWAP2"
    },
    "3772": {
      "op": "POP"
    },
    "3773": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3775": {
      "op": "DUP4"
    },
    "3776": {
      "op": "ADD"
    },
    "3777": {
      "op": "CALLDATALOAD"
    },
    "3778": {
      "op": "DUP1"
    },
    "3779": {
      "op": "ISZERO"
    },
    "3780": {
      "op": "ISZERO"
    },
    "3781": {
      "op": "DUP2"
    },
    "3782": {
      "op": "EQ"
    },
    "3783": {
      "op": "PUSH2",
      "value": "0xECF"
    },
    "3786": {
      "op": "JUMPI"
    },
    "3787": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3789": {
      "op": "DUP1"
    },
    "3790": {
      "op": "REVERT"
    },
    "3791": {
      "op": "JUMPDEST"
    },
    "3792": {
      "op": "DUP1"
    },
    "3793": {
      "op": "SWAP2"
    },
    "3794": {
      "op": "POP"
    },
    "3795": {
      "op": "POP"
    },
    "3796": {
      "op": "SWAP3"
    },
    "3797": {
      "op": "POP"
    },
    "3798": {
      "op": "SWAP3"
    },
    "3799": {
      "op": "SWAP1"
    },
    "3800": {
      "op": "POP"
    },
    "3801": {
      "jump": "o",
      "op": "JUMP"
    },
    "3802": {
      "op": "JUMPDEST"
    },
    "3803": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3808": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3810": {
      "op": "SHL"
    },
    "3811": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3813": {
      "op": "MSTORE"
    },
    "3814": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "3816": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3818": {
      "op": "MSTORE"
    },
    "3819": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3821": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3823": {
      "op": "REVERT"
    },
    "3824": {
      "op": "JUMPDEST"
    },
    "3825": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3827": {
      "op": "DUP1"
    },
    "3828": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3830": {
      "op": "DUP1"
    },
    "3831": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3833": {
      "op": "DUP6"
    },
    "3834": {
      "op": "DUP8"
    },
    "3835": {
      "op": "SUB"
    },
    "3836": {
      "op": "SLT"
    },
    "3837": {
      "op": "ISZERO"
    },
    "3838": {
      "op": "PUSH2",
      "value": "0xF06"
    },
    "3841": {
      "op": "JUMPI"
    },
    "3842": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3844": {
      "op": "DUP1"
    },
    "3845": {
      "op": "REVERT"
    },
    "3846": {
      "op": "JUMPDEST"
    },
    "3847": {
      "op": "PUSH2",
      "value": "0xF0F"
    },
    "3850": {
      "op": "DUP6"
    },
    "3851": {
      "op": "PUSH2",
      "value": "0xE01"
    },
    "3854": {
      "jump": "i",
      "op": "JUMP"
    },
    "3855": {
      "op": "JUMPDEST"
    },
    "3856": {
      "op": "SWAP4"
    },
    "3857": {
      "op": "POP"
    },
    "3858": {
      "op": "PUSH2",
      "value": "0xF1D"
    },
    "3861": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3863": {
      "op": "DUP7"
    },
    "3864": {
      "op": "ADD"
    },
    "3865": {
      "op": "PUSH2",
      "value": "0xE01"
    },
    "3868": {
      "jump": "i",
      "op": "JUMP"
    },
    "3869": {
      "op": "JUMPDEST"
    },
    "3870": {
      "op": "SWAP3"
    },
    "3871": {
      "op": "POP"
    },
    "3872": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3874": {
      "op": "DUP6"
    },
    "3875": {
      "op": "ADD"
    },
    "3876": {
      "op": "CALLDATALOAD"
    },
    "3877": {
      "op": "SWAP2"
    },
    "3878": {
      "op": "POP"
    },
    "3879": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3881": {
      "op": "DUP6"
    },
    "3882": {
      "op": "ADD"
    },
    "3883": {
      "op": "CALLDATALOAD"
    },
    "3884": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3893": {
      "op": "DUP1"
    },
    "3894": {
      "op": "DUP3"
    },
    "3895": {
      "op": "GT"
    },
    "3896": {
      "op": "ISZERO"
    },
    "3897": {
      "op": "PUSH2",
      "value": "0xF41"
    },
    "3900": {
      "op": "JUMPI"
    },
    "3901": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3903": {
      "op": "DUP1"
    },
    "3904": {
      "op": "REVERT"
    },
    "3905": {
      "op": "JUMPDEST"
    },
    "3906": {
      "op": "DUP2"
    },
    "3907": {
      "op": "DUP8"
    },
    "3908": {
      "op": "ADD"
    },
    "3909": {
      "op": "SWAP2"
    },
    "3910": {
      "op": "POP"
    },
    "3911": {
      "op": "DUP8"
    },
    "3912": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3914": {
      "op": "DUP4"
    },
    "3915": {
      "op": "ADD"
    },
    "3916": {
      "op": "SLT"
    },
    "3917": {
      "op": "PUSH2",
      "value": "0xF55"
    },
    "3920": {
      "op": "JUMPI"
    },
    "3921": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3923": {
      "op": "DUP1"
    },
    "3924": {
      "op": "REVERT"
    },
    "3925": {
      "op": "JUMPDEST"
    },
    "3926": {
      "op": "DUP2"
    },
    "3927": {
      "op": "CALLDATALOAD"
    },
    "3928": {
      "op": "DUP2"
    },
    "3929": {
      "op": "DUP2"
    },
    "3930": {
      "op": "GT"
    },
    "3931": {
      "op": "ISZERO"
    },
    "3932": {
      "op": "PUSH2",
      "value": "0xF67"
    },
    "3935": {
      "op": "JUMPI"
    },
    "3936": {
      "op": "PUSH2",
      "value": "0xF67"
    },
    "3939": {
      "op": "PUSH2",
      "value": "0xEDA"
    },
    "3942": {
      "jump": "i",
      "op": "JUMP"
    },
    "3943": {
      "op": "JUMPDEST"
    },
    "3944": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3946": {
      "op": "MLOAD"
    },
    "3947": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3949": {
      "op": "DUP3"
    },
    "3950": {
      "op": "ADD"
    },
    "3951": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3953": {
      "op": "NOT"
    },
    "3954": {
      "op": "SWAP1"
    },
    "3955": {
      "op": "DUP2"
    },
    "3956": {
      "op": "AND"
    },
    "3957": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "3959": {
      "op": "ADD"
    },
    "3960": {
      "op": "AND"
    },
    "3961": {
      "op": "DUP2"
    },
    "3962": {
      "op": "ADD"
    },
    "3963": {
      "op": "SWAP1"
    },
    "3964": {
      "op": "DUP4"
    },
    "3965": {
      "op": "DUP3"
    },
    "3966": {
      "op": "GT"
    },
    "3967": {
      "op": "DUP2"
    },
    "3968": {
      "op": "DUP4"
    },
    "3969": {
      "op": "LT"
    },
    "3970": {
      "op": "OR"
    },
    "3971": {
      "op": "ISZERO"
    },
    "3972": {
      "op": "PUSH2",
      "value": "0xF8F"
    },
    "3975": {
      "op": "JUMPI"
    },
    "3976": {
      "op": "PUSH2",
      "value": "0xF8F"
    },
    "3979": {
      "op": "PUSH2",
      "value": "0xEDA"
    },
    "3982": {
      "jump": "i",
      "op": "JUMP"
    },
    "3983": {
      "op": "JUMPDEST"
    },
    "3984": {
      "op": "DUP2"
    },
    "3985": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3987": {
      "op": "MSTORE"
    },
    "3988": {
      "op": "DUP3"
    },
    "3989": {
      "op": "DUP2"
    },
    "3990": {
      "op": "MSTORE"
    },
    "3991": {
      "op": "DUP11"
    },
    "3992": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3994": {
      "op": "DUP5"
    },
    "3995": {
      "op": "DUP8"
    },
    "3996": {
      "op": "ADD"
    },
    "3997": {
      "op": "ADD"
    },
    "3998": {
      "op": "GT"
    },
    "3999": {
      "op": "ISZERO"
    },
    "4000": {
      "op": "PUSH2",
      "value": "0xFA8"
    },
    "4003": {
      "op": "JUMPI"
    },
    "4004": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4006": {
      "op": "DUP1"
    },
    "4007": {
      "op": "REVERT"
    },
    "4008": {
      "op": "JUMPDEST"
    },
    "4009": {
      "op": "DUP3"
    },
    "4010": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4012": {
      "op": "DUP7"
    },
    "4013": {
      "op": "ADD"
    },
    "4014": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4016": {
      "op": "DUP4"
    },
    "4017": {
      "op": "ADD"
    },
    "4018": {
      "op": "CALLDATACOPY"
    },
    "4019": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4021": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4023": {
      "op": "DUP5"
    },
    "4024": {
      "op": "DUP4"
    },
    "4025": {
      "op": "ADD"
    },
    "4026": {
      "op": "ADD"
    },
    "4027": {
      "op": "MSTORE"
    },
    "4028": {
      "op": "DUP1"
    },
    "4029": {
      "op": "SWAP6"
    },
    "4030": {
      "op": "POP"
    },
    "4031": {
      "op": "POP"
    },
    "4032": {
      "op": "POP"
    },
    "4033": {
      "op": "POP"
    },
    "4034": {
      "op": "POP"
    },
    "4035": {
      "op": "POP"
    },
    "4036": {
      "op": "SWAP3"
    },
    "4037": {
      "op": "SWAP6"
    },
    "4038": {
      "op": "SWAP2"
    },
    "4039": {
      "op": "SWAP5"
    },
    "4040": {
      "op": "POP"
    },
    "4041": {
      "op": "SWAP3"
    },
    "4042": {
      "op": "POP"
    },
    "4043": {
      "jump": "o",
      "op": "JUMP"
    },
    "4044": {
      "op": "JUMPDEST"
    },
    "4045": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4047": {
      "op": "DUP1"
    },
    "4048": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4050": {
      "op": "DUP4"
    },
    "4051": {
      "op": "DUP6"
    },
    "4052": {
      "op": "SUB"
    },
    "4053": {
      "op": "SLT"
    },
    "4054": {
      "op": "ISZERO"
    },
    "4055": {
      "op": "PUSH2",
      "value": "0xFDF"
    },
    "4058": {
      "op": "JUMPI"
    },
    "4059": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4061": {
      "op": "DUP1"
    },
    "4062": {
      "op": "REVERT"
    },
    "4063": {
      "op": "JUMPDEST"
    },
    "4064": {
      "op": "PUSH2",
      "value": "0xFE8"
    },
    "4067": {
      "op": "DUP4"
    },
    "4068": {
      "op": "PUSH2",
      "value": "0xE01"
    },
    "4071": {
      "jump": "i",
      "op": "JUMP"
    },
    "4072": {
      "op": "JUMPDEST"
    },
    "4073": {
      "op": "SWAP2"
    },
    "4074": {
      "op": "POP"
    },
    "4075": {
      "op": "PUSH2",
      "value": "0xFF6"
    },
    "4078": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4080": {
      "op": "DUP5"
    },
    "4081": {
      "op": "ADD"
    },
    "4082": {
      "op": "PUSH2",
      "value": "0xE01"
    },
    "4085": {
      "jump": "i",
      "op": "JUMP"
    },
    "4086": {
      "op": "JUMPDEST"
    },
    "4087": {
      "op": "SWAP1"
    },
    "4088": {
      "op": "POP"
    },
    "4089": {
      "op": "SWAP3"
    },
    "4090": {
      "op": "POP"
    },
    "4091": {
      "op": "SWAP3"
    },
    "4092": {
      "op": "SWAP1"
    },
    "4093": {
      "op": "POP"
    },
    "4094": {
      "jump": "o",
      "op": "JUMP"
    },
    "4095": {
      "op": "JUMPDEST"
    },
    "4096": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4098": {
      "op": "DUP2"
    },
    "4099": {
      "op": "DUP2"
    },
    "4100": {
      "op": "SHR"
    },
    "4101": {
      "op": "SWAP1"
    },
    "4102": {
      "op": "DUP3"
    },
    "4103": {
      "op": "AND"
    },
    "4104": {
      "op": "DUP1"
    },
    "4105": {
      "op": "PUSH2",
      "value": "0x1013"
    },
    "4108": {
      "op": "JUMPI"
    },
    "4109": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "4111": {
      "op": "DUP3"
    },
    "4112": {
      "op": "AND"
    },
    "4113": {
      "op": "SWAP2"
    },
    "4114": {
      "op": "POP"
    },
    "4115": {
      "op": "JUMPDEST"
    },
    "4116": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4118": {
      "op": "DUP3"
    },
    "4119": {
      "op": "LT"
    },
    "4120": {
      "op": "DUP2"
    },
    "4121": {
      "op": "SUB"
    },
    "4122": {
      "op": "PUSH2",
      "value": "0x1033"
    },
    "4125": {
      "op": "JUMPI"
    },
    "4126": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4131": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4133": {
      "op": "SHL"
    },
    "4134": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4136": {
      "op": "MSTORE"
    },
    "4137": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "4139": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4141": {
      "op": "MSTORE"
    },
    "4142": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4144": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4146": {
      "op": "REVERT"
    },
    "4147": {
      "op": "JUMPDEST"
    },
    "4148": {
      "op": "POP"
    },
    "4149": {
      "op": "SWAP2"
    },
    "4150": {
      "op": "SWAP1"
    },
    "4151": {
      "op": "POP"
    },
    "4152": {
      "jump": "o",
      "op": "JUMP"
    },
    "4153": {
      "op": "JUMPDEST"
    },
    "4154": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4156": {
      "op": "DUP1"
    },
    "4157": {
      "op": "DUP3"
    },
    "4158": {
      "op": "MSTORE"
    },
    "4159": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "4161": {
      "op": "SWAP1"
    },
    "4162": {
      "op": "DUP3"
    },
    "4163": {
      "op": "ADD"
    },
    "4164": {
      "op": "MSTORE"
    },
    "4165": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F"
    },
    "4198": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4200": {
      "op": "DUP3"
    },
    "4201": {
      "op": "ADD"
    },
    "4202": {
      "op": "MSTORE"
    },
    "4203": {
      "op": "PUSH17",
      "value": "0x1DDB995C881B9BDC88185C1C1C9BDD9959"
    },
    "4221": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "4223": {
      "op": "SHL"
    },
    "4224": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4226": {
      "op": "DUP3"
    },
    "4227": {
      "op": "ADD"
    },
    "4228": {
      "op": "MSTORE"
    },
    "4229": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4231": {
      "op": "ADD"
    },
    "4232": {
      "op": "SWAP1"
    },
    "4233": {
      "jump": "o",
      "op": "JUMP"
    },
    "4234": {
      "op": "JUMPDEST"
    },
    "4235": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4237": {
      "op": "DUP4"
    },
    "4238": {
      "op": "MLOAD"
    },
    "4239": {
      "op": "PUSH2",
      "value": "0x109C"
    },
    "4242": {
      "op": "DUP2"
    },
    "4243": {
      "op": "DUP5"
    },
    "4244": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4246": {
      "op": "DUP9"
    },
    "4247": {
      "op": "ADD"
    },
    "4248": {
      "op": "PUSH2",
      "value": "0xD7D"
    },
    "4251": {
      "jump": "i",
      "op": "JUMP"
    },
    "4252": {
      "op": "JUMPDEST"
    },
    "4253": {
      "op": "DUP4"
    },
    "4254": {
      "op": "MLOAD"
    },
    "4255": {
      "op": "SWAP1"
    },
    "4256": {
      "op": "DUP4"
    },
    "4257": {
      "op": "ADD"
    },
    "4258": {
      "op": "SWAP1"
    },
    "4259": {
      "op": "PUSH2",
      "value": "0x10B0"
    },
    "4262": {
      "op": "DUP2"
    },
    "4263": {
      "op": "DUP4"
    },
    "4264": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4266": {
      "op": "DUP9"
    },
    "4267": {
      "op": "ADD"
    },
    "4268": {
      "op": "PUSH2",
      "value": "0xD7D"
    },
    "4271": {
      "jump": "i",
      "op": "JUMP"
    },
    "4272": {
      "op": "JUMPDEST"
    },
    "4273": {
      "op": "ADD"
    },
    "4274": {
      "op": "SWAP5"
    },
    "4275": {
      "op": "SWAP4"
    },
    "4276": {
      "op": "POP"
    },
    "4277": {
      "op": "POP"
    },
    "4278": {
      "op": "POP"
    },
    "4279": {
      "op": "POP"
    },
    "4280": {
      "jump": "o",
      "op": "JUMP"
    },
    "4281": {
      "op": "JUMPDEST"
    },
    "4282": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4287": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4289": {
      "op": "SHL"
    },
    "4290": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4292": {
      "op": "MSTORE"
    },
    "4293": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4295": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4297": {
      "op": "MSTORE"
    },
    "4298": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4300": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4302": {
      "op": "REVERT"
    },
    "4303": {
      "op": "JUMPDEST"
    },
    "4304": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4306": {
      "op": "DUP3"
    },
    "4307": {
      "op": "DUP3"
    },
    "4308": {
      "op": "LT"
    },
    "4309": {
      "op": "ISZERO"
    },
    "4310": {
      "op": "PUSH2",
      "value": "0x10E1"
    },
    "4313": {
      "op": "JUMPI"
    },
    "4314": {
      "op": "PUSH2",
      "value": "0x10E1"
    },
    "4317": {
      "op": "PUSH2",
      "value": "0x10B9"
    },
    "4320": {
      "jump": "i",
      "op": "JUMP"
    },
    "4321": {
      "op": "JUMPDEST"
    },
    "4322": {
      "op": "POP"
    },
    "4323": {
      "op": "SUB"
    },
    "4324": {
      "op": "SWAP1"
    },
    "4325": {
      "jump": "o",
      "op": "JUMP"
    },
    "4326": {
      "op": "JUMPDEST"
    },
    "4327": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4329": {
      "op": "DUP3"
    },
    "4330": {
      "op": "NOT"
    },
    "4331": {
      "op": "DUP3"
    },
    "4332": {
      "op": "GT"
    },
    "4333": {
      "op": "ISZERO"
    },
    "4334": {
      "op": "PUSH2",
      "value": "0x10F9"
    },
    "4337": {
      "op": "JUMPI"
    },
    "4338": {
      "op": "PUSH2",
      "value": "0x10F9"
    },
    "4341": {
      "op": "PUSH2",
      "value": "0x10B9"
    },
    "4344": {
      "jump": "i",
      "op": "JUMP"
    },
    "4345": {
      "op": "JUMPDEST"
    },
    "4346": {
      "op": "POP"
    },
    "4347": {
      "op": "ADD"
    },
    "4348": {
      "op": "SWAP1"
    },
    "4349": {
      "jump": "o",
      "op": "JUMP"
    },
    "4350": {
      "op": "JUMPDEST"
    },
    "4351": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4353": {
      "op": "DUP1"
    },
    "4354": {
      "op": "DUP3"
    },
    "4355": {
      "op": "MSTORE"
    },
    "4356": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "4358": {
      "op": "SWAP1"
    },
    "4359": {
      "op": "DUP3"
    },
    "4360": {
      "op": "ADD"
    },
    "4361": {
      "op": "MSTORE"
    },
    "4362": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
    },
    "4395": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4397": {
      "op": "DUP3"
    },
    "4398": {
      "op": "ADD"
    },
    "4399": {
      "op": "MSTORE"
    },
    "4400": {
      "op": "PUSH18",
      "value": "0x31B2B4BB32B91034B6B83632B6B2B73A32B9"
    },
    "4419": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "4421": {
      "op": "SHL"
    },
    "4422": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4424": {
      "op": "DUP3"
    },
    "4425": {
      "op": "ADD"
    },
    "4426": {
      "op": "MSTORE"
    },
    "4427": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4429": {
      "op": "ADD"
    },
    "4430": {
      "op": "SWAP1"
    },
    "4431": {
      "jump": "o",
      "op": "JUMP"
    },
    "4432": {
      "op": "JUMPDEST"
    },
    "4433": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4435": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4437": {
      "op": "DUP3"
    },
    "4438": {
      "op": "ADD"
    },
    "4439": {
      "op": "PUSH2",
      "value": "0x1162"
    },
    "4442": {
      "op": "JUMPI"
    },
    "4443": {
      "op": "PUSH2",
      "value": "0x1162"
    },
    "4446": {
      "op": "PUSH2",
      "value": "0x10B9"
    },
    "4449": {
      "jump": "i",
      "op": "JUMP"
    },
    "4450": {
      "op": "JUMPDEST"
    },
    "4451": {
      "op": "POP"
    },
    "4452": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4454": {
      "op": "ADD"
    },
    "4455": {
      "op": "SWAP1"
    },
    "4456": {
      "jump": "o",
      "op": "JUMP"
    },
    "4457": {
      "op": "JUMPDEST"
    },
    "4458": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4463": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4465": {
      "op": "SHL"
    },
    "4466": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4468": {
      "op": "MSTORE"
    },
    "4469": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "4471": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4473": {
      "op": "MSTORE"
    },
    "4474": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4476": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4478": {
      "op": "REVERT"
    },
    "4479": {
      "op": "JUMPDEST"
    },
    "4480": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4482": {
      "op": "DUP3"
    },
    "4483": {
      "op": "PUSH2",
      "value": "0x118E"
    },
    "4486": {
      "op": "JUMPI"
    },
    "4487": {
      "op": "PUSH2",
      "value": "0x118E"
    },
    "4490": {
      "op": "PUSH2",
      "value": "0x1169"
    },
    "4493": {
      "jump": "i",
      "op": "JUMP"
    },
    "4494": {
      "op": "JUMPDEST"
    },
    "4495": {
      "op": "POP"
    },
    "4496": {
      "op": "DIV"
    },
    "4497": {
      "op": "SWAP1"
    },
    "4498": {
      "jump": "o",
      "op": "JUMP"
    },
    "4499": {
      "op": "JUMPDEST"
    },
    "4500": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4502": {
      "op": "DUP3"
    },
    "4503": {
      "op": "PUSH2",
      "value": "0x11A2"
    },
    "4506": {
      "op": "JUMPI"
    },
    "4507": {
      "op": "PUSH2",
      "value": "0x11A2"
    },
    "4510": {
      "op": "PUSH2",
      "value": "0x1169"
    },
    "4513": {
      "jump": "i",
      "op": "JUMP"
    },
    "4514": {
      "op": "JUMPDEST"
    },
    "4515": {
      "op": "POP"
    },
    "4516": {
      "op": "MOD"
    },
    "4517": {
      "op": "SWAP1"
    },
    "4518": {
      "jump": "o",
      "op": "JUMP"
    },
    "4519": {
      "op": "JUMPDEST"
    },
    "4520": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4525": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4527": {
      "op": "SHL"
    },
    "4528": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4530": {
      "op": "MSTORE"
    },
    "4531": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "4533": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4535": {
      "op": "MSTORE"
    },
    "4536": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4538": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4540": {
      "op": "REVERT"
    },
    "4541": {
      "op": "JUMPDEST"
    },
    "4542": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4544": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4546": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4548": {
      "op": "SHL"
    },
    "4549": {
      "op": "SUB"
    },
    "4550": {
      "op": "DUP6"
    },
    "4551": {
      "op": "DUP2"
    },
    "4552": {
      "op": "AND"
    },
    "4553": {
      "op": "DUP3"
    },
    "4554": {
      "op": "MSTORE"
    },
    "4555": {
      "op": "DUP5"
    },
    "4556": {
      "op": "AND"
    },
    "4557": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4559": {
      "op": "DUP3"
    },
    "4560": {
      "op": "ADD"
    },
    "4561": {
      "op": "MSTORE"
    },
    "4562": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4564": {
      "op": "DUP2"
    },
    "4565": {
      "op": "ADD"
    },
    "4566": {
      "op": "DUP4"
    },
    "4567": {
      "op": "SWAP1"
    },
    "4568": {
      "op": "MSTORE"
    },
    "4569": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4571": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4573": {
      "op": "DUP3"
    },
    "4574": {
      "op": "ADD"
    },
    "4575": {
      "op": "DUP2"
    },
    "4576": {
      "op": "SWAP1"
    },
    "4577": {
      "op": "MSTORE"
    },
    "4578": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4580": {
      "op": "SWAP1"
    },
    "4581": {
      "op": "PUSH2",
      "value": "0x11F0"
    },
    "4584": {
      "op": "SWAP1"
    },
    "4585": {
      "op": "DUP4"
    },
    "4586": {
      "op": "ADD"
    },
    "4587": {
      "op": "DUP5"
    },
    "4588": {
      "op": "PUSH2",
      "value": "0xDA9"
    },
    "4591": {
      "jump": "i",
      "op": "JUMP"
    },
    "4592": {
      "op": "JUMPDEST"
    },
    "4593": {
      "op": "SWAP7"
    },
    "4594": {
      "op": "SWAP6"
    },
    "4595": {
      "op": "POP"
    },
    "4596": {
      "op": "POP"
    },
    "4597": {
      "op": "POP"
    },
    "4598": {
      "op": "POP"
    },
    "4599": {
      "op": "POP"
    },
    "4600": {
      "op": "POP"
    },
    "4601": {
      "jump": "o",
      "op": "JUMP"
    },
    "4602": {
      "op": "JUMPDEST"
    },
    "4603": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4605": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4607": {
      "op": "DUP3"
    },
    "4608": {
      "op": "DUP5"
    },
    "4609": {
      "op": "SUB"
    },
    "4610": {
      "op": "SLT"
    },
    "4611": {
      "op": "ISZERO"
    },
    "4612": {
      "op": "PUSH2",
      "value": "0x120C"
    },
    "4615": {
      "op": "JUMPI"
    },
    "4616": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4618": {
      "op": "DUP1"
    },
    "4619": {
      "op": "REVERT"
    },
    "4620": {
      "op": "JUMPDEST"
    },
    "4621": {
      "op": "DUP2"
    },
    "4622": {
      "op": "MLOAD"
    },
    "4623": {
      "op": "PUSH2",
      "value": "0x73C"
    },
    "4626": {
      "op": "DUP2"
    },
    "4627": {
      "op": "PUSH2",
      "value": "0xD47"
    },
    "4630": {
      "jump": "i",
      "op": "JUMP"
    }
  },
  "sha1": "94040f5f904754bdb4d6186c69a726e43507927c",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./extensions/IERC721Metadata.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Strings.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: balance query for the zero address\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _owners[tokenId];\n        require(owner != address(0), \"ERC721: owner query for nonexistent token\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\");\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not owner nor approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        require(_exists(tokenId), \"ERC721: approved query for nonexistent token\");\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n        _safeTransfer(from, to, tokenId, _data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, _data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _owners[tokenId] != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        require(_exists(tokenId), \"ERC721: operator query for nonexistent token\");\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, _data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId);\n\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n\n        _afterTokenTransfer(address(0), to, tokenId);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId);\n\n        // Clear approvals\n        _approve(address(0), tokenId);\n\n        _balances[owner] -= 1;\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n\n        _afterTokenTransfer(owner, address(0), tokenId);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId);\n\n        // Clear approvals from the previous owner\n        _approve(address(0), tokenId);\n\n        _balances[from] -= 1;\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        _afterTokenTransfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits a {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits a {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param _data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n}\n",
  "sourceMap": "628:13658:10:-:0;;;1390:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1456:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;1479:17:10;;;;:7;;:17;;;;;:::i;:::-;;1390:113;;628:13658;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;628:13658:10;;;-1:-1:-1;628:13658:10;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:23;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:23;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:23;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:23:o;1036:562::-;1135:6;1143;1196:2;1184:9;1175:7;1171:23;1167:32;1164:52;;;1212:1;1209;1202:12;1164:52;1239:16;;-1:-1:-1;;;;;1304:14:23;;;1301:34;;;1331:1;1328;1321:12;1301:34;1354:61;1407:7;1398:6;1387:9;1383:22;1354:61;:::i;:::-;1344:71;;1461:2;1450:9;1446:18;1440:25;1424:41;;1490:2;1480:8;1477:16;1474:36;;;1506:1;1503;1496:12;1474:36;;1529:63;1584:7;1573:8;1562:9;1558:24;1529:63;:::i;:::-;1519:73;;;1036:562;;;;;:::o;1603:380::-;1682:1;1678:12;;;;1725;;;1746:61;;1800:4;1792:6;1788:17;1778:27;;1746:61;1853:2;1845:6;1842:14;1822:18;1819:38;1816:161;;1899:10;1894:3;1890:20;1887:1;1880:31;1934:4;1931:1;1924:15;1962:4;1959:1;1952:15;1816:161;;1603:380;;;:::o;:::-;628:13658:10;;;;;;",
  "sourcePath": "/Users/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/token/ERC721/ERC721.sol",
  "type": "contract"
}